(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    368744,       7917]
NotebookOptionsPosition[    354440,       7675]
NotebookOutlinePosition[    354833,       7691]
CellTagsIndexPosition[    354790,       7688]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["2021 - 06 - 13 , some excercises from the book", "Text",
 CellChangeTimes->{{3.8325802978594027`*^9, 
  3.8325803321317177`*^9}},ExpressionUUID->"da155ef8-9f40-42f9-8f3c-\
6b0c87c82191"],

Cell[BoxData["40.1"], "Input",
 CellChangeTimes->{{3.8325803388664007`*^9, 
  3.83258034321049*^9}},ExpressionUUID->"d727c440-dfe0-405d-a753-\
8b7d50d6fa7b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.83258036671311*^9, 3.83258036878671*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"26daba08-b995-4a5c-b6d9-3922ed00776a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"sq", "[", "t_", "]"}], "=", 
   RowBox[{"t", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.8325803451449614`*^9, 3.832580377658387*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"945631e1-f79a-4da2-a309-34a0c5f56e2b"],

Cell[BoxData[
 SuperscriptBox["t", "2"]], "Output",
 CellChangeTimes->{{3.8325803562881403`*^9, 3.832580377874629*^9}},
 CellLabel->
  "Out[302]=",ExpressionUUID->"0fe035d1-67c1-41dc-811b-fb8b35e36bca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sq", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.832580373252821*^9, 3.832580373921702*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"4506521a-bdc2-4cb0-8edc-8366e11f596a"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.832580374177984*^9, 3.832580379779965*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"0ada0579-aa0f-4d98-9cc1-8de5a8a20709"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"poly", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"RegularPolygon", "[", "n", "]"}], ",", "Orange"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.83258039773317*^9, 3.832580450040955*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"38a175e3-d3e7-4ac4-81c1-89777dddfa48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"poly", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "3", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832580422650334*^9, 3.83258042450309*^9}, {
  3.832580455820341*^9, 3.832580461505344*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"2a411216-5f30-43d0-91ff-917e1e31c775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {0, 1}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}}, {{
         0.8660254037844386, -0.5}, {0, 1}, {-0.8660254037844386, -0.5}}]],
      RegularPolygon[3]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
         2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
          Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
        0.7071067811865475}, {-0.7071067811865475, 
        0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]],
      RegularPolygon[4]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
          Rational[1, 2], 
          Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
          Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 
         1}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
           Rational[1, 2], 
          Rational[1, 4] (-1 + 
           5^Rational[1, 2])}, {-(Rational[5, 8] + 
            Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
          Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
         0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
         0.30901699437494745`}, {0, 1}, {-0.9510565162951535, 
         0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}}]],
      
      RegularPolygon[5]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Rational[1, 2], Rational[-1, 2] 3^Rational[1, 2]}, {1, 0}, {
         Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {
         Rational[-1, 2], Rational[1, 2] 3^Rational[1, 2]}, {-1, 0}, {
         Rational[-1, 2], Rational[-1, 2] 3^Rational[1, 2]}}, {{
         0.5, -0.8660254037844386}, {1, 0}, {0.5, 0.8660254037844386}, {-0.5, 
         0.8660254037844386}, {-1, 0}, {-0.5, -0.8660254037844386}}]],
      RegularPolygon[6]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Sin[Rational[1, 7] Pi], -Cos[Rational[1, 7] Pi]}, {
         Cos[Rational[1, 14] Pi], -Sin[Rational[1, 14] Pi]}, {
         Cos[Rational[3, 14] Pi], Sin[Rational[3, 14] Pi]}, {0, 
         1}, {-Cos[Rational[3, 14] Pi], Sin[Rational[3, 14] Pi]}, {-
          Cos[Rational[1, 14] Pi], -Sin[Rational[1, 14] Pi]}, {-
          Sin[Rational[1, 7] Pi], -Cos[Rational[1, 7] Pi]}}, {{
         0.4338837391175581, -0.9009688679024191}, {
         0.9749279121818236, -0.2225209339563144}, {0.7818314824680298, 
         0.6234898018587335}, {0, 1}, {-0.7818314824680298, 
         0.6234898018587335}, {-0.9749279121818236, -0.2225209339563144}, \
{-0.4338837391175581, -0.9009688679024191}}]],
      RegularPolygon[7]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Sin[Rational[1, 8] Pi], -Cos[Rational[1, 8] Pi]}, {
         Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {
         Cos[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi]}, {
         Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}, {-
          Sin[Rational[1, 8] Pi], Cos[Rational[1, 8] Pi]}, {-
          Cos[Rational[1, 8] Pi], Sin[Rational[1, 8] Pi]}, {-
          Cos[Rational[1, 8] Pi], -Sin[Rational[1, 8] Pi]}, {-
          Sin[Rational[1, 8] Pi], -Cos[Rational[1, 8] Pi]}}, {{
        0.3826834323650898, -0.9238795325112867}, {
        0.9238795325112867, -0.3826834323650898}, {0.9238795325112867, 
        0.3826834323650898}, {0.3826834323650898, 
        0.9238795325112867}, {-0.3826834323650898, 
        0.9238795325112867}, {-0.9238795325112867, 
        0.3826834323650898}, {-0.9238795325112867, -0.3826834323650898}, \
{-0.3826834323650898, -0.9238795325112867}}]],
      RegularPolygon[8]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{Sin[Rational[1, 9] Pi], -Cos[Rational[1, 9] Pi]}, {
         Rational[1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {
         Cos[Rational[1, 18] Pi], Sin[Rational[1, 18] Pi]}, {
         Sin[Rational[2, 9] Pi], Cos[Rational[2, 9] Pi]}, {0, 
         1}, {-Sin[Rational[2, 9] Pi], Cos[Rational[2, 9] Pi]}, {-
          Cos[Rational[1, 18] Pi], Sin[Rational[1, 18] Pi]}, {
         Rational[-1, 2] 3^Rational[1, 2], Rational[-1, 2]}, {-
          Sin[Rational[1, 9] Pi], -Cos[Rational[1, 9] Pi]}}, {{
         0.3420201433256687, -0.9396926207859084}, {
         0.8660254037844386, -0.5}, {0.984807753012208, 
         0.17364817766693033`}, {0.6427876096865393, 0.7660444431189781}, {0, 
         1}, {-0.6427876096865393, 0.7660444431189781}, {-0.984807753012208, 
         0.17364817766693033`}, {-0.8660254037844386, -0.5}, \
{-0.3420201433256687, -0.9396926207859084}}]],
      RegularPolygon[9]]}], ",", 
   GraphicsBox[
    {RGBColor[1, 0.5, 0], 
     InterpretationBox[
      PolygonBox[
       NCache[{{
         Rational[1, 4] (-1 + 
           5^Rational[1, 2]), -(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
         Rational[1, 4] (1 + 
           5^Rational[1, 2]), -(Rational[5, 8] + 
            Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {1, 0}, {
         Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
         Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
         Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
         Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-1, 0}, {
         Rational[1, 4] (-1 - 5^
           Rational[1, 2]), -(Rational[5, 8] + 
            Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
         Rational[1, 4] (1 - 5^
           Rational[1, 2]), -(Rational[5, 8] + 
            Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}}, {{
         0.30901699437494745`, -0.9510565162951535}, {
         0.8090169943749475, -0.5877852522924731}, {1, 0}, {
         0.8090169943749475, 0.5877852522924731}, {0.30901699437494745`, 
         0.9510565162951535}, {-0.30901699437494745`, 
         0.9510565162951535}, {-0.8090169943749475, 0.5877852522924731}, {-1, 
         0}, {-0.8090169943749475, -0.5877852522924731}, \
{-0.30901699437494745`, -0.9510565162951535}}]],
      RegularPolygon[10]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8325804247569723`*^9, 3.83258046178246*^9}},
 CellLabel->
  "Out[310]=",ExpressionUUID->"430a27ae-ccea-4569-98b3-30353dd0e9f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_"}], "}"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"b", ",", "a"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.832580478607312*^9, 3.83258049261421*^9}},
 CellLabel->
  "In[311]:=",ExpressionUUID->"dfbc5db0-73ea-4cf9-8195-860525477fb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{3.832580493079144*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"d5d3b53b-e678-48ae-87a3-d80a472fe138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.832580495479104*^9, 3.83258050240623*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"1b115f80-a3c9-42fa-84fe-839dac73b8fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.832580497136627*^9, 3.832580502689128*^9}},
 CellLabel->
  "Out[314]=",ExpressionUUID->"04d42c03-d744-42d3-be2b-fa4914a1114e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"a", "*", 
    RowBox[{"b", "/", 
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.832580504759466*^9, 3.832580542689795*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"8c5d2de8-b321-436c-9f42-b984ee9c0dd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.832580544347846*^9, 3.832580546378004*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"eaa6fcff-fe50-4e29-b126-b28c0f418892"],

Cell[BoxData[
 FractionBox["10", "11"]], "Output",
 CellChangeTimes->{3.832580546548005*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"e67509e4-0ae0-400b-b7c2-e6526a308bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"{", 
    RowBox[{"a_", ",", "b_"}], "}"}], "]"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "+", "b"}], ",", 
    RowBox[{"a", "-", "b"}], ",", 
    RowBox[{"a", "/", "b"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.832580554847024*^9, 3.832580570941614*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"9eae309d-e1c3-463a-bf44-0268114de820"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"a", "-", "b"}], ",", 
   FractionBox["a", "b"]}], "}"}]], "Output",
 CellChangeTimes->{3.832580571601313*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"b210483f-b3a6-440d-9bd5-be2ae75a08e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.832580573079056*^9, 3.8325805797251053`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"d8701780-33ab-4fcf-91c7-d942e2119e00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   RowBox[{"-", "2"}], ",", 
   FractionBox["1", "3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.832580574568681*^9, 3.832580579952673*^9}},
 CellLabel->
  "Out[321]=",ExpressionUUID->"91fd4655-522f-4c66-bfff-c5b00cf52bf0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "evenodd", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"evenodd", "[", "0", "]"}], "=", "Red"}], ";", 
  RowBox[{
   RowBox[{"evenodd", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"EvenQ", "[", "x", "]"}], ",", "Black", ",", "White"}], "]"}]}], 
  ";", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"evenodd", "[", "x", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.832580591775381*^9, 3.8325807531290903`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"41039d16-97fa-4484-9293-a3362f9a5b4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       RowBox[{"-", "3"}]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[1],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       RowBox[{"-", "2"}]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       RowBox[{"-", "1"}]},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[1],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"0"},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
         
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0, 0],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[1],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"2"},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[0],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"3"},
      {
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           FrameStyle->GrayLevel[0.6666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["GrayLevelColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        GrayLevel[1],
        Editable->False,
        Selectable->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{{3.832580655951766*^9, 3.832580710680787*^9}, 
   3.83258076535681*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"d6916bff-dc23-43ad-82b9-51dedf8b466f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"EvenQ", "[", "2", "]"}], ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.832580666146803*^9, 3.832580688463889*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"e399014b-f333-4071-9571-021d01d605b1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.832580668219625*^9, 3.8325806886931877`*^9}},
 CellLabel->
  "Out[328]=",ExpressionUUID->"269c7ff6-4a7b-4e9d-834c-8b73a276241d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "fib", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fib", "[", "0", "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"fib", "[", "1", "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"fib", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"fib", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "+", 
    RowBox[{"fib", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}]}], ";", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"fib", "[", "x", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.832580784048016*^9, 3.832580844464239*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"ba149b85-bf69-4eed-aabe-b7aa482cdca6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"0"},
      {"1"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"1"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"2"},
      {"2"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"3"},
      {"3"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"4"},
      {"5"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"5"},
      {"8"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"6"},
      {"13"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"7"},
      {"21"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"8"},
      {"34"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"9"},
      {"55"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"10"},
      {"89"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8325808291651*^9, 3.8325808451785097`*^9}},
 CellLabel->
  "Out[346]=",ExpressionUUID->"e8b2f48c-29e4-46bc-96fa-de573d27ceb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"animalImage", "[", "s_String", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Animal\>\"", "]"}], "[", "s", "]"}], 
    "[", "\"\<Image\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"animalImage", "[", "\"\<Tiger\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.83258086128648*^9, 3.8325808906291*^9}},
 CellLabel->
  "In[347]:=",ExpressionUUID->"5fcbc125-cef1-4fb0-bcbc-58caad90b612"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
924DS0T2ieuhunbvbZV5ka+bZoZv6xbeSSQ2HcogV+4TqsNCrKqPF8DJ4wKY
CoIzI4YVzThvE7/QFX5M8+0xxTGMIadYfb5+//Xj28937ry4G5/OxiZzloBH
alK3DXTjWaRoPja7Pic3KuZWZ5e3ljMTaXfAM7cw+6d/+vPf//3fx0MxAgrH
pjNwGGw6m/n4i0/+j//7/0xP55kiLlXAys/NRNNJrdkcS2WT2cLf/PDDH//t
n77+/ffJhenkUjG9sSB066gmHs8vAgRlKRbFNs71IVUJmsiHUwSZXBtOl+QB
XgI3TuInaZNMWQhPt/QxnX26HFaWhPbyLvfwqs0LUmGCLUiIWR6mxMNga1DN
Q9UlZ0og9F5rWt6Dr4FwbsTXRRxrxyi1tANyqrrxSEXt+eqr186dvwRqPHDO
pqaGlpamnwh2DPVcqb8gtpBiKxptEsNwdtoXaK4NjjgLtW8yuMk+SqCLGR4f
V/citBhV3jDxLC1J0gi2cfAypDkaL453rKnRtlFOhCTL8kzzKpoPw/CjlAWm
fVn07HertlWuLI/23Jbp51kk9/CYug2EbfU0x74i928ZCo8DwBhdRZ0tr48s
Bs0ZHddDUGa5siR/RDYoSrLgwJpifdYdQuyZwLpOYfigbBcxvBDYe2d3/93d
/Rd3dp/effazl8t3Nme3FiUGmdKqtgWsqen0xOKU3KjkK6QGpyM7OTO3trm9
//jzr7//57/8VSpRXa25MVmc/5f/+N+++7vfPXnv1dr+/uzm+uNXL6eWlxY2
Nz7/5pvf/fEf//Tnv/z9H37/u7/8/tf/7Tcf/s0ny/e3aBp+P2VU4BFz3Eyc
CcYLE0bETRwvQh6hENRjYjcTwukjaGDapIDjRAMxAl8VBYc8S2T7LFoY6lBl
hq8hSpqIp0dlrfwojemlO+dsgTkL34LFiXuGqPUiBwknH2mCVfRSqtGK2hZU
SQ/u+DDhytXG02Xlp+tuXL9WW3/pysVLV8rKKy9dq6uub6hraLpRP9RwsbW0
j3BT6kXm91W6DITlaNbnIQhNnSA6grN3SXJ4TpLgu2fXrKipUXL+3Vj4vpMa
QA8qOlDWEd+exX3bKMjQM8+DvCSZFoIblvj2LbF5je29K44/1fruynhZJCMK
0cwxVUU2LYgUpWjRe27LvFY3pfKv+8IbIXPBElyO5XdnLAV7aNtrXlCrJ6V4
N4rggfNyJP4k3nFHLCxgxFmcKE4R++m2lG7pbvHei521u4u339p59P5jcNx8
sL6yt5iaifrjLrPb4I56EhOZaC6bnJqZWd29/84vPv72D29/+M3rT75d3NjH
M4Rf/fAPH3/zm59/8+u57bvbj18kivOb9x/uPHr86uNf/Ov/+B8//O7vfvv7
v/v9n/7w53/505/++z9++s0vth6tCs1MGG/AXdS6FpTKDI3jRwojOITiFkre
P8a5BeWNIMQQpBKizApBjTUVGaYiRhxrF0Zu9nFLWkglqkw3THZpVHAFqWji
uuFQUSdJB7Xn1foYS51A+FfYhgwHJhwqaysdZHYQdM0sazOUXT6Mq23vaT59
pvTShcs//lzpyvnK+oorNZfPXjpTUXPlZsuNmsGrjfC6esjFeshJ+zTp5Q+5
h18EU7s8VRJKdfTwoxhulMCM4W07+sAzV/SF17Nnkk9ySC4YL0kRJqmSPIsR
wNCCaJJ7fEjVQguMuneljk0eLzPOT48oilhxAc2MjRM8g0CA9ACMHyPKMmxN
QUIwo1U//tanzZi1WCfc6a2JzNa0c8bnX3XZF/XGWRk7jOcmCMoZFi+DkxTI
QLb8CIHpwLDMGJmNHSm47jxaf+fDJ/ff2X/rwyd7T3d2n26t3lmITwadQZPG
IhdpxCqzLlaYmFnbWtx9tPP0w+2nH9198emLn39t8sQEWts7H3/9/pffv/PJ
Nx//6nebj9/eevT81RdfffD5lw/fefvDTz758tuv/vhP//jpFx99+NGrjz97
/zd/+Ob+OxtMFUpoJwo9eFmERLKM4gyDIMmw3JhRQTdE0NOCut5OaOxld49I
+wjWYeMcNb7Pcy5D1blWRaqBYCwlmcqhwjJZeFQRhHvnxLIAASboYBqxeGWv
b5UgT3a5F3jg/qwbbSZrSVzXCM3S3A4/hqC3DkNGamtazx4vO3Hs5OnSUxU3
yqtvVF2sulB5rfx6Y+2V3kst2PoOwtVm9HmIsFIeHVRE+ox5OMvZfRN5XBTF
ggiqmxfzsjTpLMv/wOze0BqLYl4Ayw3hQHfjBLHgVhQl8LoJJtbcww/DUo9M
8btqfmycGxo0LVAI9m6Ss4fk6Ke7RsAeN0/zpVEKXjNC1EJH2T10Aykw644t
Rb0FT7gYzm2nszuh4JJRnWAQdANU26g8QRRH0NIYNriqthT4qiBdZMYLdRRH
QD27mNncW8zMpVJzyUghlFtM5eaT7pjN4tEqDOIxzGhzT2s/FIKkMPSeyPTG
vfjs7WTxNktuqGvtLa1plJrc73327d6z9x9/8Mk7n359/90PUnOLicnp5Z3b
77x+/fLDV+++fpmbSLh82ndf3/noy6d7z5YGMC2dmEaoYHCA1Tkq7BkSdZNs
CEWSg9EOASU2Ya/UQkvbSQ0dtMYhQTNC1aRIjlmLcEGgQRpqlgTbhN6OEWYZ
RdvBMQ+rQiShA8V34PDycQi/0bU8Pvsu27dGU8XptrynE9vTSajCKxtre0ta
B85dvVZZf72z9GT1kTfOnDtfVtdwvbm1qe5Gbe31a9fr62rGK7qpjbco1zoI
F1qxx4dZZY3wkj7qGY6td5Rbo03T9Xmuf0unmWFr5tiBPe3ci1jqtk0VoSij
FO+cdOt1duXtSGpHr08TVXGsLoW3TTMCS0L/stCQIbKd/c5ZJsc1BBXdwKvb
1DFiYFERW9aH5rUE6RDPhDeGRIk59+q96ZX9mcJKPDXnc6fl/gm5I82Vu1Fi
O0TphhvD+OAU35vnBgriYFZuD/KdPnluyj87n05kfKFM0BKyqmwqW8hiC5ql
BgFXSkOTYXWttfUdDddaGq5cr2/qGRpCU5r6ERevt9d3D6OpvM5R5MW6llsQ
bGRiPjq9CKOybOFkKDsxu76ZmppM5rNL68sfffzhqw9efPbL977+4YP1u1O7
z5YEZurNsapxfq84wuQGyVjzmDhOJ9vheMsoqEUg1cDkPd20ln52Zxvxahuh
DKtuoFtbgO4GGCdg/MtcWxdO2kTX9RHlPThJN0gsTZBLndg6qKjRsQCJ7GAV
SYhtSko3sCgaSj+1jm3paxw6UtN8rLyyoqWhr7m2u66qubqitr29s6vrVlNT
S+PNpps3G1lOPNUKGxe2jPGvw0S1FF3LILUMI6wjyVuUAYzEg6Kbhg1ZunNB
aCoy1Sm80k9Qewgs1SBZ2kUStVnj5MK6evtFwD9Bd+cpniwtNMONFkVOgD6A
0fhQUscIUdJIlDSZI7iZbcvSvndmw5ZbNBTXnbcfZifnHcmCcf9x8eGzpcXV
2MpGfO9BujCrVZtgAkWvzgJxeFDBKDmV5c3MqecWTPMLjnzBGAxrozFLIu3y
Bs3+pE/v1issCkfE5ora9S6NzCjGMlAYGhqCg52tuFTZ0IChs/kak9IewHGk
Ir1d6/AR2EIiW4Jji6EkVl1HP54jihaK7lgqkMrE8rnHL559/vUXv/m7X3//
w7d/94fffvPrL5+8uheZdgnt5BF2cwvhsiSBVk6QZAUCCNjyHF1V4GsnpPKU
CKtF9LO7gUIbEFew6lvSEAKjaBjjlHdhT9M1nUjuzVFKHYzZ2IurlXvIrrwE
ymltgl/CKDtk0VFBcAAmaSfpEFQdMb7ukYXgPFtPTfuhy1dP3bzRcbnsRuXF
8htXrzZeb+pq7+1ovdVY39rW2N7a3CHwYECRIWn7hhnVA+TLUFb1EPEiSdyk
cSGNPgKO18LWDmoCaF0YLfGMgKPahi4UDTNLJn+MxZV2Gl3QzAxv+751YVO1
89D+7P3Eex9N7j4MukM0mXbc5MSGUszkJHdx0/Dk3cSHn82///Hcw2epjR1f
LCHU6lHhsHBvL/7safGTj/e++/oJqOkOGyGbFi3Map4+inzywdTrF6m3H4Wf
3PW+91Z6f8t/ey2wUHRaTGwGC6rUsCMpj8amBhFUZpK5Yi5f0h3M+OKTEcBR
bpThmYQLNeVcuWznyZO523vRyTmaWK22efypgskbDmYmX376lT8z2dg7rHX7
ktNzvmR6aev2s/df/epvfwAt48uvPvvv//rP3/3w269+9e32gy1LRCVyELGq
TpK1Q5qFqGZg7h1WcF8avKtxruoiewGGmz0sGO1jdUHEfZ3k6xTjqCSIZloG
RS7YCKMOwWvtxdVcbn3zzPWSa71nRE58YtWsCFH7qDf6afWdpKp+xs1OXNvl
ritEFYqiG3XPUHxFBozSdrO17lbX+LWq5obrFe0tVS0NjZ3NPc032m/UNrb+
+GsTt0ROqHda4M5zCKJmhW28sKQqzKuCSdbu/ZDFhZNrR5MTotQkPzHBKSwK
n72f+v7XD95+Ohn00rWqYacdvn/H/v6rxM8+TH3wOvH/0PTeQYmm67p3T+ie
6Zk1edaEnp7OQbu1zTnnnBPmnDNiAgMgUUBEQQGRjEgUJIiKioo5Z1s7Ts+s
WWvvc3adferUqfr++55e833WXW897wNSNL/3uu7rti3frc0Bpby1vTWioTYY
1ZlBwBQSMPltzdFsZsXCHGVznWkyEJiMKiQiqakuHA6NwXVl6pWEdQtnRkNZ
NA5J2PD0WFtYTZhC3DZv6DWMd7B680nweDGtzCBs0/LaRymVHGo9ow9aXZkY
FeOWX5LYS0MhsPCmTlhta00VrDK7DFLaUNRJgNe1V8O6miqbqmLSE7H9ZJN1
CUCUaCZlehNPru4dZI5pDcbFlb2Xb/RLK2Ww1oTcgpExuUCpXts7MC1aZhfm
94733/z28uLF5cb2EZ7cn5iVRGR11+OyvDJ+KcT7wseSulUpnaqMUnp4bm9U
US+kZqA2vCoxvCLON88rosIntNQ9vMwtusK9qCuurjcLJBavBJu44oDAdOfQ
HM+81kTQAROqfcKLnN/ngUxP71SPh/62yZX54XmJjwLuRhW7ZMKceljZUene
t+7fvgXwPbR7+vQ72yefO9g9/kuADx/Y2j11dHR0LmrwKaz3hnbF1rdHEPoL
ieRCLq91Y43fjUhLSbDtxecpZV1SEWzKgDZNoeamiSxqdTHEMy7wV2xHilrU
bFDDx7mVE+ONYBprh/qWZNki26KFQw2UngJ4TQIWniUarp+Qtpu1GLkQhmqO
KUx7WlPg3tuVruS2Hq1wp2QYxWjbzhxrhFSeGnqvOM1ROtKoHWvv607tqA4Y
7EqZHGlcn8AZR5vH+io4hFIutYFJhTbWJscneqZlhVY1FQ2wKVgqDtrRmFkM
8Q7ziEmPbEZCGzvqGhENjQhoJaymf4RhXrdOLS/qFhaW9/YMC4u6uYWZlbVp
6/rq8dnW8xdgjuhljujmLVQWe3Z5ZefoYO/o8Pmri9PzowmtOiExNTI2jsGj
n/25DcXnxFU7ZHa6tPDjm4VxlaywfEpwQodP00h5ZjfELcsHVHR9qGfe0wRY
EAQekdjgD2JbMTI5qtQ3uiTAPuLBo4DbfhC34Dx3r8wnEeVugQUOT8Lu3fW5
8+3TH9ziAmwCPOxCPfwzvLxSHpUjw9FDhW5BtvdtH9rYuPp4B9g5fP/M6Vsn
5yeubh72zxwfPbF96vDsiaMdm1vNFzd29yTxBc09KEhdZYhOgSej89MiH7ZU
hGiECIuOKGPX66Xw+Uk0oT0+I+JhcYozrDBwbLhBwa4TD5WaxpuZpHQ01L+j
3kfGrALCqUh3rs3xpyKKxocR01KUYQwhHaqGFnvG+30LK/bU8GALKuyqjmQU
IczjPUtqIh2ZnRf9sL00cElD0I3B0a1RHXVBsqHqhfGuGWGLntnA68kZ76+a
5CI4lBoislAkxIRE2Nm7/ZpfkYKlIJl8RicWTmH0Ag3auDwMiQ8EGmxGNUO7
YGWNleRhkEPFuvkZg8Wsn5+T6fSglnZ3rXsH8xtb+oXFIYEIlGpqWjc3b1nf
3Ds5sliXz56f8gUc/wCvlNTYmXnNv/73y/UzU0dfWVZzcC05sXYgoXYosWEk
PQMVEF7vktYZ6Zz5xC7pkUeec3x7aGi9R3STT1iNW1CZY2StV2Slb2RFgDfE
NbQo8G7grZu+P/rluVRRc+JhPk8Tf/WBePtlBttF2Xule9/2vPez8023OJeo
wiCQumMLvZ0CbHzCfL0Dgt29fcKivJ3cHviHets42Lj4ubkGutu4PXUOdFEr
2hi0QgG7hoiGFGe6DfdW6CW42lzfyjRXGaNhktMsp1ebRG0zEjipJaYk/mF2
xKOKFFc2rngEXzTamy9nVkkGC+noRDmzTEQrhFd4Z4TerM/2xENTqPB8zUjX
zBhqggPtrgzMj72HrQ9XsRumRfBZSYdquM481jkn7cI3RhbGPGD1ZG3oyOBR
XFsMHZ81Jeswy7pMguZJdp2MUmrmt8+KOscG6ofwZbDqaDKphjbUFhzz7Oaj
LwPDPVF4hFQlQhIQLagmwM7Ow9Y/yqewthCOgwOItW0NzUg4S8xVmfQC5bhQ
qRiVjoMa5PHoPAFXpmCKJAOjPL5cObuyur67u396fHp+kl+Y5+7hjCcgd3Yt
7/7YP3u5fP5ukTdByGwMQnErdCcsBK+onJoUDXUv70uLgwX8EvT1/Yhf6hll
acjo5O7QuHb/KKhnQJmDZ/6TmPqgQkxWNw/um+dzK/BX73z3jI7EdkFt3XBu
UIVLYIFPaGFwOiy+sb/MF+J8z+/Gswhb2+AHkIbE2IJQO7+nHqE+USmpjp7e
92wePPO0d/BxeOJpa+9j99T/aUBqUFpVhlGJELOqubTylrJgeFWUkoUYRhfX
Znr2taROCxD6UZhsoEJILNCPQPF14fkRd4tibBuzvCeYLarhBuVQraS/WNSX
L6OXsrHp2IaQFP/vCqLv9zYlteQHtOaHqIfbBKSytiKv7NBfkFVB89Iuixyl
YTXMjXUeztJUQzWY2hASLNrAbV6UI8eoZRR4whAhe22GMqtCGkVtJlGLfLDc
yGueFrabhAhSe0p3Y3xzbVRJYSBf3NPHgPWQG30Cnjm62+QWZzBG++g8KrSz
tqiuIDDWPyk3CcSbekRjA6KporEmNRdSXFNeCa1PysqIh2Sk5ObUtrb0UKl0
Pl+i1fKVysWtbcOCZXljY4jDTklLdnFzJvZiLy4O//XnxeHB3G9/bL75c3V+
Rwjvy4YPZtX1JWTAvUsI0XW0DKK6DcwUT+Lvuaba19HK84gpNay8cKibU9ad
0GrXMgpkcArPsdArektj62IeRz26EfBDaLV/xWBe42hRCSUlrsE7qsottdm/
Zbggoy0kuMgpIMfRJ+3Zz87fplalQCrzH3u437F3e+Tic9fumUug11NfO7dI
Z8cQe5tAm7hyMMFVmKQICb0CVuRLaU83CtBjNNgorpyFLjCLu8CnOiNqnRyp
JzdFqxm1/S0pBZEPGjI9BhCZCkaDgdemZtaL+oq1nMYxWkljjlNFik1XRQCQ
LasnryTuKaY2DoDuLA9ElPoKegutaqxFhgTq25gkbhnIfGL+MDqDhYasTeLf
bPD4pAJAc3oMsb8wCPAZxG0sQo6CVb2sRkn6S2X0SlpXant5ADD2YWpVaaEv
FBrP43dNzYxOTPLik0NsHG4Dji1d9fgBdB28BlR8VnxYUlhGcWZ1S11JbYWD
p0tYfBRAGZ+RGpEYl5yT3UsfZI+N0UZHAcGxyUmAT6qZqG1qdPPxsnv2lEQh
HB3v/vnn698uD/54vffqxcrRmVE3P7h4yK3BRGa2uKY3O1cSI3skla3DpTWk
Qv8cz9S6pPTmtJBqr0p6TnSTV1CVYz4mvp5egBI2VZML/+72tWeWR0Ch/6Po
BzHQ8AJCeiU9r4KWBunwBxdDXINjGTGqnBhbjI0sxcR0j1ZjBe1eSR4gN2TX
1zoGh95ydL7j4nDfzfap/xOPGMfADL+gbP8MWHoloWJVRxzoTiuItRVQala1
dKMAszvDWlDgdqf7juapazqUYqgcWR2oHKrva80oibMfQuebxN2gfxmFneqR
pjU9WS9obyv1g4T90lzkyaeUSuk1NZlOFWn2ImoVj1wCXnyS17xros4rUCZh
+/Hi8KF5kInNBlg1o00nFoZe0EJujR3qgcyOIaxa3LwKreI00pCpclateqSB
TylSsur6EImoutDWUr+OuohhUikIsZ1tyRRiCaW3ekI7opjgdvQ0PnW+5+pn
ByZ6TD+6BQ3LrsyJz0kISQhzD/Jy9fN8+Mw2KSOlurEWScS0IhFdRKx4QsGX
y2gjbJluEtS4VlNQWXH74f3I+Fj60ODh8R4g+OL58X+8vvw/f766OFo0GoZ3
T2SaOTyGBRlQlhJEOeWYIDDxFSMTsQJEFiwzCbT/GLewCv9CfGpSS3AhLrmq
FxJZ4RFT5Z9YH55QG+Oc4Oib6e2Z4eGU8swVYpfbk1xJTU9sdo5rsEtv9yol
RMbW2yc3O5USQrHjFQxDD32yDzGMSqrOq+xpQXFIEFhuaG7gE//7d91+9k5y
i6uISq5PzIZDwOcJ/LCrPKyrMlrN6tgzcw8XuFvTNL24STFSvjvfO8GrgUT8
wsQVWFQUyQBUxYINIiFWDWl3hrFppB3MMfFNiWlBN0EOYWELxgaraV3p6PoI
Kb1qzzywoEQBcOAiWVCilyawOzP9On4LtSOZ0Bq7MklYM5LkwzXoxjAAaFbe
taIngGik5TeT4AliWjl4iEsqAASBtfa2xoIIVJ3lMNCT1duRxsAX0LD5XdBY
Yk8hAlE8rmCqJrkiOTMuPeT721/WtlXAcW1kNoU4RG5Fw8uhVWX1VUB9WBKe
RKOgerE4ai+Dz+ErpHTu6Kh0TG2aYgoFtS3ND+ztUrMg8gnF4fHB8cn+f/3P
f748P/ztZPtya/58Z3pjVao39nUT0+TTXb3c/A5GasdQJoya1T5Q0dJXk1yZ
EFOQkFCelANPz0emhBS7BuU5BmY/c4m/G1Xik9+eWtqVF1saGVEYGlUcHpwf
6JbiEFcbWgnCFz4xpNQmtdUjH+3vlPZFWOXtrC739HaPBlpOPjINI+4kKnAV
pMI2TkO/HocVwyG1sU6hNi7R9sHZfiAapTYlLU3g1/VUDqE8P/ppT0OyUYLX
CjpXjCROf055zgOTqnlB35Uc8TO8LvLAKn6xo5Yy6iERNyf5bc/XBLvmIQoi
oyzFuTbLC14ejqyLZvTkCqjl6lHokha7PkXcmiFvmMg7Ztrh4tDZ6siMrAtZ
H4qFRW3MULdn+8dZdb3t8VxqyYaJMj+BUXAaZxTIYUyOoK+ES8gX9ZeNEHIB
PlJbXFOBW1bUr7U5TnJWnbC/goXPJ7Qk1uW4w2tj6APtGDy0n9EtlDNYQmp8
ZuQPd7+pgJV1U5CAIJFOHh3n82VikUwiV6tkEwr6KHOIz1RP66STShqHyRLz
MX0UYKo37t/LKS3RGPXbBztv3705PTt8cXl6ebb1x/PFt4eG7UXB3oa0vDRg
XIWxrPNI7Hoip765Nz+h1D+lMgTPQWDZCBihJr8pI7s5uaQrI6c5LjzfzSfZ
JjDDPqk0EFId00ZuQNIRkLoMnyTv4KzArKa0RnIlZ4pOlvVWEvIzEQFp7Q4x
jbcK8a4JMIfQcodiTFpic3AmMqiZl1LLCk1DPssjBtfRMtuplZmV8WGZfn6p
HmEFQWnQFA2n1SDqFtMa6nP8M8JtkI3JKl6HWYPjMUqSon8YIGUsTOFwnalV
Rf5UXOX6HE831lOa6TSlwJ6sCWeUxITA27hWiJqHrC8IAAlWyYHvLYysmajr
031WI3F7lnpq5Zyv8jdN/SPEQmRdOEBwZGVtzw2wSQWDmEwwaOxZGHNqrF7S
oRXDOZSS+ly30d4iBbNuqCeTgYbQulJghR7lqbYFCff7OpPGGVVA3RxiPpdU
OELIay4PLikI6URV9Q0gROMDikm+WMVJyon/4c6PHfjuQe5QH2uQIxWwRVyF
fmLSZFQaJjXTeo6ErzWbJBoljkbpwPdEJid98cPfEyBphtnpo7PTvYPdw6Pd
3/94fXy0+9urw9cn5vMtxZ8vzAhoEplQerinXLLyxtWExCy3xDzvvLrokuYU
xQIHOdjUTW9uJdfCiBU9wzDRFH1U29fd3wDDVBKYXYoZiWxqbFBMb0RDs2py
AlMC82D51aiako4yPLdvUDlUhkqPqrCv7o2oJkXbx/wcVugFZ7YMGcgNA+mV
1HCMIqtmMDSjy68AmRBXEJyYFxGa6u0c/iQA4hmS5yPqr+eQq7h9tV31iWnh
j7Pjn2FaM8TsVnZ/bWLk/drSIOs8e97EHCTXNzekSIVYxTg+K8OVgC063psY
F/Ukxzn09pQ1VsWR0KXLJvbR6hiDUFYGcRtnN2+ahwHN01XJvJqCa0mlYwrm
FNijRRbQI5uYh26K1ApbjdIujaBNzmmWjbQIBuugJQEDmFzeQAWTWEBDZ9Kx
OV21wWWpdkB9pck2DHSGlF7Jo+RzSLlDuDRQ4uHqZmhSRLQDYxg1OIQSS4dm
5ib5Em5gWNBTJ4ceMkk1ZRzTTICWJ1TJLDurUt2EVKsBxRaL0GQScM5HDs9+
vnc7JilBoVGurC1t7ayfnO5fXJ6cnOw8f35web53ebL255sdk4bVBcvcWhKs
W0aOd0Q8Tn1qykNEV1J5fTiF1SybYUdkB0AaIDFFkc4h9/u5nTzlAJmJGeT2
GxamFHqt0mgYHOXAkF19bOaQhE8eGRqSCngauWreNDalHZ+eGFVzh+VDIyoG
mY/voCJQdBRNOEBkE7DD3X0iDEfbLzAymMp+Co+YWwFBEtoR+KaewTYMs6mR
kDeEK+1H5rN6K/u6C/KTnUM9fixI8xgm14nYnTWlkaF+d2nk+j9erxzvG7js
7gFas1zVV1IeWVEdu2AR7OxoW1uyxiTEzVXFplW+ZR2HVsaWZPoMk2ssOtrr
Q82/LqbFjJbuhiQOqXZtivFyR7Y9N8QmFJA7k2XsesFAOa+/XMZu1Em6xEON
qKZEaEkQm1w60lcyiMuhdKUR2hNhpb6lKU8rMxyw0EggOh65UEgrnuDVCenF
LGK6mFXDYbXV1qZk50ZIpAOaSfGMWauZVI0K+I/t7WNS0sRK9dTi0syqVaCS
jU9N6pbmxie1kgnNEF/QRSDesbW5b/cU9D7yQL9Sq5q3zFoWzds7a6cn+4Dg
5eURmCYuz3Z/f3UIrc7kDnceb8iO1gQvDyWnuzwyLj087Me8As+mzqz43ECf
BPem3hagrIS8oEpYOpoM446xxtVytc4oVmiFMi2Jzupjst//PMFgEKhUE3Nz
2gXLqEKpBYu5WdX0lMY8M7O6NLu2rFuY1cwZ5zeWFUY1XyEa1ynU01qBSkQa
Al0YWVFf3tBWXdNWkl4SDcXk0cYQNFQ+vjUN05JChGfCysPig+4mhD6Clkep
xHjrnKC1McPP69bQQPurF8uXzy1Wq3zaLCBSoMHhT/kiws7eFApV2dVRenZo
3lmbgNWmJMc4cAZbXp9O/fPl3OmWgo4vx7fnEDty6NiylSn6sqEf5JB+FGRW
2QPaX193KpdaJmXWS5mNxPa0snRXfGvKED4P7L+vzuTu2jBogWdjnjus0Kul
2Ae464K6Z3q8U0gvH2PVyDn1g72FPE7n0FBHdKz70DB2yTplWZw2z0+vbKx3
Y7E37j3AUqhGQGV9dWJ2SqBRLO5vGS0LHTj84Ci3vh1u7+72xMWZxRudXpgz
zk7NL89ZluZ2DzbPnx+dnR++fvUcEPzj7blRIy7Kjjra0p/vTOxa+dsW5tme
4PxAEh9739X9G7+Ih04BD7OqIaghfHZDbhksK7UwDElumZhRAuseEYvkk3ql
foo7Nj4iEQM30M2blFM6uXFSb5kHU4x6xvRXyQw6iXZCPWM0Ls4Bkx/Tqoj0
vhYUoh3TBY65FQWhCVHeYX6PHB8/83qakh8TkuKZ0xCDG23CwBIH0HlUVM4I
pWp8pI1JquxpgyCgadiuomkda39bm5MV5Oz4M5HQdPHcur1rWlhWKrVsbz8b
BrNnZV3HF1LKSpNmTRI2A+XmeIPLRJ4fGY93tKd7kxopAd2e1V6XSEGX6GXE
gzXxELGsH5O3u8Tm0sq7oZHAJNW8FqDBQUxuQ6F3cYoDtTubgkgBUYeGTOvv
ToUVedfnuKLqwvGwWC6peFrabZ0kL06SVk20JWOfUY7WjPeMCbETWha8o7yi
Omt3f3l1wzK3ZJ5fWpxeWAiMjPYKCeXLFUevX8+urWgtc+AjMi0tU1lsXD8N
cIxMTAZGOmEwzFuXLNblte317d2t84uTyxdnAOLrNxdnZ3sbq3OZaVGM/s5/
vNk82Z442ZQfb46d7Up31vmLC6weTEllfUoFLC+nKjuvoaS6sz4hNzw+KxhH
Q0o0QpCg8P0UEn2wHd1NoJG7CMg6eEMnsbuTgESSsALluEilpPO5A1zOsEgA
FhTWMFiAYIymEFtRyMKaioSs9NiMlOi0pIDocBd/bwdvV78Ifyc/h9CkgPB0
X+ewh67RD0gdaRoB3DiOWpkaeLmvens8+eJAu7UkYdFbcehy65JiYV6WEO9t
Z//LCKd3aUW/tjVjXtYWlqZjifCFZb15XtMEK+vv646O8ogKd1lbUu9uai+O
zRvLsprSqJb65JbaeIOScnGgmdZSFgy0873xcV5ba3UItSdbwYUpOE1iRg2g
VpPl2lTog22KI7cn4GFRdFQ6mCDKUmzrIA6DnekAXx88DaTfg8VRjbB708LZ
WxEuTA2egbe6oVlcVhmnJFExfjqDfGt3bWlteXN3Z3N/v6EN/sjROSwhkTM+
fvDyElznwK/A5G7d3WeJJOWN0IoGKJji55aXjeaZpfXVzf3t/ZODsxfnx6dH
J2eHr95c7h9s0WmE2Ejf/c2ZV+dLB5ua5/u6356bXhxNPj/S/v52iUptzsqP
akM2NnY2xeWkJRdBihvyM8tSISXpMRlxmSV5kOL8otryrNLc6NSY1LyU4LiA
wBi/yOSIopoS4gAFTSJ0EfDtPWjQlMlDjH42Cww4KFIvpKjQPTDIxc/3maeH
rYuznbuHk4+vq3+As59XfGZSREpYcIJfM6a2uCWrsCUDuBZQBL49mdSdyaXV
qUTI/bXxk10taHzmGREe17iwqFSpuT/euB4c6rG2Nbd1sGKan6Sz+4oqcsaU
fP2UshvVUlSUHhTkRiF1WBZURj1vd3tKLCTmQAJam9InVdTlee76smh3U7q+
xBVwWpBtKW31kfzhBpWgfZRaweot7KoJBc0OaI3YEk9ojsZCI8AE0VnhV5b0
qLsyUDVcNyvpygq/24/MWTUxDqxC6yxnaZa7tToOLGJvd3rvcO78cjMtM7qh
qWLveAeMA2s7W/vnF3QONyol7c4Tu6C4OLnRuHZ0NLu2ZrQszVhXB0d5RTV1
Cp1haXN7ZXMHCHZtZ2fn6GD/+Ojo/Pj9/01cnl++vDDN6pOSInoJiDcvd1+c
WV8/X7w4mr48Np3t68/AiLE+MW0S5+QlPnN94hns7RHsHxAT4RLg5hvpC+zO
NcArEJz6ez9xc3DydY1Nj0nJS0zOjcspySitLaprqkFhMXgKpZuA7ya+5wjt
QBRUVaYX5EenpgHreOTo5ODl7eIXYO/hBcrVP9A9INTZ1y85N60EWgokT2Tj
UYwO/AhyyUDSSztRTbFVeZ65KY5NVVHTk4yj3ffX9j//PCSR4aN86vOXe8mQ
6I+uX8FTMZa1BaVOqdKrUrJS8H14jWEChenMzUv38nYWi5nrG7OnJ8tTRnFj
Q3ZJURwRXzc7xT7c0xh19MM99axpODfLo6YijM9u4Q41jtJruf3VvYhUEFSq
M516WxP64Uk9dSE9dUGg2ovcESWeYkrxxiRxTdvLxhVmRdu0VkXuWcd+f7l4
uKvb3TZsbxlXVvWnz9dfvTkcHCaGRvib5qaOn58AVzRbV4HpA0wZhcX5VTX5
1dVbZ2d8pVJumKLzRNCOLqFSbdnc3jk715hmVnb2dk7Ods9Od4+PD89PD8/P
L169XFpd6eyGu7nZz5iUZyfrb15u/+c/joCX/vbC+vZy+d3LtdcXa29e7ZFI
3clp8T6Bvl4BAc883J95uQFqdu5u9h6eDxwdf7W1/eXRPQdvZ48g9ydujz0C
HKOSQpPSE2LiIhOTUhqbWxAoFLwHXdUEjU1LdfDw+vXh418f2jxxdnvqBnTn
5+Yf4uoX7OIbBI6ufqGA402bB/ddbG87PLjteMc+0N4n3nt+sndzfmiM1dJS
ExXs9VNC5FOltHd/W7e1aVjfmJpb0MpUvNVti0DG/fnOTzHJMbPWBfWUHsxW
kLycwvJS4bg4pzA3Nj6qvKp4kE5ubq3pQkIbGgvjE/wqqtJ0k6NmM1+p6tvd
mTBNs2uqY6GNyXIpbsbA4LPbGJRK8TCssz46P9EWA42mdaWia4OxDSF4aBi2
Lri70nsQkbAoe/8z8AUZcsPQrxhpL0x1LUj3mZvivXu7fbBvvnyx/eL17vH5
xsHJ2snlXnhMKGWAfHxxvndysnt6DvQF4l9MWgZTJKmEtYBaPzrhSBUIXC/Q
oGnJOr++KZnQGuYsgCDQLIC4fQAInp9evjq5vBRIpb5BflXVpZeXB+/enb17
e/zqcvvV5eZvLzffvth492rrf/3PVzIJqxVWLeCPIBDtHV2dddCmgoqq1Lz8
0PjE6BSIb1h0YEwcEI6dh8sTV7sHz+47eT0DgvX29YhPTMiE5HZ195TV1OSU
loTGxXoGBfqGhrv6+ts6uTp4eHuHRALReQaFB0UnRCRmRCZB4jPy0gpKojPT
PcIDwlLjnIM9SmDl+Y2FUyqiSUMy6wbGhWh/jxuuDt+S8HXrq9r1Nd3Sss48
r11aMa9sLk9OTz5xevLdzR8Z3JEJ05RYpYxJTYlPTYUjkbYODqGREb1UUl5B
dkZWSl1jmZPLo/LKbA6vD+ScTmQpexSpUtHqoWmlpVFcLnp5WdpLrC7I9aeR
KnkMaG2BH6zU//2I0Z5AaokhNIVj6gN7YWFcQsaMELY5idmcxC0r0Wt68ott
+dwkvaY0xtvt7sa68eLF7sWrfeAPF2+O9042Ti4PRoWc7MJcQPDg7Gzr6OTw
4iV46yW10JzSKqnGkJxb2ILCTszMz61vL2zuLm7vmxZXVcbZyVmLbm5h4+gE
lHV77+jy5dbRqcmyVN3U/MzVdWpaf3a+//sfLwHH4+P1//jn5esXO3/+fnK4
Z9GqBMiORgyydWlhZqCPVJib09TUVFRWmZpdGJ+Wm1lUDXwzt6w+vbA8FgKJ
g6Qm56Rm5GXkFuVVVlfV1jTm5xRHRyV4+Pi7ens7unk6uHo4e3h7+gGOEUFR
saExSdFJGbFpOYmZBdkltcU1zZCi6vCkDL+Y2NhsCKqfEpQYlVaalVdXiEJk
y0Q9Bs2AXEIID3x0//a1lCRf6RjdOCVdXDbOWaZmFkyWNcvC6kJaXubn33/T
CG/VzkwP8wTx6ZAOFOanX++AyaugrKy7B52YltQArU3NSExKjaLQepRqQWVN
dkZmkFbP4gt7IVnB4Li8ohpmoQoKwpthECajpaEqur0+ViNECAeriC2xRFgE
stqf3BopJGfPiJt2jbhzS//FEv18kfF2V/zuaOLNydTeurqmMj0DEr2zv3L0
HOA7PX1x+O6fb1+8vZi3WnKKCla2tg5On++ePl9Y29w8OqexeYVV9QBl/wgv
MTufKZIu7x6a17aUU7NKw8yUZWX94BQ8at05BAln5/QSHM3LG+09WCdP/x4S
BQSbk/OD5y9O/vznm9dvT09Otk5PN9VKPranRa8Rnx9v/PH29D/eXRrUY/Cm
2vycjILC4prG1pgESEJaYUJGSVRSXnhiVmp+qU9YREhcbHRKYkxCYmRUXFRk
fFx0Snxcmk9AsHdgoG9QqH9IeGBYZEhkTGhUXEhMfGJGbnZRRW5ZbWpuSVx6
blJWYWpeOXgd99CIX2yfPHRx8QoLSs5P9wr3jY10EPPxG1a1TsvJzAj+9ean
9+99DUfU6gzj7/HNGRes80sbS3PLCxWNdVe//LwSWj82oRzicSuhjf4R4Xef
2NbBYBm5uaWVVTkF+a0dbeExYRgi2jCrpQ+TwyK8+voRhikeGlffCi9d3zIe
n1mbWoqDQh1A68agKzvbssZ5XWZN72h/Gb0HQmiJxDdH8Hrf49sy9OxP40Ed
z5HOFgfebPH3F9n/4+3iP9+uLS0oi0shSFzHxdvn56/P9k53X/3x6jWY3F5d
tHTA1VPG4xevzt+8m1/d2D650JkXyxtaDfMrW6cv8qsa2jG98xt7puUN5dSc
cXHNvLazffZydnUbHK17R2uH5xvH5/0sfkh8ciMctbi1c/riAuA9ON0/PN47
ON6xLM7SBnoVCsH/+q/f/vXH83evj/7zj7P//teL//tfbxdNspaGEkhmallV
dU4+yKPFCWnFyZmVgdHpwbHpQD7BMYn+4VH+wWFe3gFOju5PbZxsHjv4+gWD
nZCI6MjYhOi45Mi4pLDo+JDIWFffgOjktNyy6vyK2oyiMnDtxUHyotMy04rL
bNw9QIdNLchJzc909nP79eZnnR1VezvzRr2kojLzl5tffvXVR/GJYeMKIcBn
mNHPLEwbZqdApWZBrnx6tZvQwxKONnW0ewT6hcXHMAX8tOzs3OLi5PQMRHdX
RW1lWXW5WqdSaGTpmYlZeYnWNT2AmAYJk6vYiyvGEV6/f7BLfHLQIB2NxdRP
6ZgrFr5K1C0armfgshkYiHSowiiGrk52bxqQK2r4orxldQKxbcRerDBPrdw/
L2aOtif/+O1Ab5QFhvlzRJzD54cA3P7pISB4+fY1VyweEUnOXr89fvF65+R8
ZfdoaWu/A0sGUA5fvmOKZK1owtTS+sSMBRyteyeTc8sAKCjL1sHi9uHMyhZf
oQWXOvjAwQ6Q5/LGxvNXF0dnp+s7G3vH+yDbzM5PHRxuHh2tPT/bfHOx/a/f
9s/2zP/9j8P/53+e/dc/joh4REJyTGl5WWlFbXJmcX45LCIxPygmIygmDUSR
p87ALT2dXL3sn7k8fvTs4QM7Tw8/b5+AgMDQICDA8Jig0Ci/4HCfwNCAiOhQ
wDQ1PSk7N72wOKOoJDk3PzYjMxqSae/l9dDJ4ZGT/Zc/ff3tze9+/PELX1/n
2bnJxWUTqqft5q9///a7z4NC/ThcFsBnnJ2a0GuEUpFIJrF3cfr6h297ab0U
OuXX+7fDYyPVek0HGpmSmREYHpqYmtICbwepZlTIBd8I0rJfsM8Ao1emGG1u
KWtsKl1Zm1aoRQlpUS5e9sBjFRN807T0YM+0bpUuzw7r5D1MUqGcU7+kx64Y
0KsG1Iq2Y0nVsiiHWVWtq5quZXX38RL7dEP65vnc8cE8GN6R2K4kSJJ+zvTi
j9/O3rx8/tvri3e/gR49wOYAgqv7h/sXLwDBvfPXgxxJUwd2de9cZVwgDLKA
AFWmed28FYCTG2aNlg3r7pl6dnl2fX9MN5tZVpdVXo+hsYzLWwcv3ixubIHG
CuLN1sEeAtVNGxo4Oj98+ebs/Hz7tzcHII7+5x97/3ix/B+vly+2J862NceH
s7Dm0rSM2OLSovySqqSM4kRIaVp+dTykKDwBEhgRFxAa6e0f5OHp6+sTGB4W
7e7m4+7h6+HpB8rdy9/DO8Ddxx9UYGS0T0iYd2gYmGcTsrNBhSYmeoeHx0LS
YyGp9p7O39/64dufv3H1dQoODfjiq8+GWfTNvQ0ShfD3H7/96psvo2OjNAbt
uEoGjjMLszwxv6G58YvvvgmNDidQ8anZKVWNlX2MPoCyrKYiIS3FztkxOT0t
ISW5vKYCQB9k0gNC/ethdcCHcTg4oqMOtNTZeV09tNLB1b6HgLJuWnYPrZev
dk5PLK8uFrZWROqx7jktfl6LWTeTV0yYRW3nvKp5Qd44P14/K6kxieq0o9Xz
KvTW/Mj5geHkcOHy5d7W/kZ8amIbqmvjcO/d//jXzunRy3/8oTIamHzh87fv
tk/Pt46frx+cb5+8oI+O1bZ0W7fPJCoTcZADzBNoDagPyNBgWTUsrE8vb6tm
lkblk2VNiPTiarZ0AuDTWdaXdo5AM11cW7NubKPw+LiUlJWtDdG4eHl98ehk
/V//PP3t5cbzQ9Ploe63E93LHdnvZ/o3l7Pb25Nl5WnRcaGFpWWhMSnJWaUh
cZlp+ZXvf8c4NTMuLQMkwMjYmKCQYD+/AG8vfyBDN3cfVzdvZzdvVw9fgA/k
GRtHZztXdzDXhyXER6enhiXFBcRE+UWFFdaVdxKQEUlRto42N+78cOvBjQ4k
6otvvoW1tc8uLsLaWn/85cbff/6poqZaa9APDDHGlQqw6Bukevl7335wp7Wj
pbUbRujvkapEfYPktKzUitrygNBAMA1l5+clpaUSKWSAO7sgJyQymCfgTBrU
zc3VYGJaXplBYzu8fNxTIMkr2yvAd0CAvHi1d/bcenG+YNINamWYo03emrlv
ZZq4bET/RXAO4JPWzIirTKKa5YmORQ1mbWZ4Rjf8+sXG73+cre+sFpQVJWdD
5tdWgfq2T44v3/2hN8+PSMbOf3sHBLi2fwIIzq/tjohVQINm657KYCExuBPT
S2sHFwAcqMWt48mFNYCPq9DVIXoSc8toXKlhaet9LW+zxtSaqbmt/aO+IZaj
p3c/iznMH1VoVYYZ3eHx2vHJ8tGecc0i2rUK9q2ck9WR47WRzZWR//7vHck4
JSk1JCMnHfSyyKQsZ99wl8AoZ98wZ19/r+CgsJioqPjIgCBfR2cHoEQf72BP
oL7/X4aAoIdvgHdIsJu/n5OPt4O3u62bk627A4gucVkpN21uBcUFBUYHPHp2
/5vvr9++9+OEweDs6QltazOazTVQqF9IUGBomEg6hiUSevC4MbmMQCaVVpU9
evo4BZKKI2HHNRI6hzY8OpienQpCS3VD1QPbhzGJsbWNDSCOylRKcHRwdczK
z+YLR3vJ+IrKQplc2EfrjU2KiYiL4o+JN4/2z14+Pzzbf/Hm8OBoXibtM2r6
99b484beLcuA1YRbncasmzAr+q7lCfiKpn3L2H1gxi6q4GtGgk6KmtLSzk4s
wMT2j7ab2lshBUWbx6eg5Z29fXf66i1Ikkyh+Ojl6+Xtg9W9Y0DQvLJtXFiH
95CBAOdW9nmySYVhfnX/uXbWqjQuLGwcauZWgOL6RyWlUDiQ4cbpK+38mmlt
lyXVgFOR0qCbWYpJhgRERvT09gyyqCM82s6u+ex0cWNFebo3ebgm3Z5nmVXo
A8vA8Srj+YHw8lT58mK6pSUvNT0GXNU+IeEgTAbHpYQmpARERTt5e9g5P3Px
dA4I9A4JDfDx8fPxDgCt0Mc3EBy9vP3BfOHm7ecTFOTg6fHI4dmNh3evf//1
lWtXrnx+9asb3/507+eHDg/yyrLtnG2+/u6z4FCvQdZwUUXZAHOIyhjsxvZQ
GTQ8hcQBvWx2yrq5OiIYTc+BuPt6JkNSu7EoLAkPIIKxqxvT9ePNH7p6upPS
kx3dnJrhLQhkh2pSrTPp07LSHz55BPIMgz0EhsTOnu6xCXldK8zO3a26ucW6
v3/y+hXwvZ3jnbd/nK1YNbwR5LSGum/lrpjIuxbqtpmwNYPZNOF2TMS96d5d
E3HLgFvXo6eksClZm1oCn9ZRlyyy7W3LqzcvEUhMZn714tbZ4cUf+xe/W3dO
QXcDIXP96AyEENnkFJj4JGoDlSlAk+i62VUmXyECPru0ubR3NrO2J9ZOT5it
MuM8MMxBoXR8yjy1umVc2ZzdPBgzmfFM3qBAzlfMDYwobR09c4vzu3ugWu3w
5trYwZZ0fZ5tmaTqxciLdSGYVZc1WL0QujNLfHfEf7kn/OO5zqAeCPR+Eh8f
HhsfE5ucHBwTHRoXHR4bHRQe7OHl6uRs7+PhGhoCrouQgEAfDw83Dw8P/8CA
sPDI4JAIL7/A93Oil+/nX3937W9/++j6Jx989smHn1/75sbfr3x85ZMvrj9z
AVHI/pdbP957eJNIJbV0tHWgu3BkQmoWmD6LM/Oz27rgdPYQm88ZFfFKqsry
SgoAWRKNgqcQ2bwRUMERIYAU6HepmWlgQWcx5BOKuaV5Fpft6uUGVInCoUG/
aO9GDHJYaAoxJi01KC6OzGQu7e8v7+0tbKwfXRxtbC9al7Vry+Pby+IFHWVq
vHNrtndB076s71w3YnZMpP3ZflBrk/iZ8bZZRdvsBEIz3q5TE6anuBtrM69f
v8QSqNVNyKWtF9snv2+f/ra6fwE6mnp6AUx8bNE4gTZEHxX2DjL7hrkk+qh6
ytLPFksmZxd3z2bXD+a3jhWmRVAT5hWp3iwzLYDSWtY0C6vyacuAeBzH4Ign
5yhMdWN73yN7t7bOlqlpwc6mdHqSoJG0TorapsRwk7D9aI6+oSeuajFqdoWa
XX623H+5wfrtSLkyxU6O9ogI8YgCQ150BBiWw2IifIN83vc9TxeHZ08e3bt7
5+bPd27fuH3nxq+3fr5588a9B3ef2tvZ2Ts8tnny9fc/fv7V11c++PjTv33x
8+3b3/70w/Wvvvjs6y+//v67K1c/+OXOTTunp4+f3H9ke68GWgd4FVWUVNZX
ZxXkAKEBoGBzXC2XTSgANUAWjuyAtsEYI8M8iYAjGEViUcAkQSobGB4MjQrz
DwkAm1LlOEitxL5eJ3dne+dnOBJeLJOgCRgam5Gcm/nU3TmztFii1c6srioM
RumketoyDaLE2rpxbVk+Z2SZJ/vMarxG2KwVNyzqkXvz/btztO1p6uYUeUGJ
muQ36EQNU4pWrQyuUfSAGWTVanj18ryfxsCRmebVwxnrvtGyOWPdAclErjMZ
FhbHNJMMnmCIL+RI5Ib5ZalmCjTE2ZU9jXlz7fh35cza7Mapdm5LaVqdXTtS
TC1PLe8J1FNchZ6nNIzKdeQRYSuG0kGgC5TzkPzGksrag+Ots4uF9VW+2UAU
Myv0otbZ8c7ZMcSiHLko71rVoIz8Okl/9oa++8X60O+H8jdHutb6rJAAl+io
0IioUBdP19sP737x/RfXv/z0y68++/KL659du3r1gytg8d33X33zzVeffgrO
P3r/x7Y+/eTKhx989PG193+S8uOrN+/cdfHwvP/Y5pfbd97fgOmnHz/94vpj
O5vAsAD/EF9bh4c5RXkgDyRlpHj6e/uHBkYlxGTkZpZWlwOmummDXKOUKKRA
eq2d7RMGLYs3MsLn9BAwYGQAiQVo0M3bHbgoMEygPrAJpPdXsOlEd/01g3DF
/OTsdJ/QgFZ0l27ObNneNC0tas0mlV61trM4v6iRSvrHRbg5/eCslsLpL5Pz
GpdM+APr8Pos1TKBWVD3mBXdOhFUwa3Sj8NMGtSMgWJdFB7szr57c8blcjki
hXZ2RaqdESoNmtlF/cKyampaO2ueBdPLshWspVodGMxnltd3Ti9BWl3ee728
/1akWdQvHk7MbCtN61PLR3rLrlS3yBnXs8cmcQPcNnQfHNPX3E1s6iTCEJSC
Mqhheub//N9/ra7KtSr8tLaHTy9ZUHWuTfasa7EWWeeaFr1rwq9qO3TcSj2v
aneGAAaffz6fISFrHt/9zv7J/fsP73zzw7fX/vbp+xvnfvj+nhHg6+rHH/7t
s8/B4tq1awDch+9vw/v+TgTXPr3613PAAsD64cbPD22f3L7/4PFTO8Dxs68+
//SLT36+9dON2z/9+Ot3V7/4sL650SfIz8XLDcx3gJ2ThwsY+gBNv5AAFL4H
QARD3yCLQRmkDo+yAEHgrv1AfUw6UCtQqL2Lg7OnKxCpVCUDlgukCl7KO9C3
C4ME6DXGSQwJ4xPsAzabuxBjIMVZzNNWi35h2rJmWd+18oV0xjBapRiQiXF8
dhuX1STgQLXyLoOyRymCTwjbppXIWRVSJ4EZZc3ARZdmiBtLzJN9zcvzpf/4
89ygn2BxBWyRfHRMxZepjZYly+aWeXVtdsVqtCwu72xPTM9wxqSmpWWQdk7f
/LZ2eL52/IfWciJUW9Wzu1L92phulSc3q2c2hQozlSklDghaUZSyOkR2cUNI
TLqrb4SHXxSDJXzz2+vdvYUV69iKhQksdISSMzFSOStp2tCh902E50v9F8vU
gxkcmF6n+FW7Jhxwj38+N7Gp7V9+euVv1z98j+zqlSufXPnos4+ufXHt6mfX
Pvz4gw8//PDq1U+uAJl9fB0w/Oj91weffHL1k+sff3T1yvXPr4Ep78OP33ME
0nN0dfMJCAYoHzx5dOfxHVtH26fOT7yC3B843AUEAbWfb/8CmmB1Y21+aeGX
338NBnagTdATYfAW0A0BO6BBAJTJZQMjHeIwQcIB7kro6wUT2c17t+pgDYAy
2AevcN/2IWCKxKHBM0eEIyCy3rx7w9nDiTzQN7+2tLSzNr+xYlo06+YMhrnJ
Hnw7Bg+TSGmDg+1UUt0ou5013MgcqqdTK+nkUhG70aRCzqpRWknTkhG9oOte
NZM2F4cOt+XHu/p/vN1ZXzfDkV0tSPTgKE+gUM1YVwC1xa3Nhc3V6eUl4NUs
kVBpNKzs7W6dHB++uLTuHcmMqyPyBZ5iUWbc4KsswoklGkfNV5qH+do2VH9t
MxrgS8kuc/UOv/PYydUzpKkVaTIvnJzuz5rl61YpyMxacSu3L5tPzlQOFxm4
VVZV+7YBdb5IOZzFbhu6NyY7Ds2kdQPpH2dGjbjv+78Bgv++V8vH/75zNahr
Vz76FNjjX2r8+NNPANHPAcSPP772XoQfvN/+8OqVR7Z3Htrcvf63q19+/fnP
v94MjYwKDI348ZdbIMfesrlt4/DYP9KvuK4gINYnOjE2ICwIUABqsnV4Coz0
iaMdYAqGdxBgQKoBaQREUKAyID3ABTgqiJdAjABfM6IVkpcFiL/PaVgU0Glt
U72Dm1NwZCjgC9SKo+Cc3B3+fuM7v2Cf/uF+owV0qCngdny5kC0eEci4sI5a
aHslGt/U1lGKw9URCDVDw61Dw81MBpTFqBdwYGopwqCAG2StAJ9JCQcGu2Km
bSxyFmdHnh9Nn54sw9qb6lpbOBKxQq8zrywtrK8sba0vba0aF+donKGBUZZp
eQGsJ2aMc+tWrXmeOCwekc+xZWa+xkIXTA6L9QNcJZUlgaOppbVtaTll/mEJ
92ydvv3htptXMJE8yBVKNAat3qjQTXIVY0SVBKnkQeXMMu1ohYFfKemDqOh5
CnrejhG5O9UDan8WB9zVIITvLvDVQvJ3n1/57JMr1z75AFjf+7+W9vG/lXj9
6kefXPvw2icfX/3s/fmV6+899eNrH/7bPK//7aMbv35r5/AgOMz7ieMje+en
wEsfPXl658HjT7/88omr3X2H+2CgcPZ3zK7I8Iv1eubqCIYFIBywAM4JKiUz
LSQqDKSahLQkEG8q6qrAEdgjoAMYAY5g1gB0gMSAPIE2gQCBPIGFAg2CdVBE
CBAvkC14DhigEtPi45MiqxsqGexBkVw0PimX65WAIE/GHxwdaGyvARAr6vMz
sqNhrSWtiBImByUZJ2knB9RqgkTYLuI0qCSwWW2XUd7yXokm/MY8bW1+eFpL
OdpRvX652kcjoEk4nXlq1roAwFk2rOsH29sn+wqjZkyr0JqNk3NTVDYIJGMz
KwsDXA5mYGRiYZurnuUop/EMIZEhYPBkCGxfTXNXTGr2Qzvnb36++cudBz/e
vP3TL3dCI2PKqir105OaSQl3lDjKRIg5rQoudNWIXZ3sXNd1jPVniCipI5j4
dV2XVd1hkbe92WavGfCqkeb5if7xUeJX1/+tvI//7aKfffjJN9c/+x7o6vqV
j4G1vt+9evWrD658dvXjv33+ty8/BpsfXrl2/cqdBz88fvprdmFKTlF6ek7y
e7Fe+xhE0xt3bl35/Mptu19cgxzdQpwzylIAwQHWAIvPYvKYDA4DmN6Yakwo
E4L1XwuuhMsb473/5CfG5Vo5KM20fsKkAwUW2hkDOP5VUo0CzH2gwEKoGBsd
E/DGRVK1dEKv0upVqknFuGpMJBeCkkyMyXRyoVIkUAj5cp5IwRXI2IwRSjeu
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
MaeNTmmYn+YY9EO7B3q+kMzm9A0wQdGHeBwQifnKcZlJC4qnlgq1SrFOwxCJ
+tjMkXHusIRJZpI7ejvbsIjOXmQTsiW3tsA70iM0LRjgu+d+IzY/yD/VsQlf
1E6tzGiMzW9PT6mJDcryfRbxJLo4PD03DWAC+BLS45MzkwDNstrSwoqCzAJI
Rl46qOyiLLAJ8IHNnLLc2pbG6haAoxZUA6K5BYUA+AqqS4tqy3MriiDFuTnl
heAhgBUQrGpurIA2VsGawKIcWlNYU5JfXVhYXVBSV9yAqK1prSxtLM2vzi+o
Li6pLy+uq8ivKA6PDGluruZxiNyRDjGvWcyplnOr5Ozyaen7n2JZtcQVLRlA
nOA2yUbqdqyjRwczx6frfPEQvBMKrA9HwoAADBybPsoEBIcELNAHAb7eYQqO
jkf3ITFUVO9ATz+TSBrEoIhwLKULEEQRO0iDOKDBHhISNNOWzubmDhj4HKLS
YoISo3Jqy73Cgsoaa0Esp/QRpJIh4yRrfmb4/23qvH/byNMz/nuC/BIscLcJ
Dkn2stiz102WbFVK7L0PyaHYSbH33otY1SVLMtUr1WXZlmyvyyrrdVmvnWTv
nOCCJLe43GGTQ/Jv5OHyYgR4MHjnO8OR8f3M8xaBtl+cz98/Hj5/PPn6q+WV
emxjafjdt/dffHP09PnuzELl9so0mofFrfW9+/d2T+/Nbq2vHO02zo5Xj3e2
T+8cPf2icXp6+OTB4bOjqY2JscXa0tHyzsP9jXs74ysz4UqSrxWoPaTSJe2R
XDPF5dWNaHJmyJgSumsGZUjAMffflFy9wrkAgsAHi4ERYBEaOcCBFGyI4wcb
4ogbsGJymwctesCC47DhELggNnvtkME1pLEZB60GxKAMsp542B2PehIxTyLi
TjRtaA3azT6zyYt7DFq7WmEgZFqpSC0VqMQitVypJVlsWjLmPdid3dkYPtyO
7Szb95etqxPk3rzti834t6d/JPiwkbi/Hf6ntxv/9cM//OG//311c9blNUcT
/mQujiKOGQdpvDBart4aH5kbH1uYBMSp1emp5YnyRL46kRu/VRqdHka2HJ0u
TdXHR29Vm/jGS6WxYr6aD2ej3rjf5LYISVmXkPHxlc9usJgWv39hc+PLv3v2
9dcPX7+6++7N/tfn9Udno6f3qs/Plxbn44c7My9fnLz/l68aJ7dz1XhhbLg2
O1Wanl47PFzYxRB6sHCwvXJnZ25ndfl4d/fR2cbJycn5Y+DTh9RqtyI9la4s
1Lz5sNAgb+f00hXs8Eh0/6ud+LSfP9RrGybErpsD2oudxEWqoYsMSwi/6DP6
z/+i4yewGKjhCEwQAmRU8GqlTVDDyv83o0yjBCaTywqvGRwWq8+JUohTkNU7
jFjRgbsTLrMjJeKqNeAxeRy4WWuHhQ1am440q5CdVCYl2Mk1ErmOEJEShojF
EHKEcnF3d1skMHS8N9NYyx5sgKDzYMU+X5ZOp4QHc44Xx0Xo+Z3i473Uw0b0
uxcrv//d3//wh9/UV2dcAVu6kEwXUpFUDO0TijLKMfrh8nStNFUtz1Qrt2oo
fKO3ynBcZbKA/Dk8mhkezSFzliabXVZ1poYuqDhRjuRirojH4rErzJqr1B6K
VNgnFIDF/SfPdo8P1zaX9g6Wv/n29O3bO//43d2zB/N3T+vDJe92Y+7p+fEv
//Xl3OZEqhIdHi+Oz9/KjdTqm1uVW9MTK/VKfWp6sw6t3tneuLs/ubSAhmr5
eDExFrIlLfaUzZZ22TNehVN3nd1DI1iJ8cR0Y2zzUX1ip6CJ8S/zPiaC9HbJ
Z92KNpGD6SpZWAbaT9o+wsQtU0kUg3JSpxw0kGq9SqkhsKK3aJv/A6NR3bpk
GNJpTYMytXTQqCVNWoVWIcGZUY3OB8URAaEhmohtRtyJT+FmBE39+FbgBUBt
hZC0W0KsNpK4U6lTytQysVLMkwjYPHpf98VkWLe5lH1wNHp3O9Ooe3bqznpV
UQvRN8e1x7dtT3fiTxqxl/eLr8/K719t/u7377//4fvqZNUX9XlCvmg6jkrt
CHrQ/aJzjmaisUIiU81hP0uTZagwls9U01AW9a6SQnOVrmQKE8XcSD43VsjW
colyKjocD2bDSOykRcOQ8toHej/vvNFFZxTGxusb67F8Zmu/8ezFs92T7bNn
J8+/fXZ0tmv3m9HE1rduHX6xXbyVSZYjzQGnks+W8sWRcraWL05X8jOF3HR+
eLaIilzfXlzeXMWY1ri3VYcvHzWmGjNTu3PBkVhldSxYjfoLvunNyZ0H67f3
pxMTgep6zlrQsUyUS8y/7eBeusq+QB+kkH65ErXaosVut9iBlEqraElOSrGC
HUaMwGw32gDLYVJoVKR+kDSQgAhwBptBYxyUKiUShYhQy9RY1Co0eoXBrDZa
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
bVgtcYmNWRMZUiv9apqWTtMzgY/rEv4vNcTFww==
    "], {{0, 87.}, {150., 0}}, {0, 
    255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> 
      "http://www.worldatlas.com/articles/countries-with-the-greatest-number-\
of-wild-tigers.html", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/4e2/\
4e276f93edfd06a4e3bf0369729a95f7_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150., 87.},
  PlotRange->{{0, 150.}, {0, 87.}}]], "Output",
 CellChangeTimes->{3.832580893607151*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"352d8812-5efc-4333-96b1-fccb8f243551"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animalImage", "[", "\"\<sealion\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.832580895989016*^9, 3.8325809005788927`*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"3b91c9e8-c7aa-486b-aba0-b1f8d07a3cad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwku2V0ZFl6Leg182f+zZtZa8azXj/b3S673Qx2c1VDuRiyIJmVKcgUM1OI
gpmZmRTMzMwcoQgxZCqhuKsNr+bks9ans05cRdy4Ovt8G3RD3+keu/jgf/ur
v/qrqf8DDBfvz706OXl/4dJ/Aw+ujE4NPBzt631ndLrvYd/kb7r/d3CwF3zT
wPeLeafZcFotXo+rUMidnp6eP30iVaqu377T2j2ot/aOjp7s75+Xcp1W7eT8
6KvdndO9/cNkLqExaMOJSLFaiadT9UarVm+WKuVao35wsLd/0M7lk0fH7Vot
UyqlDg/3Dw6Omo3dfK6Wz7aq5d1yeSedyaXy6epO0R00lxqpw/POJ39+fvzk
+PzT0/ZBemcvsn+cLNXcbr80ktiuNLyZgrW+EwlG9N7A9k4nz+Lg37vwr5C1
xXQm4vdbk0lvOGKz2uQ6vUCloWv0dLuHz5NsCGRrWitaZdqi8odowgGWdARJ
6iHTV1MZXyzhCoQs/qAlmfbxBFQ8ERYMuV6cLeDO5pKtnVoo7HO5HH6/v5Ar
tho75VIhEHAolGwqfV0ux8YTykxG7fEwzWac1UowmYgy2ZaAAxHzt9RKgtPO
Fwg3EJiB6YWPiMxBCPLywPQrJG4PRz7CloywxKMcwSga10Uk9eutCIZiThNA
ghLbISLLKlE8tknuxXImoMSRha1uKH6EJYGwxYt04ZhEN2dwwBxuvkZNJ+BX
MOgFAYfApqOjIW+rWfn0k/NYPKhUy6KpSKlejiSjZ0/Om53dWn0nmytHwula
effJ2VePTz8plkv5Si4UD5YbpeZuK1vKlSrFaDxSrVfy+Wxnt5kvpEAdHDRP
T9uHh62D/TaAtdM+qFXBOrSymYrPG9LqtsUyvjtoTRWDvqg5kQuUWvlcORNO
+suNSHs/3jlIxFJG1TZVJMPKVEShFGOw8Nw+VSLtSqa9G1tzFz58nUYn6vQK
sZgpEJKJpC0YfA6OmN2CTWzCR7HEWRx5annjLhTbS+VNYKgP4MQ7GNp9NGWA
SF3N5AJgG7R3C+lsIBi2abbFvoA1ngik0uFQ2JvJxgNBj0DIUWvkoVBAKVc5
7Q6f1y2T8RhMJJG8srhyb3z6EoE0gsL0rUCuzy++mDucjHLJ3Kg7jw5SB3uJ
ZtO7dxRy+uh82SKG1suVT21grlF4A3T+MI7WRyD344kDCET3GvT2BOSDGdTF
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
09Y0aqzRQNLpCRYzIxJRx6KGdMZjd2r1RrnRLHe4tC6v1h/aDkZ1Lp9s28g0
Wtl7R4knnwADbBDLMUYrkFG50oCxeqkmF2nbinUG2cmiuty07hz4kzndo6fF
00eFVMYOFj+RdCZTnlwudLhbDbmtGimfjIGpJZyA03jQKuzWs/GgVStnM8nw
WMD06Xn70WHpsJ3Za6bzMW825gl5dLWir1r21Kr2WsNMoo+iSEBVb0ytvPNw
+g9Ta28j6HfxvD4k/fbw9G9hqAsM3r1V+NsI4kUU5QqefWtu842Hk79CUe+w
xeNU7iiHNyuWrrFY82jMMJWxRGMv0XkzcPzdVeiHZPY9jmRoE3V1C36byZoH
Sw3dmmTQUFIR02rSNOspu523sHi978HraMygXI3QmQgY+tgWvm8RfnsMcnGd
2A1j9K4Qb9M10xjBEEMzR1cuMJQrMiOKr4bzFDCLmxuMqLa3wbITZXK40YwP
RQQGA1qnQ8rlUIUcYTczwz6lSctNhGxxn72Rj6UjpnLG+eig+JdPT84PGpmw
K+jWp6PWasHldfL5PAiobEYXDauLBXezEYsnHMGIOZP3xFNWtY4BkNIaKWo9
weSga03Ez74uf/Ufda0Jr9JjLC6mRLUl3V7ftsN4ilkY4QVfMYTTfNmySLmm
MeIsTlYqazo+LZQrITYHw+UR9jrFSj5Zyyc/Oz9+drr//GyvXc0+OW6d7dfO
DqqfPdkrpr1h74vLi/r1XofMss0rxDw+o1LCwKRDxlRoW6/GmQ2E8fF3FxY/
mpx5c3L+7YX1D+bX3x+df21i6c1l+AUi/cYG/C0k/kMY/gMa/y4E+e4m/sNN
/McLW+9CCdfXEFcg8Os0xjhA0GqllEu2TNrGYG1hcWNswTye1LMOvYgj3eMJ
p7dg9+n0pZXl/ru3Pxrq75kaGx0dHJqfGcXhprt7Xn048DqRPMrgzBEoY3Th
8ia2fwlxZxZ2Y3zt4w3KPbp6lqwY55mW0PxBJHsIyRqBk4cEGkQkp81Vbb6g
WCTeBNtDIlvnCZbUWhgcfp9CGQUIyqQwi4Fi3KaKeWibQbhbSz87aX39fO+b
P5//zy/Oy4mQ16J/dry3U0p+ft55elaWiZB49KjZQIpFFbGIJhEzxqLGeNKc
yJjtbiFADTAMljzGEizmqlqLm6Q2wtIlebIgzVbUaiOCJ12SaFZInIcb+Gsw
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
pvaPTw52IYobOzIRmIIhWvUIo7ZvMC/3+aUHqSefpF1Mf3QRN9DGoh+eLkci
oGf5U/L5Wb1aBeHBZDTA+h+jUYeIg9jB/tq6svyCZ48e371z9+r5C99dvHTm
3PmTBYU5A9g+1sTYglED8o4ZQIIjJQ8TwOmhkT2Fz7Mz0x+VFxeUFeXD0d7d
Wo1F/CCe87MzgBFYFxhl80JQVMAU1BXwBSGFtAj2xqTXyefnnFYTyLtiXqSR
i4dxfQR0N5WI7mmtra0sgOrvaQM0wwGnxazfWE8eBuStje2tNaAe3AX0I2HQ
1NDW5now4JufE/LYTBIe297c0FBfC9hVlNeWlVaBVMIcqrS0PD+/MDc3Lysr
Jy0t7e7du1euXDl16tSxY8e++gqcyTGoDz/88HeHt3/+05///a9/+c8//P5f
Pvrwg3v3roPj7Ue0P3mc+tXnH/3H7//1X/75n8DvDI8Qu7rbgHHvmx2s8KLi
w88K0588BFaWVxR3dLaAbX7/fi80fQj+ZBIeDiaZhKOOEtHoztb2qrb2ciK5
s6b+SXXDo4KSqzXNKQWlFzKyT2Q+O3vmzJ8+++x/ff7ZvzTUP+9HNrS3VqD6
WiDzUodxHqcJJrDOS4ty8nMz0tJSbtw6f+HS8UtXvr14+cTRbz4BacnOfXz+
4om8/Mx5Cb8X0YYnoKZnJqemWRwuUzQ7TR+jDGD6mhprm5vqamsq6uuqwGcu
x8PgOaErgeEE1ABBwAvsDWAKBDnY29zZXIEJWFYAFHTYrNc4zAvzMzwhlykX
csfJAxOUwXEyhoBqp5PRZFxPU3XhMLHPZlKZDEr4H4HXYb8HOGs2aJPLMZ/X
vbwU393ZWl1ZplKGMzIyioqKILlDfgfGFRWWFRWWFxaUwgRwhHr+PD89PePe
vft37qRcv3790qVLZ8+eBQS/++124eJlUFGA8ttvj5+/cPra9YtP0h9UVBR0
dTX1QQRprXv84PaxI599/eUnX3328e9/9/9AQ2SMjw7i0KBRbe1NUIDjs6wn
jx6nPsl4BFCCrEE7gAImgnOG1t/aWvvkcUpTU9UQHtXYWN7aXN6LaKiuzG5t
LyoouFVWmVJSer208kZ17c3G5tReRF5p6d07d46ePPlBQ312W2thWUlGR1s5
AddNHcFMMElDBERzY0lHW2Vmxp0rl45/d/Kzqze+TX14Ka8QOsONmrqC8sqc
J0/v5OY9Li0/PEH18tVTt+9eKinLeZ73tLQsLy39Pih/TvbTquqy57nPikvy
15IxICBAA7IJpmUA1Yvp74HGN4hBQnwAhgIfwcO8T4vQGXc3VteWYjG/x28z
Bu36RY8p6tT5zYoFKTcZMG0uuqJug9usVEunNApBPOJcCnshE+1urBzsbPzX
j2///uu7//71p7XV5CSbhcfjCwsLs3Oet7Z11NTWQ4LLfJYL8BUXVcCY97w4
73lRbk5B2uOnt26mXLlyDSzmuXPnTp8+febMqfPnz16+fPHq1avQDW/evA3J
vaioADxkQ2N1b28rmYzBY3sR3U01lUX3U66f+PqLrz//+KtPP/rPP/zbv//x
30CUoNMBiCChcBxa2xoBRNDPisqSe6m38YSBnd2N3z6VdkDfHx3BW4zKvp7m
3KxHMHZ31laWZgOzEN1V3V2lzY3ZDQ1PmpvSMzJP1NXdGRgsKC271dCYVlv3
MD39dEdHXk3Nk4cPzmU+vXb71neZT2/cvXUy5fapksIHvV3l1698/fWRP6Tc
O/v4ydX7jy7WNea1dVbUNRbce3AxLeNGVs79yurnQPY7KRdPnz1y7PjHx45/
eubcsZR7N++k3Dx77uTN29egaWZmPRHxueBSsGhEXXUZRHgiDq1Ty96fBQCQ
ATcBNTAcoKVgb+Cux24Jux0xn3Ml5NmJB/YSvo2wbdGpepX0bi3aNiKW9Yht
0at3GqULapFGNq0Q8dRzgkTA7bMbTWrFCHGwtbHu9KkT//a7f7148WLu8/yq
usaGlvbiipqS8poeJKa0rLqqsr6stDo3pxDcJsB353bqhfNXLlwA6p0H6p08
eRJC+tWrh5/xAXCZmVnQHMHeAILVNeU9veBju3t7m3s6G9If3T53+psLZ09c
u3j2ceqd2orSvp7OWzevwsOysjOgG4J7gVYIyxhWNXAQWuGVqxegG0IHDAQ9
y8lYNOJXyQQq2bReIWxtLMt/9kAwNSbgjvKnqDhUU/7zO/dufVNcdIs/haLT
WyZZ7SMjNfUND6prUkvLbj96fKK9Paey8uGZM3/5y5//r48+/KfPPv3nG9e+
zs2+PiscHhvt6u4sOLy0NQtDonTVNmZX1mTmFaaeOvvxnz/8p1t3T6U+vNDR
XQVQ3rt/OfXBlU8++/cjR//65ZG//vXjD6DXf3nkM6hPPvvwxHfHQDlBLSH9
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
GpLRgkHz8tXe5ua6Uin3eDxqrYZGHzOaTesbW7Hl5E//9bel1RWJSrZgM8VX
k9RxenpW1uOnWWXV9TWNrd19mNKq2pbOnmd5eelZmelZGXUtDRM8llx5eKp7
OOTd3k7GQp5o0Baw64Ucygx7iEbqLitIIeMaMH2lWHRJa0vGAKaUQe/oAANT
kcqeQNJG28dobW2tmU2N6ROsnlkRDnDkcmB7C4VS39mZ2dn9FEMsJNJKkdjs
QXLRADGfQCqqq79dXn61ri6lueUJtNHu3lIkqnZkrJ9E6eMKGLNS0eg4bYxF
n5zmqHRap/fwi8RSqQCIBjR0uUwAEyiq328H1KxW3cuXWysr0a2t5fdaCq/i
739/BwhGIp61tdj62pLHbQOnur21urYcH6ONFOU9LynIr62saGtqFM1M722t
Ox2H13ODeCUWi9Bo9CCOQBym1je1d/dhG1q7y2uaSmrqi6pqM/ML76Y/uZpy
907K3Rs3rgG3zp07c+HCBYgMMIfscPz48c8///TEiRMw/vGPf/zznz8ACe3s
bB8mD0HIpYwMYQb6mKwxg0EXCPjcXtcYgz4vlfQiER093b5QeMFijSdXvMGQ
xeVw+FwrWxtStXqYxqisawQbXFHbCHtUUlnbhURl5RU+zMg4d+XSmUsXisqL
mRP0WfGMxax3WPWQcBf9Vr9NN80a1ki4HMZgQ+XTIWwDldza21lQUny7seHJ
OL23pSkHi6lF9JQyGYiGugwivoFO6yaTGklDDVRKKx5XA2iOUlsoI02YgVIs
qWRiugMklMZswBGKiEMlLS0PGhpSayrvlBTfyM253NdXhh6o70ZUNrYU8vhj
8woxgz1OY45N8Nhmh2Xv1T4gJZMJ318Uen097nabDQYFYAqoBQKOjY2E0aha
Wgq9ebMLwO3tre2/2NjZXV1aDvsDjp3d9Vev98wmHZ6AmRXNlJUX3bl9s7Ki
bJQ6Ms4YI+AHCQTc1s46XzhDpVHo44zuHkRJRXVlTWNFdQNUQXFFZnY+sCDl
0aNrd+5cunHt8vVrX3z1+bffHbt48Tx4RQDx8C3oI18efpz3+acf/OmPR48e
gdgOOQL8JBaLMRoNIJVyuZTLnRSJBFLp/ILJ6PX7lleSbo8vsbLKneErdDpv
KBpdWlHqFhaTSU/AD+tWrtbMyxVGq6OmoflpVh6sqMKSStiflo7uzJy8p9k5
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
M2hWxxw6u1ra8+jW7RsXYzHP/wL/Dt37
    "], {{0, 75.}, {112.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> "http://www.eol.org/pages/42384", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/133/\
13330bf235c1cd2e9f6a1224bbf75143_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{112.5, 75.},
  PlotRange->{{0, 112.5}, {0, 75.}}]], "Output",
 CellChangeTimes->{3.832580902877149*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"fce1eb8b-8745-41e7-a987-e8ec083d994e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"animalImage", "[", "\"\<rat\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8325809043253508`*^9, 3.832580912067398*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"88ef35b7-243e-408d-addb-f677657a63e7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJwUu3VwW/m+7dl9TnfILDAzM6PMli0ZZFtgy5IsZma2zMzMzEyx4zA4zNhJ
BzpJdzoN59x739w3r6Zq6r35Y36pbKu2VU4kf/f6rvVZuxQftgLP/8d3332n
OQUe8CxDtlrNMhHswTflco1IIOdxC+RanoCnTmb/Ezw5Ar4U4Ovbua27l5WD
g7+3j1DIHx/pX56bOnd2c2SwS0Qtk7JJRjVfIeXU1+tMcuHUyFh//6CExc5D
xOMwiegc36QQ74TQ4IS45PT0zPTkNESYf1pwSGpQbISTnzfczckBamNjA3F0
8vRy9Qv0soHZnIbY2EId7W1gUGuYjQPExsEePNpCHKxgUFs76CkH69MweysH
G1s7BwgE5mgPgZ6w8YGeoKFTbm0sPriwU5QV6eT0nX+EvZ2T9Q9uJ0/4nnZx
P00tK7CImbU6CauytLPOrJOII7zc7exOnnYBP2N1Anra1uaUDxSikwsXhgbn
29vXJofPLs9ePrt9/XDvzqWj46OzK5PDK6MDO/PjV3aW753b/PTk1sdHV59c
WH5ydenTo0uvbuxfWx2/vbf69NLBvfOXRlpadEpxa2t1lUZYK6CV5mb4erj6
eXj4+fh6evk5ubnDHOFQO2tfL1ejSTvQ0dZpMhg0QkJBFrk0T68W6DXihmoD
j0NkUgmdbY0z48PNKn6zBN8kL1DwK5Qyvq7KJDdoNRZD/2Bbc53ZUmWSCPik
ciypAl9YlJeRjUBnRZcUJacgwj28YA5gimBap+yt4E6nofAzMEdbqJOdPcwO
4gSBQa1szpyxO21nYwt+BnLaOsjPPzrav7Ik783jRy1aZZAHNCDSIzjeGwqz
tvewtnc/FRnmrmKSqkXs0bZ6GqGwOCOJSCxxg5y2tT1hA7O2dbU/ZfuD9anv
iOW4zobqegF/qatrd2Hqwvbq1d0tMMzrhzuHy3OjbY2L/d2Xd9ZuHW2DYT69
tPv86s7jS0t3D6fePzj36MLqg7Mbjw63HpzbuX+wtz0z2t1sVPIpBl7FgFmJ
y0cii/MKSouyi8FRnJ2ZGxQWauVoawOxjgoLrtNqG7TavNRYVHy0mEOzaFV1
1XqjRiGTMDhcYnEWojIno5pRNqSqnG/gtOq59VWymnpz71CPXi3qbtJMTba3
ddY11GlralVms7yjo67erDTy8QJyJqYo0T/Q2Q5iZWcPsbKF/8PR6Z9Ojmfg
LrYQD1sbuJOdp4uTu70D2BI7cGWhEBsPd+eklMTguLD8vCyTRhfr7xcU7BtX
kBaZFe/pAvUJcvPwtAVXvF2vFBXmNesVKinfw/pHqN0Ptg4nbKF2tqfOOEBt
7eG2zjan6URCZ52lS60aqbFszY5f2V2/d+XCvWsXwflMe9NUe/PNy+ceHV+4
d2n/2bXD59fOvri2++J44975uVe3tp5e3gKTvLW19Hh/7cnZ+fsHC1e2JzpM
onotp4pZmhEdVMakMqVCkoBLEotxBegMZJpLiLu9p4O9w+m8hERGGSkpPirE
zRWVlmrUKLkUcpVOV2epElLpLeaWao2FiccRsuMkLJRJTKg18vUaaV29qa5O
22hgtTcplQqagIvTq+gKBrZKweqsVjabZFIRJTba/9SZH0/AYGecvE47eJ5y
gp20tztxxsrWDmb7z9MhgRG+vv5uro6uEHs/f8+Y5Ggvb1e4jZWNnS3YG0+o
S2Cgv3d4sEuor094oL8jNDTI08/Fhl6QuzjQWcWlEvMyEFFhjnY/WjvaWDs5
OHl7ODrAHeyt4TZnPCBg5ujBzrZz6+vn5hd25idvnt+/d+lwe2Z8vLVxsq1p
abjv7tULd68cPLhy8Oj6wes7F17fPHxxff3lzc3XN/df3Tj76urZB+e3Hx6u
vjg782B7dKFV26FkdJsltKzoIJhNdHRkMQFXxmbjWKzUyOAgP1dHd8gZyEmo
M8Qd6hjk7h0VGRro6cbn8yfnFscnprY29wYaO7oMdatzZ2enths6B4rxmNBg
N0yCH6scLeKzRGKuxaI0y+lmNYNSnEbGpJGLMysKEVoJhY7LiAvwh9vZnT51
wt7R0crN1c7Zy8Ya5vD995Af/ulqZ+Pl6ujr7JSalRYXH5WeHI9IiY+ICPDw
gEPtT8MczlhDrd19PWOjY6JTEn1jozyCwch9Qn3cA7xdvWx/oGalLw/297SY
kmMDXeytoPBTYL9sHOGeoaHO7h5W9megMFtPD+eM9BSTXrG+Mnt4uHHjYHtl
tG+mu2V1pHehr2tzahSMFxx3L5/79Prxy+PzTy9vPz5cO5puvb03Bvb95ZXd
5xcPXt+6CJ58sD++2qQc1AsnGqsatCJ8XrofzA4MCl1cRJfL0URCRlpUbKRf
THyEm7erAxxmA4Hb2tvZn/jBAw4pJ5L6+8cPDi9evHBjqK7WTKc06cz1mrq2
1l4uh5WXkZwbFxLp5R4RFJSVlVVRUcGmVYhp5WxcIQmZgY6PLkKnFRSmeTmc
sv3xDMgXOFCal6OHt1NooAci3I+SmSwl441aUS4iEpWbQGRjgn0d0bnp+Aqs
vzfcEXISDj3p6GwFc7cLiwv293f39Hf1DPcKDPeODPD29XAKCPDwg5whpaWs
zk2QcNm2dt9ZO1tDoCDTrEF4ufgH2/j4gryDuDg4Otm5Odt5udjgcHnNrebp
rub+GuPyWN/tS/sHK3Ng0482ly/tbxyf33n//O5Pty4Cz7y1NXO8NnDncOLW
/uTj8yvvHxzf2l27s7/29MbKZJV83KgCjtFcV12CLfV2d4mJi0RiCpClpck5
yIQwryA3u0h/NzdnqKubo72LI9CPMwxcUlvnU6cy4+La2trGR8eqZMwGNZtb
WNCm1Z/fOttttpDTMgqzkxFJ0eHBAb4u7uH+vglxQVlRQZSM9NK05ILU5JKi
3OjoYCf7E3ZnTkIg9k5OdmHBLoTCFJOQ2G3ktevEfXUaFQufFAxH50WzFZWB
Xnap4QG4suLc7OSYSC9vD2sgrtAI36z8dH8vF5jzGTcfqI8f3M/FPj48BIcv
LEiPEVXih4abfeCnbeCnrJy+jdIeAkwXcMI3VZxwsLJ2sbd1toO7QpGoVEol
gVpaMGA2LvZ1zfV0HCzNbk5PbE1PHK0tHx/sXd1bu3m4/uL48P3Dy/eOFp5d
Wr13bv7ySv/dvYUXV8/e3Vm6sTZzeWt0rqMW2Gy1XMKkUEIjo6KjwrIzktLj
YrIy06lCIZuAKS/MRSZGxof5Q61PAOe3sbJ2c/UKDg52tbd1h52M8oIgk4KS
A105xBIFm1wvFwy31RlpREpKPKEkXypiY/Izk6MCw3zdPBytY4O9kKGBORGh
qOSk2CA/J+tTHlAHH0+X6KBgREQQFZPZJGX2ymnmiuzSpIiCpIjM8IBoL2cg
yMzsjFBvp7SEMGRebkVZKR4ZiU72CfK183J0QaExMVHRkYH+sREhaZnJ5aTS
Zr1ppK25WcMzqeiZKSEu8NNuXp5WEFcbJxdrOMweBnWBOfg7gF8FhBnstO2Z
mPRUVbWpJCPTwOPtzc1dXF/fnZ3dmJg4XFnenp4+Ozd3vLt7a3/38vrszf35
l8e7t85NPr68eXtn8fzcwNFs/6PdxRfn1+7tLawPto101DSaVSI+o4JCSMvK
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
n88XiiopHBzSICUNtJvbq1VNWkGtlKerpFg4/EYpf3mma399Zmt58tLR9trs
RL1a1qnX9NcYF/s6NqdGt6bH1sf6r22vvDzefXRp7WCu9+zywNp0+85G/zZo
I006TlGmFIcabzWt9rXNtlZtT44f7+5u9tWen+g4mOq4crAwM9WLQkT6w2DJ
gf6iCmSjGMNARmCifJICPU9CT9s4/BOfl1BZnOXtaVdCKDYYdHqFSMYkAQ0k
JcYkZSTl5+QwyollBWhKUa6cW1mGSsUBkfm6ZCSGFaOTCEXJxIJkXHaMQsYC
4hRyaCwKViZmSYQMZgW2NCsVFJzaKjUuLwWosawgqSAnOjs9pkonUsiYIpOc
RSsTsKliFqUsE1GBSPw2wPs3f//13crk6M2Lh3++efPw3Nl7l84u9veXpiKy
k5JxaBStoBDU7bZaJbs0G4+IllMIanqFhFCqI5PaTOoqMUdSga1TSUH3Ngk4
jVpFo0pRo5B2mnRjLQ1Tve1b85PX93dunl28cbCwuzBw89zShf2Z6YE6INql
wcZre4v3r+ys9DV0ythjRlmPXjvV0XZhbmS1r25/rmdlogOYjIJeEQGFIIK8
6fg0QWkctzwZnxCQ6uXm4gX1CnJOCvWpKM4NcnYrKSxQaZR8HhOTnY7OSIiL
8vdzd8yOiwYjAnWPjc1V80mkvKSC5GB8YToqPbKiMCUryisv3hckoIhHBbkj
5FZqVUIxp7IsL4NYlAe2vrIUqeBX0LCZzHIkg5SXhQjFY5FttXqNlk/iVeJL
ioqys5iY4jqdqqvR0t9dD4Jga3ri8Z3rPz248/zw4NW1qxcv7p7bWQPtdXFs
aLClZqS14ezUzIsrl6c6avqq5fuLI6vD7RNtlv3l8TtXDu5fPb68vfX29fO9
xQkgsF6LDDgGl4JVCmmNJmVXg2mqt3W0o2m6vW1tuH91oHdr9Fub212Z3xjv
vzbTf2GqZ2+gdbHVNFurXmoyTbVX1cuZI036yc6aleHOc5uz27NDBgYNmxCe
He+HLY0jYKLQ8Y6VaUEqCiYnNSQ8wR/u6pidhSLn0ZEpuQKJlEIlJ4WEZCRF
hfs6xgd4Atqh4NHpoX4CGo5cmETPRzAwGeT85G9TjffJCXahF6cqGKUiTrlc
zLCY5aAJAjUysAXMihIMKlnCx8oYeWJKFpuCJGKz8gE4sYiNejmXiqOJmT52
dq4nfixH544Ndg91NkxNd3e2VukkLICmGnZlUbA/GZEELpxOwu6trV2aHr10
bv/+retPbx0/v3Hj6u4WqLqr4yNg+JfXV1/eu/P26ZNfXr3588tvf/z6y72r
h+e3l9Yn+6YGOzrqDFrQGspLVByKmkUG5y0GZW+NvrfBPNzRNNTeONrddONw
7f7O/L3d5SvLo3sDbWudjftDXaAnNqs5Y02megmt2yC+srO8MNQKTKkYnZqb
HIyM9aSi4zV4ZLuC3dyoLSpJ9w/3iEqJyUHmY3JLkckZpipjcWFeXloSyILc
pMiK8gIsOqswK7GiNJdckJYT7ilmF0upxYBDSlKCixFhFHQyLi2ElJdYiU7T
iWgyTgWohKW5WRqVmlSOpRALq8xCk6zcLC8Df7EElUqllRchk6uVQlJJDl3M
dD91MtLdtTgruQgRmxXuV5waFQOzzQ72YZMwOjZ1qrWly6DOjPEHOucSMAom
uVYpERHxZnpll1q1Mzl9YX3nYG7l5sHRp7e//Mef//nvf//nl98+//Xn1z//
/r27SmVglbWquCoaUVFZxilFFcdHoKKCEjwdsTlJxYmRBcmRpcgkkIxsHHpz
ffrZtfNPzm6+u3b+wdmN60uTe8MdF6dGukySVrNoc3Zwfri1Rc83C0h6JqEs
Jxmfnxbhah3lbgMUVS2iTw93WFpNiYmh/qHuyIqiMkZlaUGRQQcKqx6QDyol
rignpQSVQibkxYf6xAZ4kMpROdG++YnBehUNnx2FSwVvzKs0I7I0LawsOxaX
FU1LjzWyy5XsiuKMJB6XIdcbEckparVQp2C01wirxCROBRpgFTorEYtKa63W
MknFutaqnHREIQqZGhuWHOoT7e5QkBKa4glNgljnR4U+uX39+ZXL984dSFgV
9LL8jpbqjnqLWchtUSmPdjZfvHjx5qd3Hz58fPng8c2DS1e2z15c27tz5fjl
46e/vHv58smDkeZqsKHj7ablsb6lyZGB5lodl0bMSy1KjQTuXW2QGFUCJgsH
bL84JfrG2d2X166+u3397fXL746vvju+fnd7bae3u8+iMojJgGwVdEy1jN7X
pF0a61htaljs7RFTCYg4P1B8shDhYimDzCAkJoclZ8SWknFMHgvUNI1CrpQJ
zWY1AMXKstz8tPC8lJAwH6coX5fEcO+c+BBiUYqIjsmN8sSlhZWkRzAw6awy
JC4jCgy2UcZsUXKKooMq8UXVDRY8sZxEpze21YOUr9dzpYxSCiYbW4BMT4kE
OaUXcQBnkgWUzKT47IwkV5uTrlYnxMJK8KJqLpmYmYIK87979cKbW9en2hux
GbEJQe5qBb+5xrg6O/Xl76//9b//11//+vrbp3evn97/8PzxuxdP3z1/dHx+
53Bl+fq5gxf37nx8//rTu1dvX949vrC+ONG/vjzVWaMXUnAsQiG1KBsTE1oQ
GsDAF9IZpWw6vlbKf3l49ObChVeXL364e+fr82dfnjwGU13v7hCXoYvjfIGz
zU92Tgw2NlYJ1VTcxZGhn+8fry/N7F87p7NoS0oLqRwqmU6i0slsHl0q4FiM
uvoak4zHqavWmzWSGouCRUYVZ0UUZISH+7mG+jolR/qmJweUoOLwhQkV6CR6
cbqCjZMySsoyojP8nWRsrFnJBRIl5CCEDKJKKsLm52l0aja9UsGlm+VMPZ8I
cAiHzgeAqtMI2mp0ACyzC9JCvT1jIoNAz4VZf6eUM4BVyjhkYJJ5GeEF8VEz
3c1GAS3GBxbhA40PdNlan/vtrz/eff4IxvT2y/vXT699eH3v84dnv7x5+PrF
3a8fH/37P/748suvX3/9/OnDm2ePbjx7cPn5/cs3bhzde3H3/qOb6+vzfc21
FhFHx6KUBgXFOtkjQj2SAt2H66p/PXflp/W919ePf3/y7K937/549er+zu5G
WzsOEZrkbRvnZCWuzNcKiOT8REysX7OI3lWjmpgeuXLveO/S5XpzvaWqTmMy
aDWK1uqaDnP1aHu7RShqa6w2a0QCCk4tZihFRFZ5Oij+4cEeMRG+mWkR6Yn+
GbG+Jeh4UhGCiEwgo1NQMd75MT4icoFGSMSjELmJEUVpSUCK1UZ1lUZZpVIS
iWUdrXUyGlbNxGtFPA6D2dDWVF2tktDw5QXpklqNgITTAC7FocOcHeBW36AX
YvtjgKNdz2BXXmxkQVJcckyQo+vpEDdnFYt9787dh8c3n947/vj65R9///bl
85uvnz/88cfHPz6+//vz+0+vn757ev/XD6//+P3n335++v753SfH58Aw713a
v3O4/eb57Z+e3nzx85OfP75aGevs10uEmKzcCI/sQLfjvfW3exfeXrry64uH
vz66/9ujJ3++eP5gfeOop9dIJUlJOGJ6MjYtDpeVmOTniooPJWakKZg0CY2q
F4tHugcmeofbzbW1WmWtTDLc3j4/PtJcZVIJeH3dLXIeU8Kly/h0Pq0Mg4jO
igrKSQiPD3QrTI9Ij/BIjXQjE1KpxcksbAaYITY9klWSScOkgRhCxgSlRwVS
CYU1ZoVexqUWZmEzk+obLJxyPADUuipdY6221qzXGVUGvaq3tUmrEuOpZb1V
6m6zpr+jjlSKcrb90Rr2o1ugs5P1GSy2pAyLS4iOCAv0jUbElBeWXL904+Wz
Nx/evP/8/mfgir/98vbLx/fvXz8Dwf37L2++vnn1x4dffr57/dW9y//+/d2H
n27/8vTOk+uHPz+5dXtn8cbq3PW1ueOduYPV8ce3L/709Mb9C2sPrm6P9lS3
m6Qvbl/59e6D3548ff/i8adXL359+vTTnfsvd8+d6xqQFhbhoqK1DGqDVmXW
yNpbQAAKpCRWW1VDrVI31j24Prfc19JzuLY2Um9p0Sr7mus7W+rUMnFXZ4tS
wtMpxUIGSUAlSrhULDK9MDk+O9S3ICW8PC8hO9KjIDlQyM7nknIk9BIiMh6E
OL0onV9ZUFmYTMPl8al4rZQl5ZLL8tOwuYlMIoaOA2UzW8Sm1NXpB4bahfQy
4Mx1DbXMEgwgLiKLJinDiMk4CZdShkX7eTtZ2//DFmrt5OJsC7Wzd4C6ubgH
ufsqZOoHT19+eP8ZHO/ffnj78+tfP7797bd3X395/+3x488fnj/9+v7t+2dP
nt66+vretQfXD758evX3lzev7l493lm9vb18Z3fpp7sXz69MAZUuDDSPtxnP
zvdvzvQc7c4eX91/eePK748e/fHuw+ePX7788unzu49ffv39/aPnO6PTRjZX
Vl7eqJVZZMIGk1Yv4yt5rNGuvuH27o3l9aP9c4Pd3UeH55emJvpra0e7O5sM
qgaDCsyzSq/UqUWg+sn5lVolVyNlkzHI0oxEQm56RVEmCZeZHe1NLcvk0nNl
bAwVlYIMd8dnxpikVGoBQk4vUQnJei1PDpAnI4aMz5HyCGX5CFxuGgeYhoit
kwuB4ME1kol5QlalrJLMp5EkRjkmOSbaCRLiaB/s5erqCnGA2djDoKdsoKeh
MCsXF0dH5+SgpItH9/7rf/5/n/7815c///Xbb7/9/uXXj69e/PLiCShKP798
/Ozh7T8/fQDDfPvg9rPb14Agb1/Y+vXNk4+vH76+e/3G3vy7u9evLM/eOdzY
Hu9bHupoN0iqeeQnd/bOLg+NdpiXRrrf3Lv99eXLP37/+vV//PfXr3/+/vXv
P/79329+en33xs27N6+vL83VauU1ShkQp4xJWZidWJme66lt2VzanB4aHe0f
HO0Z1PMFIz1drQZje40FiLNaKaiSsQEwCGiEOrPcpBQoOZQKNIJLwpCLMzPD
PdND3UiYNJmwjFmeCdYcaLIsPULDJ1bkJlbkJtAKU8UsrIiN5dKKqNgsIauU
hs+iEnLYZDydUMwi4tUSFlgTpYBZU6NXi5giIlZYWQ6IAZ0YFe4Gc7c54epg
DXewdXKEOTm72jm5wtw9oU6uQb7BSysHb5//9fHjX1//+h9/fP33n3/+/ddf
f/3+7uePb54+u33j52ePv3x49e7Zk+d3jl/fu/3pp0cfX9z58u75lzcPf331
8OnxhYubcy9vHD3c3zg3P7LY2zTXU9coY4DqtDXXAWgckM/2xODL28cfHzz8
9Oanv/788uzh3bv3jn969ezCuZ2V2fFmi07KopmVcmCJbWbDREfH5fOHvU1t
rVW1wC2HO3rGegeajJZWS1N/R//k+MTMyFBnnblawhrvskjphGoFt14naqvR
qvkUSm6SgIwpQkSnhXrmJ4dQStPLCxOJhbFcUhanLFtIRpWmhJFy4uUsLMhx
SjFCwitlU/Ia62SMsiwuOY9Zmc8i4QT0cqBJDoUgYlNBwDU3mCxakZFLAzWH
I6FnRoSlx0Y6251xd4G5ubmAWcJgEBjcztHW2va77xrrWx4++enc3vk3rz+8
ff3Lm59+/vjzu1//+A1oEpDPiwf37h9f/uXnVx9ePnlx68bjqxc+Pr//5sGN
n58cf3754Nnx0a2za5fWZx9f2H14tH1pZfpwZXJjoru7SqaqLDYJcFNdluXe
pol68/HW6vPLF+6e3fz88uZSX/PicNvGTE+NitlUI2SXYxhlJWoeQyfgdlpM
O3Oz3WbLSDdoVSM9DS2D3b0zwxPjfYOLM8tD/RNdLR19nW19LdWLo53DLRqL
mNpqEHdUy6pElbzSbAW9RMMpw2Uk5cYGl2THFKYGoxJ8aMS0SkwSn1yAjvYu
z4wBUMTG53CIeSJ6Ph4VTcWn4PMjOKQcpbxcQC1kk4ikIiS9vIRDKTeopWaD
sqFOCwr4UL25tUqhr5XnI1KQGQhPF7iLK9zd1cMD6gazPuMCPYlKT6ajUL//
9mVyZHBhdfE//s//+fDpj0+ff3v68NHnX37+13/8+eXz2z++/vrx/avnD279
8urp5xffjle3r4IAevf41v3z29e3ls/OjezPDt7cWwIZdHF5Yh98uzjSY5H3
1SjX5tr3l4cvb87cOVh/eOHw6vra8cbCpeWhFlHFUI2oRkqUkJEWDZFHJVSW
YaQcqoJZ2arT9Ji0/bXVQI1ggECfPY2tQx2d82OTY8NT1Yb6JnPDzNDgTF+z
jJAjLk4dbjOMd1cDA2QWIRglGYDJubicioIsPh1XlBqOTg7IS/RCJ/vgkZEA
L4sSA0RUDDBMkD6V+SmUkkQGKaM0O4hcmigTlBo0JC49H+z4N9sk4QF8grek
kfKrTXKdgGKk4Y2SSp1JggyPj/Pxcjz5D393h+zEaCWNTM3PJOTGjPXXDrdX
yxjExFDPbGQiriy7rAgxONRw58Glz19+/vj5p1//fPv1/3737//16V//8RFk
98dHx3/+9PIdsLm9lWfHF94+u//t8yfTE+OtrZuDvZeXpjZGeidaqpWkklYV
f29t8ubh6qXVudWe1qtbS5c2V5aGB+YHunuazEYxTc0n8crzlWwyqA8gOKS8
SpAjIhquu0nXU6PoqFF2tjV2tzXsbi12N5rbjfKdueGBWuNsZ1efSTVeb+hU
MSlR7vz0IGVlfo2KZVEwavU8GjaLQUCChS3NiQHWlhnulhbqCNIclxsDzDMv
LoRYnJEe6pIV4cmmoBmkNDoVickLQwTDCOgYJQ8HZMkrz5OxcCYVXUYr4Vag
G80ii5ItE5brlLRaFRcsu7xKnBcehfD1jPVyIWJzhkdaNmeGwRpWFiZ+u1fT
XE1IS0yPDvaAn/J1swp0tfaGnCxGp5TkppbnppXnpvP4Zb19dTeO91+/uf/q
3sVfHl77eOfixwc3Hh5s3zjaOr50eP7sVldr41h3a6dZ01Vr6Kg2sAj5Ghmj
vdk02tV2sL56dn3h7NrsHtjqZn2dUdLTXMMjFMioeA2P2l1nUHMrJexKg0as
kXLVPGqDjtdiEg52VFlM2qZqTVd9VX+d8XBtCljHdH31emvLqFl9NDNgIKGI
MZ5tSlKbQTDQYuyqUwoq0BJmCYuYS8akohL8kNFeqIQAFjGnEBEKdhmVGFSJ
ywdemugNKckMLUwN5DPysIWIKH9INiKYQS7QK9laFVvKxDNLM4EV0IvSZMxS
Na/cpGRUW4QqKVlCQBPz08nsUlYxqgKZXGcQSpnYvmbFraPF4QYVrxg5VGd6
cP3ozYundVWGIEdbL3eop5eLn58bMAQvJ5ifO8zbGe7sBPVyhUX7uVag0tan
un756frPty68P7708+2rV3bX79y8uHWw2TvU3d7RwK4sV6vFIjE7Jy3a3xPi
4WQV4uzJJdOWV+bnpvp7201GI7W2WmgQ8YE9Npk0TQaFUc7TChgSFqOlsQYs
VL1RUaMUNKg5Rj6pzmLqqDW16lTgVbaHuvcGO+8szBx2tu801+8OttEQQd3V
/I2FzrWpHmC/ZhEZtD9mcUZBYhAuNw6TGQmqJZBfcU40Nis6K8K9ICU0OzII
nRRcUZRekhlOI2egEj3SEsIyMuKRmYl0Gkkk5FAJJUBCcnqpRkw2iCk6YYVJ
WimhFyuE5TxSHqcokwHmSSniEFCF0X40ZLyClG/mYa9sj4x3GGRE7PbU8O2j
c29/ejU5PRbr6+cMtYc7Ort5uLu6u3h4ebp7urkBc/D29fLz9/Vw8rH7Z0aQ
0/H1tc+v7jy9dPDi1qU71w5XFidmliYa26tD/dzC/N0DAjy8vR2h9ied4dbO
bvZW3582VjWsbO60NBlra8QKHcFs4QNKHOvtmB4BIS8DVNleV9XWVN9QX1tr
MXQ01HZUGXVc2lBrzWBf58He5vsPr2/tbd1bXvzpYOfJ7Oy1/q7LA10DAiY3
K/Zoc/zi2TmQfcuDrQDDFNRiMExQvQHzlGZG0YhIAO2FmWE5MT6xbqcTvCDI
qMDy/OTSnFhiUQI62a+iOBaMMS02urgwD4fJp5OBQ3I1Yk6Vkm5W0JotkgaT
uErBaNDzjTq2XsM0iahcKo4uIBZmJRYmR+YFeRSFeFEyw0e7jKMgHniM+cEB
FrpQy+cVZmV6O0FcIfbfUMnZBYzT0c3J6dt/f3JxdfYAIOoGdQhwhfk7ns5L
i+hsM12/sn354tby8vjoUOf0zNjY+KCPi5OTIwQOg9g7WH/7DJWjPczV0crG
Go0qGp+Zl/GZFqOUTEV39TT2NrdMDPR1NTU0mozdDS19TS2DPQNaubK3s6NB
r1fQKoc7mgY7mi9fvviv//f/+fzp/ZtLF3+7fu3D9u777Y2jrppzvS2y1Oge
ARNk39XdFZB9GyPdE22W3moFyPQGHZdakErCJBYggrCZEdmxXuGQf8Y4/wCw
E50ckxniXpQRlpvsmxPjRS6J/Xa/rhyDjI/C5aYq+DQVhymsKBUziumlaZR8
hIKNV7LLgSHLRUQhq8TIJUvZJDVIc3ROalgYLim5PCUxy9cVi4wjE5A6neTi
tQtyLjva0xOMwtnVyfGMdbALLCLY3w1q7wy3dXa2dXOHecLg4X7gKU8PKMzb
y8PT1QV28nt8YdLkcvfaxvTU1MDG8vzO4nxMUDAE6Br27QDDtHOG2rpBTth+
LzcqR0dHayQKAI1dna0jY6ODbT0zQ1PLU7Ogaw+194529DfVtnR09nZ39jRW
1zYbDOM9Xbury3/8z//6/e+vHx/c/+PR469Xrv61efBwcvDceH0Ls5gU6Lbf
2/Jsd+9oYGRzuGN1sAOkXpdZqmMR2UXpVFQyn1IIgJzPwBSnhWaHuxWm+oMq
lBLgik4ISQtxxaSG0ElZlNI4GjaTlJ9agUqUkouMvIo2lahexjZIKlvr5NUq
loiEUvIIZhmVXJImZJQ0avhGNV/fpImMDIwP888KCy5JiSehMym4nIQQF3wJ
8uDquZ6+TiaVHOjmAnG1Sw71Gh3s2NxaKkOmZMcFpycEB/s4RMDhkysLIgnf
yf6Mp6uTp2+AiyvEBfJdZIhjXZNuc2/97MH2/MiQv7O7gz3cBgp1gDvaweEO
cGeYI9zO5nscrqCzo21yaHJ+dG5teWtufG5nYWVvY2duYqqztn5+bHyku6e/
s3d2dranqblJqx1rb9qcH718uPX133///vmXPz/98ufzl5+Ozv88Nv9gZnim
TkgNcebFhY6rRDcnp45Hpm8szW8P9YGRznXXNKo4TVqelodXSPD1tWJsdiQy
0Q/QJj4nLjciqCgzDhHsnpsUxGcVV2IzitMD6egEYWU+DZNWiUqoElOmu+t6
6jRN1RKjgt5SK2uqFvd1m3UiMpAll1bIxSGlbCJXxUiN8kmP8AYNND/Rtzg1
SC3AkTFpIj6to6OBWpyPjApGxoYVF2Xeu3/p5bWDDw8ug7B+cfXsjcO19ele
JgqNS08U8LCo/FhvZysvVyd3Nxc3TyjQrQfMTqASDc6N56UjnK1BQ3U+DYX8
CLOzcXJ2gjjDf7CNcPZpamzbv3h5aXVrfWV7uGfkwu7hxY3Vhd7O8Y7Whcnh
6YG+icHuyd7e4damVp1koFZ1fLg426E73pn+4+3nL+/ef/306evL58/3dx8P
jm8YtKxID3akjygpuo1WsdZQezwzcXlqaVRhWO9pXu41r47Vr052i0j5fFFh
WUECyHR8XnxeTHCajzM2G5EaGxLsBsnOiU6J9cqN81EwSsH+sij5AKJo5Tky
CRG0ITEHSyxIrsAg5IIyIQfLJOWBFAPDZ5YjWQXpSj6FKSIl+7hlBPnkxYbl
hvnjEiPoKAQ2OXJuZOiPr1/2V5e5GAwLX8Qml22uT//89M7nF/f/r1/f/efH
tx8f3Pzrp+fXzx1WgEIR6oHPTUKnJXpb2fs6u9g5nXFyhQKJhkWHOkPt3CEO
cDs7qAPEDgqxc4YDTTraQ4JdvJVyBUif1c2dtdWtsYGRtcWN9ZmFkYb6qa6u
jalJkPBj3e3D3R0tJk2NjD/YVL05P7w7OzDfYbl7tPr6waO/3/3y5eWr50fn
nm+sPhgYNWUlVfjBGSEeUkTMfk/bel3N/YX5xYb2dolkdbBtb7qr18zT0kob
9XwuLbs0I5RBRhakhJQgosqRKflJUYjooCg/p2BPCCLOB0xPSsWQihAFaeFA
Vxo5BYyLQ0IBw1WJK4TMYgADIMTVMnKVni3iEyw6TptB1mBR6hvVwBXjA3wT
wkJSIoMzI3wQXo6lMVGLQ/23b1xVUmmBP/yDVJJnMCsSQtywqDS9mF7F5zy8
ce3940dPzp17cucm8PlrO/OTrZY2k7o8A+ViZ2vvDbeBWcM9IOEp0XYwGxc3
R1u70yB6YI4OjnAHN0doclySpbZpam52YnxmY2d3cnSsr7l9ZXK+r7p+qq11
ZWTk7NrqSFtbP6i+anmTTt5Vp10Z616f7Jvurrm2NQea1KOLF//1/uNvD+49
3tl6MDcxLuJxQr2YEe6VQS5GdM6bi+fO9/et1Fi6ZBoROr9ZRBusl9TLyhuk
9FYtX8LBsCuQgDlxeQnlmHQUIjLaHZ4S6hcT7BLsY5eXFcFnFBsEJHZ5bmlO
lFyIl/DxQIQVpWlmHXt8rKm+RmJQM5QSkphdqldQgWiB/QqxKJWApq5Rutg4
OEIcIE72Di7Wzo6n4Se/U/JYd4+vCkjlQfZnQtyh7tAfosO9PbwgLk5n3Jxs
PexPxfl4CEnkid7uBzcvvH1w88Px2eOVycdXj57evJsRn3DCwcoODhQJdQv1
swJ77WxvD7e1sz8Dyr6/szMWXdgzMDy9sDw1Mbm0tLC1tj7a3z89NLwwMtZX
Xduu1ezMTS9PjvfU1NRrlPVGzfRIS0+9cmagYbqzdrazYX2s5/zSzLunD39/
+uD12b07E0NzWokyK54R5skO9WBHeDUTS17tbd2cmpzRaVpVWnRwoACbM9Ao
bdbQ2g2iOgXDJCawCVlAbCA7EJGeSWEeiBCvGG+X+FDP6Aj34sIkGjadhkok
F6QA8yzPT/q2xRQ0IAkGPrsSm0avyOVRUCKQ4Dp2rUWkVtF49KJqCcOo5gLP
BLtnB4WdcrL/wd3O2vHbR/0XFub++Pih1WL0tz8Z7A0P9If7Bzj5BXo5OtrC
XO09fN1cXBzcbW1jggJUHNLRxtTDvdlX5zbuHmzdu36lJC/fysoKYg91dHf1
Dg8+A7W3coSccTxj73A6MiJEJZOPj07MzcyPT45NjPatLE4tLk4OgIrU3Hpu
Y6VNqxlvbhpubh5raeqpq26vMQPabK2SVEspQy1VYx3VS4Ndh3Oz1ze33ty7
8eXO8ZOlhfMtDSNimgwdy4jxEcYHcuP8h4SMR2tL16YmliyWjYU5THysioWb
6NGPt6s7tHwgzhrF/8/Se0YnlqZpgllVmRkhj7z33ntvkQMhJBACJIwAYYQV
CO8FCCsQSAJ5byNC4RXeZEZmRnpXWV2VZbqqurq6urp7umfmbM/M/tgzuz/2
Ve1y7iFuwIUjPd/zPoaD7qVefccM04zrr+tuKelsK6/OS23IzwBUaytSm6rS
QRVnSAMUbCuIKn2sW6tgcCZQwGQ2BX0VAxjDfBZeMI0DQsJTCzYJh4Y2COjK
2WmBkpMRlhGPSL+elBSWkXQtIryro/uTV5/88zc/Pw2FqhDR5RmJ5bnJ5bmJ
TdXFRclpqYj4q4CZGJeXkVGcl1WWFgFR/8cP7/zbtx/+6uOXAYuhJjM3KSou
9lpMbkZOfnlleHRMZExCWFp4ZOQ70jnxvXv3DkKbqy7vzmrw7Gzv5vn2stW8
al94evvWut22qjPe2d1ds8wHrfPg3V6LWS2amZ+lOfRT/nnhjY3F0xXvy/Ob
z45Ofvjk2S8f3/9s2ffMqF2mjXCR5TOd5eLG0gXy8ONVz+ut4B277YbZGLDb
WouyPS7ZvTvB+6fLR36LSzitncaISL1yHmlqcqC6JLEwK7IsNaY6M7WhIrss
P762KAHKJqYqB3oNFdcJsQfXVQUVHtQSNvpYJ/QmQBu4KuYShGw8nzvGAzcf
Rc7yJsWamZjoBER8Gkx4XFJiVkLmysre3//y93/59KtPnz7qLkwpTgwDGAsS
49LjEtOSEuMSYuMTE65uSYlpaWn5eYjs6Hdpw12vHt85O9pEVlemR0Rmx6Ql
hMVmZxUUldZERCJiklPjk2Iiw95Z3ds4ODm1qvWvnj0/CG0fHe77XPaDzdXT
ndDBqs9rVO0GXDtLPo9Bu7no2Qos2TVzWolg1W30mmR7Qc9B0BW0mtac1ofH
B6/29p4GQkdqk1cww2won6krEDXmG/GdD12GL7e3Pw5thITK20sbtCHUYGPV
wYrz7rZv16P1mIUaGUkjpnDIAzDjyIaChvKMloaS7tZK/EhXQ0lGQ1UOqr+x
r60ctuHu2qHWCnR7+RS5f4ZDoIz1E/pb+XSMiDnMIQ9CN2eOdnHG+8CtgL2z
pGEeZYQjpkOKjowNj4mNTElOZFCY33z3u7ePPnp1duPJ7WNsa0lh2vVedAcE
HvCPqKT42OTEuJQUuEckJUTGRcclAK3D6wryoW2RsRgwstL0tKxokF5EaUFZ
QWFpTBQiISU17J2f4PGja6dHdodrb+/geGNv3eU/Pr/ltC1srQT2Aj6nRnZz
P3TrcGt7xbfmdx9shNaWfQHnvEEi9Ft1brPKZzUsL5i2As7lBf3d8/0XW7t7
KvNEVVNPbvZgWQanrkA33HJvUf/Z1voXW7sP3ctHi6HZcVZFAoJPxq0YDUfO
+YPAvEI8NjJYCgY92FjYVpbWUJDcXJo1jGpHdtZWFCYWxkWUpkQ3lOU0VeQP
odrHh3vI4/3UCTSdjBnqqcWjO6UCetBv2A7ZoUtC2pRxCbDBsMPgWxU8Gf8q
GlUUZiZGvVOYlzpBJ01ihp5e3Pv+zacv7t05Pwwxib0FqdfKKrLjEmJirxJN
bGxcUkwsIg5u8YlR0YiyiuKpqanW4uIyROwEegTT04Xq6y1IzkL2DPQNDucm
ZSTHJSXExBOpk8tb62bbgm8psLO1reGJT3cON0NrujmpXiqyKmQ7PseD870N
n/Ngd+P8ZH8j4FtbdLuMWp2Iv+acdyrEfotm0aD0GOSQkW4d7tzd2cEVVbTG
IOqTEJ2Fqdzupj3N7Jv9jZcbwQu/d8thnx4fz4qJhKLhtuv2VhwWzqR2enys
uxQ/VA2GQiMiRweaBlorR4Y6B7oaervqccPdE6TB9sbi1tqC5srcjoZiPLod
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
mi4O9z959ODFjbNb22tPLk5/89lnf3zzxQ+Xr3/32z/aVcY3H393dnZXKpG1
1VcWp6RLxErIISqxdHNzc9Uf2NnetJvNKplYrRAGgx6rWeNzmHwL5sUF07LD
s7G09vTFh09ef2r3BPpakcVJWRXJOcjmbpnKoDMuOBxLi4urm+s7AE5oNXh4
sBMKrngcdrg/PLx59+Hrhy/fbu2eLViB+CsLC16FRm+227U6k0Q8Z5i3SWbl
bBaHNc3jCyRTU8wZ0ax/Y3dOqZPJ55TquSk6lUGdAPGUqeY0Br1KrQVAzZZ5
kJ2JcbzJanP6FlV65RQNB7VosKeOOI4kjnaNEfqHhzp6e+rHxgYIxKH25oq2
lgoqhUgkEsgUAnqgZ2gIOYxFgVY0lhUgO9uam+qq6ivTEDElWZkjA30QRc52
tt4+efzp00eXFwe3b+19+fTxn15+8tdPf/zko8+2QjsP7r3wLvk4Is5AT2db
ZZPZ4ORRKCqx5BBiyunJzsGhw2rzuuxzwmmTfs5tNdhU0qV5437A9/zy6cMH
Tz/+8LNvf/7rj7785vL1q+DGtn3B7fUG7Va3Wqq2mh3Bzf2zW3eevXj+6fc/
f/TsOUR06DtWo86is86K1Gajyw/haP+WyxU0GdwSjU5tsYmVarFawxXKaCzw
lWnq5BR2AMuiTc/bXEKBlMsTMqiUSeIYmzHFYk5d/RWliA/KqTXp2ByGWCyU
zsmYLJpIPKPSKA32eQaDLFPw1SYJAds1hu9AD7W2t5Y11RfUlWX2dNUOYzvG
xgfx+FGdbV4in52YpLK4HJCU0eHB3tY6VH93d097Y1dralRUQUpKe2WF12q5
ONj55PHD+4c7h0vOm3sbHz+9/OXzD/7td/+onhFKJ3l3zi+lApFIwieM4XBD
I7MCmYDBhEoCdNra2Fxevpo79awIkHRYtV6nBXLR5qLryd2LLz/68MmtWyGn
42hrAwr25sbq6ckBrI7b6vbZvCeHN26c3t7bOHr48MX5xe3A0rLHtej3L7sc
bqfzyqBXV3chQNptgf3ju9v7N0KbRza/T2WyzIil48RJKnCONkUah7kc4UzP
AFGlMuWsXGU0WWGuwcEBSS4HFJQPoGlNGteS1xNYsjisPB4HUKVPEAFPKoWk
VKvwI/1EIlYkmZ6g9BPpI/2ojs726raW0q6Omt6eBtr0uGBWyORwuSIBWzDD
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
j8WWMoVKOBw9Rq3v6iXjezE9zXKJYHt7ddXvWPUAr8zVBSWx0ddqW6v087qA
0+oyqg1iqVNv1ogkSs6MgskxS+WmWagNsvWlZbNSZVIojXMquVhs1Gp0KqXN
BoqypJIbFBKdlCO3LKyuHd9Wax2GBb/Zvmz1rFs9IZVpHgSNK5T096Lqy6o7
m1uhFZbnFQNd+1GjTc3tLZ09JRXVJQWFpeUlZQUFeRkZV1+kz88rKsxPSkhO
Tkovyi1pae7gyuTgO2M4qsG94lg/5IrV00KVa31Ppl9QzjtAdWdVEHtUBtui
VGGEX9+/sQ9gimU68H0qk6cxuyEqCKUK1/KW1rRApk0bHX7gqkKpm19w0qlT
oAMSiVQyK59T6kDM4WA2H9qtGeoDjcEZHiIODZHaWvo60aMdqBEKCTOJG/QH
PBsbgWWXbcPvOdjeIA5jk2Mi+4a71FrV+d6+QTbLI5GN/Lk5GksM2kQgMjBY
PpFqg9Cr0ShFYq1crpBIQF4gyDo8i1qdYVaimGGJvP49pdwS2Di2r2zL1LaD
uy+3blxa3EGl3qkwGmakc8Txyf7evsqCwoqcgsqC0uKckori8tLiiqzs3Lqu
rqS09JKSsrKq6qS4+IyMrOTYxLi4uNSUpBhEXGJiclJSCiIyqqtvqLcPVJXG
nJmb4sulOtsUTwFsmZt3c0QqwSwEc/MYYYJEmjI5l4hEulw3D4xVaCxW3yok
UkiwtqUg5C7tgsfu37jCeU5jXwoZLHbbog+CExFHhhAlFMw6vStrp7cgcc27
A3KDRW5agMzQj8RgseSuLnTHALZvhMykESbG0RqNdNFlcVn05ye7a16Pgs8r
zEhs72iapkws29204WEBhT41iJVQpjh4opon4OKIQ9V1JGSfGhoCnT6BxfC5
TCg8O6cn/rUdUEgKmWkww2rfDK7f2jh8SKcLHEubB3efmxZWLIvrgK1AIgPj
BjC7OjprCkthFoCW2WlZRbmFifFJf7sWWnxURHR8bEJaXsF7P3u/pqc7PTsv
OiY2KirmveiotIL85JzsmPDo5OTUzKyciuqG3v4x1OgkgcKBlIPGTbAl6nlf
SG2w8kRzSpMNfmtIBaCigIPa5IApBukDMKELwI8JuQsOk8zpFcYFucrMZAvB
nlb39xVKrYAnYdCngZkQEtTzTsgJADjE3RmxHAjPESkIZHZXxxAA2dQ9yJkm
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
MVi8o4cnhkBEojC+gSEALxH2UCBo7j5BAUGB5Sr+UINisq10bKyru7Olp7G6
VCWSF0t/+umHL968PN5eu7Iy21GrC3YhZfK4Te09qpIibxfHCG9XcAocHy+d
JPvm6txwRalOJfP1cUciIHALC15SQEKkhzsZ40JEp1DDyqSJdflcgyo3JdA7
wo3AjA7IY0a3lPKH2oyt+sqRRuN4Q/XBRPfuSMtUo3qkpa67pmzcbGouK+qu
qeozGieHepqbDZo8sSIjWUCLMOSLxs3G3kZ9R12dUVtbIJa2NRjqCwtqlAph
UlRmQpCIFcpLDE1LiMxXFojY6UJ6Qn2lrqfbXF5SOjg6UVVRMz8ys7O0tru+
29/aY6pr0hZpQSzKF3AYgb754rxHz9+/e/P7RwevbqzceHDt8fXNm63VTU3G
FkZcAgGGRiDROIqLk6c3iOREJwrcDlARAm0PO7v/zvlPNDkZq2ONV1e61Tlp
wuTYyZ7W8fFeYQ7v3fPPX98+enFtp7tU3lxT4YTHy9VVGo0hT1nkRSElU0ME
TBo/wut4Z+PqymqRNJefxqKgUGSoQ4CTS2xcgBsR4322JIsXpSaY1JmDDaUz
XZ1rE/3lwjRdTsZMj7G5XDLSUlkrz2ooyG4rEfXpFK2q9NYCfl154ZDZNNZh
GmyuBwKuE2cZVdKBlrq5QXN6iLeKnWwokPXU69cXl7sa2yqUisayipriMjmH
VygSZbLD2VGeGdFu0jRaiKNTeXWHSlggS2IJqfTd3d2hvt7cdE5+nqSzQHs0
t/np7edfPvz869ff7k7vFnNy89hJPY3t423Tdzeene69fnHw+tH2g6OVy7v9
802qyhp1VZCXO8wexDQsEoUju7nhnCkg/oDOBNHHAWVHQiOIn1jnpfIWx/uu
rw/lRPt1GkqmB9vMLVViXvLW6MSn9+6umJvbK4oqChTojy9k8gSGumahQOLv
5cZNo7MiA+VJ0UeXd1q06sKszFhvdw8EMsjFJSWGRgsLIdjaBXgG0sJjSpWq
yf729ZHey5cWF4Z7V8Z6WzWy1nL5VK9xa7rbXCqdaNYZ5Vy9MKU6m6kTMPVF
shq1YryvbWl8cHN6bMbcUpzBrler+k11LVXq4db66nxpbWHueG9fV2NLoUBs
0ulbamrrysqLJFJhWpxKkMwKIPFi/ON9/QoLdSKRnJfJpoWFVlfqhjoHJHRm
EZtfxpOWpUvr88q2BhavjKw9Xrn2Yv/IrK+YMw+t9S6fbLz49MbXv7n341f3
vr63c3+9b3F7fHNiZMmb7AGk8uxDHE4UNApPIlOg4GEPQ6JgDkhrAgoFSkQP
CFqe7J9oLmU4w5emerfXJvTFuWqN7P7e3vWN5b56/dx4Pz3Ax4uAV6qKQKQS
5Ur9XZ0z05OY4b6VAs5wW62Sx6rTFkdTHCOdnLTFxXn8bF8cgcVIKSqpzlOV
t7Z09za1LPT1rI8M7M9OfvPlk/2lcRk1wJjHHqiS9VfINobbFrsbyvkpTaXy
Uj5LV5xXry1s0RaPtjcuDvVeX18ZaqqNxMBEceEjPU2rUyML4319jYbh/p4y
mapALK6rqjLqKqo1ZboSdW1lSS6bpmRT89Li4/3c+Wy+xlDLYiZnZWXF+gWq
8ws10nw+I5keHOdkhfKxxYtjUno19fO6tlfbt24uzE3oW+8s3vrx6R/f3/7+
h5Ofvr7//fPb724tHx9unAz2LLvgfRBwEg6JxaJxaCQG6XB2ay00HItHowiO
IInAkdaWXhiMipeiy04qzaA1VeZP9JhAqJTlcm9fXm/SFu7ubaysLVOsrZkx
YTqdDoCrRKbycXeJ8HTJTIie6jC1g05Kju2u1xXzM2LIxF5zZ2pkpA8CGuXu
GekbyaRlNDX2NOqM+wuLMy0NDw923z87+fDLuxaVSBzqahQn95VLry90HywO
9taqO/XF3CAPCYumL5DV5Mtaq7TtFSXro4OrEwP53NRKqaC/zbg8OXBtd22k
q6nffLYndkpEhJCTXpgL4IEtFWV3tpna63VKbkJNqYTm60aLiZZLFIosqUpW
0D85XVBW7uLoiIXY42AoL0+/YC9/Z0tIHNGtiMU7XNl5cGljuq7z7eHb70//
8P7+j98/+fD1i1++efnrva1nS0M7eZmFThhPvJMvAUciYhyR1lBAm1gHJBaK
BMWMSYnzCPSBQmwA/CtF7L5K2e39OX1eeqq/S3pMKCjmzcvzLTVln3/3rTxH
RrCwFLHocoGwVFvDSmF7U4gE+wvGqhJw+gZZVqM6d39pdLChurZE2WNu9URB
qJ6OnPhIDjMpzCskxjtYwuVKaNQ2pfTh3vabO4dfPLh9dW64Niu5rVh4fW3s
8NJEX3XRvLnuxtrY7tygnJOcHuavEXF1En5zaeFwQ8367IixSGEokKoF3L6m
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
RyC4CVN5zfW1rX3t/xd9SZKB
    "], {{0, 150.}, {111., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Source" -> 
      "http://en.wikipedia.org/wiki/File%3ARattus_norvegicus_1.jpg", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/983/\
983f10bb563ffed220bf9807e0244a98_v002s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{111., 150.},
  PlotRange->{{0, 111.}, {0, 150.}}]], "Output",
 CellChangeTimes->{3.832580914462525*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"51d615bc-b479-4a8b-aae2-955a7856580e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "nearword", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nearword", "[", 
    RowBox[{"s_String", ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Nearest", "[", 
    RowBox[{
     RowBox[{"WordList", "[", "]"}], ",", "s", ",", "n"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nearword", "[", "s_String", "]"}], ":=", 
   RowBox[{"nearword", "[", 
    RowBox[{"s", ",", "10"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.832580926507181*^9, 3.832581014084998*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"e5857106-4462-4e1a-a8cc-43cd82a97fb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nearword", "[", 
  RowBox[{"\"\<test\>\"", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.83258097929315*^9, 3.832580986611575*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"be5da3c0-8305-45f4-bc7c-65c13f743d6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"test\"\>", ",", "\<\"best\"\>", ",", "\<\"jest\"\>", 
   ",", "\<\"lest\"\>", ",", "\<\"nest\"\>", ",", "\<\"pest\"\>", 
   ",", "\<\"rest\"\>", ",", "\<\"teat\"\>", ",", "\<\"tent\"\>", 
   ",", "\<\"testy\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.832580983340515*^9, 3.832580986873131*^9}},
 CellLabel->
  "Out[354]=",ExpressionUUID->"8e703b54-38c7-4539-91e0-5ed6cd8f2dfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nearword", "[", 
  RowBox[{"\"\<why\>\"", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.8325809924218473`*^9, 3.832580999323636*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"fa29f6b8-f609-485c-ba1f-65736fbf7e8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"why\"\>", ",", "\<\"shy\"\>", ",", "\<\"thy\"\>", 
   ",", "\<\"way\"\>", ",", "\<\"whey\"\>", ",", "\<\"who\"\>", 
   ",", "\<\"wry\"\>", ",", "\<\"achy\"\>", ",", "\<\"ah\"\>", 
   ",", "\<\"aha\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.832580999658073*^9, 3.832581019284731*^9}},
 CellLabel->
  "Out[359]=",ExpressionUUID->"b07cae4d-cbf5-43d6-a206-0b58ddb1d7f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nearword", "[", "\"\<qq\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8325810208072863`*^9, 3.832581024860618*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"14f6392c-789a-461f-96ca-1a5d6bb63342"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"ad\"\>", ",", "\<\"ah\"\>", 
   ",", "\<\"am\"\>", ",", "\<\"an\"\>", ",", "\<\"as\"\>", ",", "\<\"at\"\>",
    ",", "\<\"ax\"\>", ",", "\<\"be\"\>", ",", "\<\"by\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.832581025495755*^9},
 CellLabel->
  "Out[360]=",ExpressionUUID->"a1ea2207-4b7e-4f18-bcd2-f1fa3ea269b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "nearword"}]], "Input",
 CellChangeTimes->{{3.832581042952237*^9, 3.832581044742399*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"9366fbdd-b7db-4a53-b41e-b5dcac778530"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`nearword\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"nearword", "[", 
                    RowBox[{"s_String", ",", "n_Integer"}], "]"}], ":=", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"WordList", "[", "]"}], ",", "s", ",", "n"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"nearword", "[", "s_String", "]"}], ":=", 
                    RowBox[{"nearword", "[", 
                    RowBox[{"s", ",", "10"}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`nearword\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`nearword\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`nearword", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`nearword, {$CellContext`nearword[
         Pattern[$CellContext`s, 
          Blank[String]], 
         Pattern[$CellContext`n, 
          Blank[Integer]]] :> Nearest[
         WordList[], $CellContext`s, $CellContext`n], $CellContext`nearword[
         Pattern[$CellContext`s, 
          Blank[String]]] :> $CellContext`nearword[$CellContext`s, 10]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`nearword"], False]]], "Output",
 CellChangeTimes->{3.832581045119945*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"7e0a30c7-fd34-459d-999b-70efdcab7740"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fib"}]], "Input",
 CellChangeTimes->{{3.83258106210719*^9, 3.8325810627668047`*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"38382f86-113c-4dba-861f-65abe136431a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"fib", "[", "0", "]"}], "=", "1"}]},
                    {
                    RowBox[{
                    RowBox[{"fib", "[", "1", "]"}], "=", "1"}]},
                    {
                    RowBox[{
                    RowBox[{"fib", "[", "n_Integer", "]"}], ":=", 
                    RowBox[{
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "1"}], "]"}], "+", 
                    RowBox[{"fib", "[", 
                    RowBox[{"n", "-", "2"}], "]"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`fib\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`fib\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`fib", "Documentation" -> None,
     "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`fib, {$CellContext`fib[0] -> 
       1, $CellContext`fib[1] -> 1, $CellContext`fib[
         Pattern[$CellContext`n, 
          Blank[Integer]]] :> $CellContext`fib[$CellContext`n - 
          1] + $CellContext`fib[$CellContext`n - 2]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`fib"], 
   False]]], "Output",
 CellChangeTimes->{3.832581063090169*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"9b415b28-449b-46f8-ad12-357a1313a366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fib", "[", 
  RowBox[{"-", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.832581065412345*^9, 3.832581067033814*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"9b176e0c-0319-4072-8ded-dcd3bd2508cd"],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit", "reclim2", 
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"1024\\\"}]\\) exceeded during \
evaluation of \\!\\(\\*RowBox[{\\\"fib\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1032\\\"}], \\\"-\\\", \\\"1\\\"}], \
\\\"]\\\"}]\\).\"", 2, 363, 99, 27239474019221418071, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.832581067302006*^9},
 CellLabel->
  "During evaluation of \
In[363]:=",ExpressionUUID->"fb8c5f85-6d9d-48d6-829c-90857a1d440e"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   RowBox[{"fib", "[", 
    RowBox[{
     RowBox[{"-", "10"}], "-", "1"}], "]"}], "+", 
   RowBox[{"fib", "[", 
    RowBox[{
     RowBox[{"-", "10"}], "-", "2"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.832581067311795*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"bf90012d-9e5b-419b-a3ad-c92ad3e10cb5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "headpat", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"headpat", "[", "x_Int", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"\"\<I_\>\"", ",", "x"}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"headpat", "[", 
    RowBox[{"x_S", "_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"\"\<S_\>\"", ",", "x"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.832581211483692*^9, 3.832581250026292*^9}, {
  3.832581308788609*^9, 
  3.832581317947022*^9}},ExpressionUUID->"873409ad-e110-485c-a318-\
1c9dfa45b078"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"headpat", "[", 
  RowBox[{"String", "[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.832581251300549*^9, 3.83258127234692*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"5c146fa4-0f64-4766-9e74-ad858fef4e11"],

Cell[BoxData[
 RowBox[{"headpat", "[", 
  RowBox[{"String", "[", "1", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.832581253693204*^9, 3.83258127260363*^9}},
 CellLabel->
  "Out[369]=",ExpressionUUID->"1395e1f1-2727-4ac1-9f46-5cdca5f20997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"String", "[", "\"\<11\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.832581274065733*^9, 3.832581277698875*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"5234016c-7784-4aa2-861e-db3c70005c49"],

Cell[BoxData[
 RowBox[{"String", "[", "\<\"11\"\>", "]"}]], "Output",
 CellChangeTimes->{{3.8325812750976543`*^9, 3.832581277953755*^9}},
 CellLabel->
  "Out[371]=",ExpressionUUID->"2dd91ba7-ca06-4053-84aa-5ef3ead0b1c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Head", "[", "\"\<11\>\"", "]"}], "\[IndentingNewLine]"}]], "Input",\

 CellChangeTimes->{{3.832581280181492*^9, 3.832581284282857*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"5b878a0d-0861-4010-9ece-4af8f48ac751"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.832581284500351*^9},
 CellLabel->
  "Out[372]=",ExpressionUUID->"c44d9998-fab7-4f13-8a7e-5fbd7100e357"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"headpat", "[", "\"\<11\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.832581287405179*^9, 3.83258129037097*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"e33c5bc8-c42f-42c0-b9a3-92d6583d3130"],

Cell[BoxData[
 RowBox[{"headpat", "[", "\<\"11\"\>", "]"}]], "Output",
 CellChangeTimes->{3.832581290598412*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"535c12a4-f444-4fa5-b40d-a851f3030ef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "headpat"}]], "Input",
 CellChangeTimes->{{3.832581293510314*^9, 3.832581294428852*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"36aa7158-40c4-41db-9aff-a49f0afabab1"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`headpat\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"headpat", "[", 
                    RowBox[{"_", " ", 
                    RowBox[{"(", 
                    RowBox[{"x", ":", 
                    RowBox[{"Blank", "[", "\[ImaginaryI]", "]"}]}], ")"}]}], 
                    "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"I_\"\>", ",", "x"}], "}"}]}]},
                    {
                    RowBox[{
                    RowBox[{"headpat", "[", 
                    RowBox[{"_", " ", "x_S"}], "]"}], ":=", 
                    RowBox[{"{", 
                    RowBox[{"\<\"S_\"\>", ",", "x"}], "}"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`headpat\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`headpat\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`headpat", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`headpat, {$CellContext`headpat[
        Blank[] Pattern[$CellContext`x, 
           Blank[
            Complex[0, 1]]]] :> {"I_", $CellContext`x}, $CellContext`headpat[
        Blank[] Pattern[$CellContext`x, 
           Blank[$CellContext`S]]] :> {"S_", $CellContext`x}}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`headpat"], 
   False]]], "Output",
 CellChangeTimes->{3.8325812950634317`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"34f48665-c5a5-4230-84fe-3dc3c1eb7c8e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "checkab", "]"}], ";", 
    RowBox[{
     RowBox[{"checkab", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "/;", 
      RowBox[{"x", "\[GreaterEqual]", "y"}]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.832581348236395*^9, 3.832581442483796*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"9ab3b2d2-42ad-4bd0-acb4-1c0ac23d865d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkab", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "+", "1"}], ",", "x"}], "}"}], "/;", 
    RowBox[{"x", "\[LessEqual]", "y"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8325814486514387`*^9, 3.8325814725700808`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"248ad765-0603-4576-9dad-4c7fa9ccd555"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkab", "[", 
  RowBox[{"3", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.832581393595688*^9, 3.83258139910509*^9}, {
  3.8325814396357107`*^9, 3.832581485089809*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"7e68caa9-0ef9-4fc2-b0a3-3b3badacf4b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.8325814000418367`*^9, 3.8325814853257227`*^9}},
 CellLabel->
  "Out[391]=",ExpressionUUID->"ae6acd2f-15bd-49b8-ae9a-51453a805b1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "blackwhite", "]"}], ";", " ", 
  RowBox[{
   RowBox[{"blackwhite", "[", 
    RowBox[{"{", 
     RowBox[{"___", ",", "Black", ",", "x___", ",", "White", ",", "___"}], 
     "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Black", ",", "x", ",", "White"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832581518074356*^9, 3.832581609335898*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"eae3d252-1454-426f-82a4-942dbd34aae0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blackwhite", "[", 
  RowBox[{"{", 
   RowBox[{
   "Red", ",", "Black", ",", "Red", ",", "Red", ",", "Black", ",", "White", 
    ",", "White"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.832581564307564*^9, 3.832581579137967*^9}, {
  3.832581617370021*^9, 3.832581617991351*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"09001993-24c9-4fcf-89c1-ff9a0d7f5d5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->GrayLevel[0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.832581579430409*^9, 3.832581659165242*^9}},
 CellLabel->
  "Out[404]=",ExpressionUUID->"23b2bf26-1230-4b6d-9c33-779e77cd0011"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Graphics", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.832581641665731*^9, 3.832581649307123*^9}},
 CellLabel->
  "In[403]:=",ExpressionUUID->"37c18e18-bfe3-49c4-a93b-a39642dabd44"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8325819321453867`*^9, 
  3.832581933551681*^9}},ExpressionUUID->"7c065edd-ab41-4ec2-82d4-\
9efae695d750"],

Cell["\<\
41.1 Lists of digits of squares of integers below 100 containing successice \
repeated digits\
\>", "Text",
 CellChangeTimes->{{3.832582102402001*^9, 
  3.832582138000723*^9}},ExpressionUUID->"a69ae5b0-0aa2-4c63-8820-\
b87503294a42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"x", "^", "2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"MatchQ", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"___", ",", "x_", ",", "x_", ",", "___"}], "}"}]}], "]"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832581935822714*^9, 3.832582092004737*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"289cf87d-593f-4339-b011-785c90b622ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8325819519395647`*^9, 3.8325819790308743`*^9}, {
   3.832582038954936*^9, 3.8325820577390957`*^9}, 3.832582092477728*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"d9d9716d-7103-427b-a3c5-b65b0aad0842"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "/@", " ", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Characters", "[", 
       RowBox[{"RomanNumeral", "[", "x", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"MatchQ", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
        "___", ",", "\"\<L\>\"", ",", "___", ",", "\"\<I\>\"", ",", "___", 
         ",", "\"\<X\>\"", ",", "___"}], "}"}]}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8325821458621283`*^9, 3.8325822226905317`*^9}, {
  3.83258225956542*^9, 3.8325822898592567`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"31bdbf43-ccaf-4de3-8ecb-c6f8aed64409"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"XLIX\"\>", ",", "\<\"LIX\"\>", ",", "\<\"LXIX\"\>", 
   ",", "\<\"LXXIX\"\>", ",", "\<\"LXXXIX\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.832582157840035*^9, 3.83258229027973*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"a089384a-5851-42ec-854b-399bd35920fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_List", "]"}], ":=", 
     RowBox[{"x", "\[Equal]", 
      RowBox[{"Reverse", "[", "x", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.83258230544051*^9, 3.83258233236532*^9}},
 CellLabel->
  "In[413]:=",ExpressionUUID->"f8366a83-4d71-475a-bf70-dd2cf7b15772"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8325823335024776`*^9, 3.832582335115986*^9}},
 CellLabel->
  "In[415]:=",ExpressionUUID->"091b9db1-5ae9-4e93-9e97-a4da9687c32f"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.832582335380962*^9},
 CellLabel->
  "Out[415]=",ExpressionUUID->"5e4d2ef0-5171-4e98-93f4-aa60cdbba9b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "32", ",", "1", ",", "32", ",", "1"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.832582340878034*^9, 3.832582347813048*^9}},
 CellLabel->
  "In[416]:=",ExpressionUUID->"d2cf3db9-510e-4b2f-b4f4-d393bc48f914"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.832582348037908*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"7b2a7fac-f2c4-4e3c-aa6a-33962f9d4ce2"]
}, Open  ]],

Cell["41.4", "Text",
 CellChangeTimes->{{3.8325823612218237`*^9, 
  3.832582386212302*^9}},ExpressionUUID->"e01fe10d-b5cd-4c26-8afa-\
5fb45b81964c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"WikipediaData", "[", "\"\<Alliteration\>\"", "]"}], "//", 
     "ToLowerCase"}], "//", "TextWords"}], "//", 
   RowBox[{
    RowBox[{"Partition", "[", 
     RowBox[{"#", ",", "2", ",", "1"}], "]"}], "&"}]}], "//", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"#1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"#1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8325823916613207`*^9, 3.832582504726377*^9}, 
   3.832582570048109*^9},
 CellLabel->
  "In[425]:=",ExpressionUUID->"99edb372-ed51-48a5-abcc-8f13ab257fcd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"identical\"\>", ",", "\<\"initial\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"humble\"\>", ",", "\<\"house\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"potential\"\>", ",", "\<\"power\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"power\"\>", ",", "\<\"play\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peter\"\>", ",", "\<\"piper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"piper\"\>", ",", "\<\"picked\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pickled\"\>", ",", "\<\"peppers\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"accept\"\>", ",", "\<\"as\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"alliteration\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lazy\"\>", ",", "\<\"languid\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"languid\"\>", ",", "\<\"line\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"at\"\>", ",", "\<\"any\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"home\"\>", ",", "\<\"hot\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"is\"\>", ",", "\<\"in\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"stressed\"\>", ",", "\<\"syllable\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"alliterating\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"anglo-saxon\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "\<\"outside\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"same\"\>", ",", "\<\"sound\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "\<\"outside\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"brown\"\>", ",", "\<\"blazers\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"colour\"\>", ",", "\<\"co-ordination\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"in\"\>", ",", "\<\"its\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"silken\"\>", ",", "\<\"sad\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"breeze\"\>", ",", "\<\"blew\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"foam\"\>", ",", "\<\"flew\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"furrow\"\>", ",", "\<\"followed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"followed\"\>", ",", "\<\"free\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"stood\"\>", ",", "\<\"still\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"alliteration\"\>", ",", "\<\"and\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"churlish\"\>", ",", "\<\"chiding\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"winter\[CloseCurlyQuote]s\"\>", ",", "\<\"wind\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\<\"wind\"\>", ",", "\<\"which\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"which\"\>", ",", "\<\"when\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"alphabetical\"\>", ",", "\<\"africa\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"chapter\"\>", ",", "\<\"consists\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"abish\"\>", ",", "\<\"allows\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"at\"\>", ",", "\<\"all\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"vaka\"\>", ",", "\<\"vanha\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"vanha\"\>", 
     ",", "\<\"v\[ADoubleDot]in\[ADoubleDot]m\[ODoubleDot]inen\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"the\"\>", ",", "\<\"thistle\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"written\"\>", ",", "\<\"with\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"brent\"\>", ",", "\<\"bernard\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"who\"\>", ",", "\<\"watch\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"watch\"\>", ",", "\<\"with\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"with\"\>", ",", "\<\"wild\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"wild\"\>", ",", "\<\"wonder\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"wide\"\>", ",", "\<\"window\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"beautiful\"\>", ",", "\<\"birds\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"birds\"\>", ",", "\<\"begin\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bountiful\"\>", ",", "\<\"birdseed\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"grey\"\>", ",", "\<\"geese\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"grey\"\>", ",", "\<\"geese\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"grazing\"\>", ",", "\<\"grey\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"the\"\>", ",", "\<\"tongue-twister\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"betty\"\>", ",", "\<\"botter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"botter\"\>", ",", "\<\"by\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"betty\"\>", ",", "\<\"botter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"botter\"\>", ",", "\<\"bought\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"butter\"\>", ",", "\<\"but\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"she\"\>", ",", "\<\"said\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"butter's\"\>", ",", "\<\"bitter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"if\"\>", ",", "\<\"i\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"it\"\>", ",", "\<\"in\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"make\"\>", ",", "\<\"my\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"batter\"\>", ",", "\<\"bitter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bitter\"\>", ",", "\<\"but\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"better\"\>", ",", "\<\"butter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"make\"\>", ",", "\<\"my\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"bitter\"\>", ",", "\<\"batter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"batter\"\>", ",", "\<\"better\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peter\"\>", ",", "\<\"piper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"piper\"\>", ",", "\<\"peter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peter\"\>", ",", "\<\"piper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"piper\"\>", ",", "\<\"picked\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pickled\"\>", ",", "\<\"peppers\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peter\"\>", ",", "\<\"piper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"piper\"\>", ",", "\<\"picked\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pickled\"\>", ",", "\<\"peppers\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pickled\"\>", ",", "\<\"peppers\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peppers\"\>", ",", "\<\"peter\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"peter\"\>", ",", "\<\"piper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"piper\"\>", ",", "\<\"picked\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "\<\"old\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"irish\"\>", ",", "\<\"it\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"important\"\>", ",", "\<\"ingredient\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"sanskrit\"\>", ",", "\<\"shlokas\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[AE]thelwulf\"\>", ",", "\<\"\[AE]thelbald\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[AE]thelbald\"\>", ",", "\<\"\[AE]thelberht\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"direct\"\>", ",", "\<\"descendants\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tancred\"\>", ",", "\<\"torhtred\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"poetry\"\>", ",", "\<\"poets\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "\<\"call\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"splendid\"\>", ",", "\<\"silent\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"silent\"\>", ",", "\<\"sun\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"walt\"\>", ",", "\<\"whitman\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"splendid\"\>", ",", "\<\"silent\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"silent\"\>", ",", "\<\"sun\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"wondered\"\>", ",", "\<\"what\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"his\"\>", ",", "\<\"horse\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"by\"\>", ",", "\<\"bernard\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"r.\"\>", ",", "\<\"r.\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"tolkien's\"\>", ",", "\<\"translation\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"translation\"\>", ",", "\<\"this\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fact\"\>", ",", "\<\"follows\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"an\"\>", ",", "\<\"alliterative\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"also\"\>", ",", "\<\"add\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"harsh\"\>", ",", "\<\"hard\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"they\"\>", ",", "\<\"than\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"slippered\"\>", ",", "\<\"sleep\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"lean\"\>", ",", "\<\"lithe\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"fleet\"\>", ",", "\<\"flown\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"an\"\>", ",", "\<\"artistic\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"emotional\"\>", ",", "\<\"effect\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"attention-grabbing\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"s\"\>", ",", "\<\"sounds\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"can\"\>", ",", "\<\"create\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"any\"\>", ",", "\<\"attitude\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"adds\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"an\"\>", ",", "\<\"audience's\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"audience's\"\>", ",", "\<\"attention\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"attention\"\>", ",", "\<\"and\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"evokes\"\>", ",", "\<\"emotion\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"is\"\>", ",", "\<\"in\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"times\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"as\"\>", ",", "\<\"an\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"which\"\>", ",", "\<\"we\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"our\"\>", ",", "\<\"only\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"of\"\>", ",", "\<\"our\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"his\"\>", ",", "\<\"help\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"our\"\>", ",", "\<\"own\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"but\"\>", ",", "\<\"by\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"today\"\>", ",", "\<\"that\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"that\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"truths\"\>", ",", "\<\"that\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"is\"\>", ",", "\<\"inextricably\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"itself\"\>", ",", "\<\"is\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"testimony\"\>", ",", "\<\"to\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"have\"\>", ",", "\<\"had\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"because\"\>", ",", "\<\"brave\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"freedom's\"\>", ",", "\<\"front\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ronald\"\>", ",", "\<\"reagan\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"vietnam\"\>", ",", "\<\"veterans\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"new\"\>", ",", "\<\"nation\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"to\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"patent\"\>", ",", "\<\"portae\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"portae\"\>", ",", "\<\"proficiscere\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"and\"\>", ",", "\<\"adds\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"adds\"\>", ",", "\<\"an\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"an\"\>", ",", "\<\"alliterative\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[Mu]\:03ac\[Rho]\[Theta]\[Alpha]\"\>", 
     ",", "\<\"\[Mu]\:03ac\[Rho]\[Theta]\[Alpha]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[Mu]\:03ac\[Rho]\[Theta]\[Alpha]\"\>", 
     ",", "\<\"\[Mu]\[CurlyEpsilon]\[Rho]\[Iota]\[Mu]\[Nu]\:1fb7\[FinalSigma]\
\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"martha\"\>", ",", "\<\"martha\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"martha\"\>", ",", "\<\"merimnas\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"martha\"\>", ",", "\<\"martha\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"modern\"\>", ",", "\<\"music\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cartoon\"\>", ",", "\<\"characters\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"helplessly\"\>", ",", "\<\"hoping\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"by\"\>", ",", "\<\"bob\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"throughout\"\>", ",", "\<\"the\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"the\"\>", ",", "\<\"tonight\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"copper\"\>", ",", "\<\"clapper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"clapper\"\>", ",", "\<\"caper\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"also\"\>", ",", "\<\"alliteration\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"anadiplosis\"\>", ",", "\<\"assonance\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"house\"\>", ",", "\<\"handbook\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"alliterations\"\>", ",", "\<\"and\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832582413990037*^9, 3.83258243706991*^9}, 
   3.8325825062612963`*^9, 3.832582571299995*^9},
 CellLabel->
  "Out[425]=",ExpressionUUID->"19525e52-0086-47bf-9d53-045a603414e7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8325823883482513`*^9, 
  3.832582389092143*^9}},ExpressionUUID->"aa19630e-f1e8-4c9b-9d64-\
dc0b9c3b8ee0"],

Cell[BoxData[
 RowBox[{"g", ":=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"#1", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"#1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Characters", "[", 
         RowBox[{"#1", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.832582532045686*^9, 3.832582539793816*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"e9b9a377-fe42-40f7-8c9a-bfa8ad1bba34"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"\"\<aa\>\"", ",", "\"\<aa\>\""}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.832582542268825*^9, 3.832582565004792*^9}},
 CellLabel->
  "In[424]:=",ExpressionUUID->"d8a6a83f-e0e4-4c76-b06c-504376020f52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"aa\"\>", ",", "\<\"aa\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8325825501944723`*^9, 3.83258256521635*^9}},
 CellLabel->
  "Out[424]=",ExpressionUUID->"a5ad11fb-1f54-4d51-b613-64ad8491d5d2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.8325829410237703`*^9, 3.832582944951047*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"101aae7c-881c-400f-af9d-d1b9d15b67e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "=", 
  RowBox[{"FixedPointList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", "x_", ",", "y_", ",", "b___"}], "}"}], "/;", 
        RowBox[{"x", ">", "y"}]}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"a", ",", "y", ",", "x", ",", "b"}], "}"}]}]}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "1", ",", "3", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.832582608013946*^9, 3.832582686646844*^9}, {
  3.832582722812145*^9, 3.832582755374444*^9}, {3.8325829350663023`*^9, 
  3.832582936358993*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"fac6dd7c-cd5f-46b0-b3eb-17441f349c1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.832582712890728*^9, 3.832582755624589*^9}, {
  3.832582939785219*^9, 3.832582947311981*^9}},
 CellLabel->
  "Out[438]=",ExpressionUUID->"4d101728-7048-46e5-9dd0-93f26896e776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.832582757087447*^9, 3.8325827590705843`*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"6196ece6-c4c7-41aa-8604-afc663f9c2d0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"5", "4", "1", "3", "2"},
    {"4", "5", "1", "3", "2"},
    {"4", "1", "5", "3", "2"},
    {"1", "4", "5", "3", "2"},
    {"1", "4", "3", "5", "2"},
    {"1", "3", "4", "5", "2"},
    {"1", "3", "4", "2", "5"},
    {"1", "3", "2", "4", "5"},
    {"1", "2", "3", "4", "5"},
    {"1", "2", "3", "4", "5"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.832582759310639*^9},
 CellLabel->
  "Out[430]=",ExpressionUUID->"07597bfe-d435-495b-a6af-4173c589e18f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.832582819680105*^9, 3.8325828232474422`*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"10579daa-302d-4ca6-a985-dc9ece9861b8"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{4, 3, 2, 1, 0}, {4, 3, 2, 1, 0}, {4, 2, 3, 1, 0}, {4, 2, 1, 3, 
   0}, {4, 2, 1, 0, 3}, {4, 1, 2, 0, 3}, {4, 1, 0, 2, 3}, {1, 4, 0, 2, 3}, {1,
    0, 4, 2, 3}, {0, 1, 4, 2, 3}}, {{0, 0}, {5, 10}}, {0, 5}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.832582823496295*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"f13438e9-2250-4213-83fb-9b86833988e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"FixedPointList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a___", ",", "x_", ",", "y_", ",", "b___"}], "}"}], "/;", 
         RowBox[{"x", ">", "y"}]}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "y", ",", "x", ",", "b"}], "}"}]}]}], "&"}], ",", 
     RowBox[{"RandomSample", "[", 
      RowBox[{
       RowBox[{"Range", "[", "50", "]"}], ",", "50"}], "]"}]}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832582851184613*^9, 3.83258291699184*^9}, {
  3.832582959238977*^9, 3.832582989108943*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"a7a7e4ba-0a42-452f-a880-bec6d3c3fcf8"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
rMDCK6DwMibeHyy8DxTem4o/AKfnv34=
   "], {{0, 0}, {50, 521}}, {0, 50}],
  AspectRatio->1,
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.832582892245102*^9, 3.832582896716803*^9}, {
  3.8325829302747583`*^9, 3.832582989475931*^9}},
 CellLabel->"Out[442]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzt3SGMVUkahuGGCYbsORgMhpBgUBgMBoNYDCtQGExnsp2ZkM2S2cFgUBgM
BoPBYFAYDAaDwfQkyxoMBoPBYDCY2jrvraanM+x3M/l3Z6H7Jemb7uZAOk+q
vj63zl9//WXz5x/++rfNn3/8fvPUpZ82b/zw4/f/OPXnv//Uv/XdoY2Nw/9c
Pk5tLJ+3jY2dl90//1pefv2d//SNje/4amtra/nYWH22vPyyvBz+zUXL17v/
yfbycmj5i0Orz7zcy/8bl/9peZ3bp0+f5vbx48e5ffjwYWrv37+f27t37+b2
9u3bub1582Zqr1+/nturV6/mtr29PbeXL19O7cWLF3N7/vz53J49eza3p0+f
Tu3Jkydze/z48dwePXo0t4cPH07twYMHc7t///7c7t27N7e7d+9O7c6dO3O7
ffv23G7dujW1mzdvzu3GjRtzu379+rz8fFPb3Nyc27Vr1+Z29erVuV25cmVq
ly9fntulS5fmdvHixblduHBhaufPn5/buXPn5nb27Nm5nTlzZmqnT5+e28mT
J+d24sSJuR0/fnxqx44dm9vRo0fnduTIkXnBmDXS6AtGnQcojTQqG3WeaTXr
NIpG8AClUTSCByiNNCoadZ6R4xpFo84zclyjaAQPUBppVDSCByiNohE8QO0f
o84DlEYalY06z7SadRpFI3iA0igawQOURhoVjTrPyHGNolHnGTmuUTSCByiN
NCoawQOURtGIpyHkuEbRqPOMHNdIo6IRPEBpFI3gAUqjaMTTEHJco2jUeUZG
aaRR0QgeoDSKRvAAtW+N4AFKI42KRvAApVE0YvWxQ2m0xqjzjBzXSKOiETxA
aRSN4AFKo2jE6iM5rpFGRaPOM3Jco2gED1AaRSN4gNJIo6IRK7TkuEbRqPOM
HNcoGsGzWwin0UE3ggcojaIRq0bU+mkUjdiDzYjSSKOiETxAaRSN4AFKo2jE
igg5rpFGRSP2YDPrNIpG8ACl0foeNUBppFHRiFUjclyjdT1qpl+VUhw8I3iA
0igawQOURhoVjbi7Zt+RRtGImn5GlEbRCB6gNNKoaAQPUBqt3/NIjmu01wge
oDTSqGgEz056a7TiAUqjaMTdNc9FNNKoaMSaI7NOo2gED1D/c6POA5RGGpWN
Os+0mnUaRSN4gNIoGsEDlEYaFY06z8hxjaJR5xk5rlE0ggcojTQqGsEDlEbR
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
b/RSYIk=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"e09f7534-a9b1-4a85-98ef-1ab8b28dbc6f"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8325829565428877`*^9},ExpressionUUID->"c34b690c-2407-4e41-850a-\
1a841ecb627a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "+", 
        RowBox[{"2", "/", "#"}]}], ")"}], "/", "2"}], "&"}], ",", "1", ",", 
    "10"}], "]"}], "//", " ", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "100"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.8325830164233627`*^9, 3.832583060664555*^9}, {
  3.832583118075737*^9, 3.832583154344179*^9}},
 CellLabel->
  "In[452]:=",ExpressionUUID->"ff2c190d-8203-45b1-9caf-82f12157a708"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`100.", ",", "1.5`100.", ",", 
   "1.416666666666666666666666666666666666666666666666666666666666666666666666\
6666666666666666666666666666666666666666667`100.", ",", 
   "1.414215686274509803921568627450980392156862745098039215686274509803921568\
6274509803921568627450980392156862745098039`100.", ",", 
   "1.414213562374689910626295578890134910116559622115744044584905019200054371\
8353892683589900431576443402317599483467564`100.", ",", 
   "1.414213562373095048801689623502530243614981925776197428498289498623195824\
2289236217849418367358303565583143106750595`100.", ",", 
   "1.414213562373095048801688724209698078569671875377234001561013133113265255\
6303399785317871612507104752160483751112618`100.", ",", 
   "1.414213562373095048801688724209698078569671875376948073176679737990732478\
4621070388503875343276416016397857783845578`100.", ",", 
   "1.414213562373095048801688724209698078569671875376948073176679737990732478\
4621070388503875343276415727350138462309123`100.", ",", 
   "1.414213562373095048801688724209698078569671875376948073176679737990732478\
4621070388503875343276415727350138462309123`100.", ",", 
   "1.414213562373095048801688724209698078569671875376948073176679737990732478\
4621070388503875343276415727350138462309123`100."}], "}"}]], "Output",
 CellChangeTimes->{
  3.8325829035863028`*^9, {3.832583098200364*^9, 3.832583154465373*^9}},
 CellLabel->
  "Out[452]=",ExpressionUUID->"9b775cc7-a620-47b9-a12c-1e07933711a9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "nn", "]"}], ";", 
  RowBox[{
   RowBox[{"nn", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"2", "/", "x"}]}], ")"}], "/", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.832583071850013*^9, 3.8325830841291323`*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"be3d9019-aa6a-4c42-98e3-668b0bc82baf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nn", "[", 
  RowBox[{"17", "/", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.832583102196282*^9, 3.832583111105919*^9}},
 CellLabel->
  "In[447]:=",ExpressionUUID->"0b5dd8a8-0fe5-4c2b-bb94-d887f1c3f08d"],

Cell[BoxData[
 FractionBox["577", "408"]], "Output",
 CellChangeTimes->{{3.832583103338998*^9, 3.832583111480754*^9}},
 CellLabel->
  "Out[447]=",ExpressionUUID->"fbd171ad-b727-4b53-9a7b-6bb506223402"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"2", "/", "x"}]}], ")"}], "/", "2"}]}], ",", 
   RowBox[{"{", "x", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832583188644109*^9, 3.832583199474187*^9}},
 CellLabel->
  "In[453]:=",ExpressionUUID->"f8f8e40c-2266-413e-ae36-9f36eda6f06d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox["2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox["2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.832583199675262*^9},
 CellLabel->
  "Out[453]=",ExpressionUUID->"cc28840a-d14d-4f86-a13a-5c98f1d6a8e8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"eGCD", ",", "a", ",", "b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eGCD", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a_", ",", "b_"}], "}"}], "/;", 
     RowBox[{"b", "\[Equal]", "0"}]}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eGCD", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_"}], "}"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"b", ",", 
     RowBox[{"Mod", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8325832450098753`*^9, 3.83258330688442*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"8168da66-b237-45fa-87dd-dfd99c7b44fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{"eGCD", ",", 
   RowBox[{"{", 
    RowBox[{"12345", ",", "54321"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832583308914027*^9, 3.832583338439176*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"ec663c52-f354-43a2-a0b4-a3c0c8ae653c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"12345", ",", "54321"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"54321", ",", "12345"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12345", ",", "4941"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4941", ",", "2463"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2463", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8325833184571047`*^9, 3.8325833389649057`*^9}},
 CellLabel->
  "Out[464]=",ExpressionUUID->"3ce79ccf-5dcd-4e53-8d62-42ea8b162234"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GCD", "[", 
  RowBox[{"12345", ",", "54321"}], "]"}]], "Input",
 CellChangeTimes->{{3.832583355149761*^9, 3.832583360331665*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"1c4ac65f-5ea7-4693-b820-9778e53ff1d9"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.832583360578697*^9},
 CellLabel->
  "Out[465]=",ExpressionUUID->"77756648-c234-4378-a533-0e22fdf29fb3"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.832583468765848*^9},ExpressionUUID->"4a618a50-9312-4253-b76b-\
528bf185aec1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.832583406815607*^9, 3.8325834115256863`*^9}, {
  3.832583464068766*^9, 
  3.832583465717442*^9}},ExpressionUUID->"eb74b7ca-b799-47ad-a4bc-\
ae14efc00e3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"100", "!"}], "]"}], "/.", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a___", ",", 
     RowBox[{"b", ":", 
      RowBox[{"0", " ", ".."}]}]}], "}"}], "\[Rule]", 
   RowBox[{"{", "a", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.832583413950796*^9, 3.83258344510402*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"341d3517-563d-40d1-a1e6-2bb3edc11328"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "3", ",", "3", ",", "2", ",", "6", ",", "2", ",", "1", ",", "5", 
   ",", "4", ",", "4", ",", "3", ",", "9", ",", "4", ",", "4", ",", "1", ",", 
   "5", ",", "2", ",", "6", ",", "8", ",", "1", ",", "6", ",", "9", ",", "9", 
   ",", "2", ",", "3", ",", "8", ",", "8", ",", "5", ",", "6", ",", "2", ",", 
   "6", ",", "6", ",", "7", ",", "0", ",", "0", ",", "4", ",", "9", ",", "0", 
   ",", "7", ",", "1", ",", "5", ",", "9", ",", "6", ",", "8", ",", "2", ",", 
   "6", ",", "4", ",", "3", ",", "8", ",", "1", ",", "6", ",", "2", ",", "1", 
   ",", "4", ",", "6", ",", "8", ",", "5", ",", "9", ",", "2", ",", "9", ",", 
   "6", ",", "3", ",", "8", ",", "9", ",", "5", ",", "2", ",", "1", ",", "7", 
   ",", "5", ",", "9", ",", "9", ",", "9", ",", "9", ",", "3", ",", "2", ",", 
   "2", ",", "9", ",", "9", ",", "1", ",", "5", ",", "6", ",", "0", ",", "8", 
   ",", "9", ",", "4", ",", "1", ",", "4", ",", "6", ",", "3", ",", "9", ",", 
   "7", ",", "6", ",", "1", ",", "5", ",", "6", ",", "5", ",", "1", ",", "8", 
   ",", "2", ",", "8", ",", "6", ",", "2", ",", "5", ",", "3", ",", "6", ",", 
   "9", ",", "7", ",", "9", ",", "2", ",", "0", ",", "8", ",", "2", ",", "7", 
   ",", "2", ",", "2", ",", "3", ",", "7", ",", "5", ",", "8", ",", "2", ",", 
   "5", ",", "1", ",", "1", ",", "8", ",", "5", ",", "2", ",", "1", ",", "0", 
   ",", "9", ",", "1", ",", "6", ",", "8", ",", "6", ",", "4"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.832583446002027*^9},
 CellLabel->
  "Out[466]=",ExpressionUUID->"e462d553-73a8-4006-bf44-66b8ded9ccc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", "!"}]], "Input",
 CellChangeTimes->{{3.832583452301271*^9, 3.832583452866767*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"4fe49825-62e8-42d8-aa27-b464d6f5fbd8"],

Cell[BoxData[\
"93326215443944152681699238856266700490715968264381621468592963895217599993229\
915608941463976156518286253697920827223758251185210916864000000000000000000000\
000"], "Output",
 CellChangeTimes->{3.832583453038023*^9},
 CellLabel->
  "Out[467]=",ExpressionUUID->"b5ede244-4a19-4070-8191-a1eaf28a5c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "1"}], ",", 
    RowBox[{"b", "\[Rule]", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8325835052727118`*^9, 3.832583512614719*^9}},
 CellLabel->
  "In[468]:=",ExpressionUUID->"facfa357-3c06-46a0-8f93-4735141071a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.832583512921609*^9},
 CellLabel->
  "Out[468]=",ExpressionUUID->"758cda86-d767-4ad3-a724-7070cf0cfbb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "k"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FixedPointList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"x", "[", "z", "]"}], "[", 
         RowBox[{"y", "[", "z", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[Rule]", "x"}]}], 
      "}"}]}], "&"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", "s", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.83258351960105*^9, 3.83258358646312*^9}},
 CellLabel->
  "In[469]:=",ExpressionUUID->"240792b8-8d6a-4a62-ac1a-4df802a80f50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", "s", 
    "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", 
     RowBox[{"k", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", "s", "]"}], 
    "[", 
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", "s",
      "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "s", "]"}], "[", 
     RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "s", "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
   ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
     "[", 
     RowBox[{"s", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
     "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", "s", "]"}], "[", 
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "]"}], "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
         "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
        RowBox[{"s", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
         "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", "s", "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "]"}], "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", "s", "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "]"}], "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
    "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}], 
      "]"}], "[", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], "]"}],
        "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "[", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
          "]"}], "[", 
         RowBox[{"s", "[", 
          RowBox[{"s", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.832583587447983*^9},
 CellLabel->
  "Out[470]=",ExpressionUUID->"417080dd-39cd-421e-821f-3ec3054577ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixedPointList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", "x_", "]"}], "[", "y_", "]"}], "[", "z_", "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"x", "[", "z", "]"}], "[", 
         RowBox[{"y", "[", "z", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "x_", "]"}], "[", "y_", "]"}], "\[Rule]", "x"}]}], 
      "}"}]}], "&"}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8325836118112698`*^9, 3.8325836146571503`*^9}, {
  3.83258365110797*^9, 3.832583662232835*^9}},
 CellLabel->
  "In[474]:=",ExpressionUUID->"b314ac02-6bbc-4d9f-a4b5-c6500ba33fe8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", "s", "]"}], "[", "k", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", 
     RowBox[{"k", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", "s", "]"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", "s", "]"}], "[", 
    RowBox[{
     RowBox[{"k", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "]"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "s", "]"}], "[", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "]"}], 
    "[", 
    RowBox[{"s", "[", 
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"s", "[", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "]"}], 
     "]"}], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"k", "[", 
       RowBox[{"s", "[", 
        RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{
       RowBox[{"k", "[", 
        RowBox[{"s", "[", 
         RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "[", "s", "]"}], "]"}], 
     "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"s", "[", "s", "]"}], "]"}], "[", 
     RowBox[{"s", "[", 
      RowBox[{"s", "[", 
       RowBox[{"s", "[", "s", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8325836150130444`*^9, {3.832583652180606*^9, 3.832583662444519*^9}},
 CellLabel->
  "Out[474]=",ExpressionUUID->"d87f3da9-96ee-4598-b160-c7a49465c993"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.832583698792738*^9},ExpressionUUID->"ebe27ff1-3301-400a-8dcf-\
96edceff003d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Length", "/@", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], "}"}]}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "200"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832583703593697*^9, 3.832583792291527*^9}},
 CellLabel->
  "In[475]:=",ExpressionUUID->"d96f56a1-ab6b-4a1f-8108-80efd0de3a60"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxt1DluFkEQhuEWESEBAYGDASGEkIXYd3CZfV/Mvnow2EDEFeooc5RKucUc
gSMA4v0G9SeQUPuZ7qm/p7uq9m9939je1Vr78fv/n/Hvv59r/BH/H3fbuMe8
157vM6/YusHWHTAftPcO2XuH7b0j5lWLc9TiHDMft7gnzCftd06ZT9vvnjGf
tX2cs32cN1+wfV00X7J9XrZ9XjGv2b6j33fK2vd675T1HVd7p6zvutY7ZX3n
9d4p67tv9E5Z53CTkXNIWedwq3fKOpfbvVPWOd1h5FzS3O7yXPPmdo+Rc0u8
nOP93omXc33Ac5zm9pCRc01ze8RzzePl3B/3Dqx7SM1z7qV53cOT3oF1L2ku
rdc9bfQOrHtLc2m97vFp78C61zSX1uuenzFyr2FOrHsvzXPP7TnzOMyJlQel
eeXFi96Bl7wwl9YrT14ykhdhTqy8KXN7xUjeBFYepbm0Xnn0undg5Vlqnrwp
c3vDeziw8i6x8q7M7S0jeRVYeZjmwktevusdeMlTc2HlbXvfO7DyOLHyuMzt
A8/1Pl7yGiuvy9w2WYfDnFh5X+Y2MpLXgzmw6mLES12YJ6w6KcUj72fFU118
7D1g1U1g1c1oTqw6msyl+Hg2ty3i4MEcWHU3YtVdmiesOizzrPiq00+sw4M5
sOp0xEudYtXpZC7Fw7PiqQ4/9x6w6jjMI1ZdJ1ZdT+ZSfOp2Nrdt4uMBq+7D
PGL1gcTqA5Pi4TLPiqe+scM6PJgDq0+M5sTqG5O5sPrIbG5fWIcHrL4S5hGr
z6R5wuo7pfh4NrevjPSVAasPBVYfGs2J1Zcmcyk+fWc2t2/8Dh7++Rc+X1Kz

       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 201.}, {0, 125.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8325837929463177`*^9},
 CellLabel->
  "Out[475]=",ExpressionUUID->"3e552371-5899-4cb6-8418-07ea831fbc8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], "}"}]}], 
    "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "200"}], "]"}]], "Input",
 CellLabel->
  "In[478]:=",ExpressionUUID->"9ef320a5-1b49-46e0-ae56-d843fd864a08"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
           TemplateBox[{"196"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
             ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
             "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
             "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
             "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", 
             ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", 
             ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
             "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
             ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
             "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
             "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", 
             "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", 
             ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
             "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
             ",", "1"}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 478, 27239474019221418071, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 478, 27239474019221418071, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 478, 27239474019221418071, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[27239474019221418071 === $SessionID, 
   Out[478], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.832583840047336*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"d1f2c9f5-d0c6-4fac-a846-7aec8d5d7a38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", "1"}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], "}"}]}], 
     "&"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", "200"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8325838301612883`*^9, 3.8325838329096327`*^9}},
 CellLabel->
  "In[477]:=",ExpressionUUID->"fc649e7a-bded-4463-9480-3696352cb665"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt1MGtJEFXROFfAkewBB8wAYk1FmAg3mACbNiUlJP1piteR+X9Uhrl4mTH
PXHndf/Lv//nv/3HP/3jH//47//791//9++f//H/53/+9bN7dT7N/a38T+en
/dL57f3b/dL57f3b/dL50/un86fvt70/v7P90vnt/dv90vnT+6fz2/fLr9tv
x9v//tP57X8f6fz2/u1+6fz2/u1+6fzp/dP50/fb3p/f2X7p/Pb+7X7p/On9
0/nt++X33fvb/m/Pn77f9v7tfun89v7tfun86f3T+dP3296f39l+6fz2/u1+
6fzp/dP57fs93e+nn2vzT/u9PX/6ftv7t/ul89v7t/ul86f3T+dP3297f35n
+6Xz2/u3+6Xzp/dP57fv961+T835ln/Lft+eP32/7f3b/dL57f3b/dL50/un
86fvt70/v7P90vnt/dv90vnT+6fz2/eb2s/u3e74//8dv7fnT99ve/92v3R+
e/92v3T+9P7p/On7be/P72y/dH57/3a/dP70/un89v3uvP6Wv6V/On96/3T+
9P2292/3S+e392/3S+dP75/On77f9v78zvZL57f3b/dL50/vn85Pzd+9u8v/
dr6/r9+Zn/Z7e/70/bb3b/dL57f3b/dL50/vn86fvt/2/vzO9kvnt/dv90vn
T++fzt/NTfGW/792v3T+9P7p/On7be/f7pfOb+/f7pfOn94/nT99v+39+Z3t
l85v79/ul87X/89zv8VP+f9r90vnT++fzp++3/b+7X7p/Pb+7X7p/On90/nT
99ven9/Zfun89v7tfun89v47r1b+7f20//+1+KXzp/dP50/fb3v/dr90fnv/
dr90/vT+6fzp+23vz+9sv3R+e/92v3R+av7uXQtfnW/v75S/33a/dP70/un8
6ftt79/ul85v79/ul86f3j+dP32/7f35ne2Xzm/v3+6Xzt/NfSuf/v/X0r/d
L50/vX86f/p+2/u3+6Xz2/u3+6Xzp/dP50/fb3t/fmf7pfPb+7/Vbzfn7fyU
/790fnv/dr90/vT+6fzp+23v3+6Xzm/v3+6Xzp/eP50/fb/t/fmd7ZfOb++f
2s/u3Sl8dd7y/5f2S+e392/3S+dP75/On77f9v7tfun89v7tfun86f3T+dP3
296f39l+6fz2/juvqfzt/38tfun89v7tfun86f3T+dP3296/3S+d396/3S+d
P71/On/6ftv78zvbL52fmr97N4WvTsv/33S/dH57/3a/dP70/un86ftt79/u
l85v79/ul86f3j+dP32/7f35ne2Xzt/Nxe+9u55v///xe2b+6f3b/dL50/un
86fvt71/u186v71/u186f3r/dP70/bb35zfTbzcH/zM//e+D3zPzT+/f7pfO
n94/nT99v+392/3S+e392/3S+dP7p/On77e9P7/v+u0+h3/GV+ctfx/8uv3S
+e392/3S+dP7p/On77e9f7tfOr+9f7tfOn96/3T+9P229+eX9cIz/O1/H/zO
8Evnt/dv90vnT++fzp++3/b+7X7p/Pb+7X7p/On90/nT99ve/3S/3efwLF+d
lr8PfvyS80/v3+6Xzp/eP50/fb/t/dv90vnt/dv90vnT+6fzp++3vf9b/XZz
8Cz3/eLHL5/f3r/dL50/vX86f/p+2/u3+6Xz2/u3+6Xzp/dP50/fb3v/1H52
7/Df4avj+8WPn7/v0/3S+dP7p/On77e9f7tfOr+9f7tfOn96/3T+9P229995
4Z38LX9f6fz2/vzO9kvnt/dv90vnT++fzp++3/b+7X7p/Pb+7X7p/On90/nT
95uav3uHd/DVafn7Svul89v78zvbL53f3r/dL50/vX86f/p+2/u3+6Xz2/u3
+6Xzp/dP50/f724u/k7e/vc1/fvV0p/f2X7p/Pb+7X7p/On90/nT99vev90v
nd/ev90vnT+9fzq/fb87L/xM7vv1O37p/Pb+/M72S+e392/3S+dP75/On77f
9v7tfun89v7tfun86f3T+an5u3f4GXx1vv3315I//fervT+/s/3S+e392/3S
+dP7p/On77e9f7tfOr+9f7tfOn96/3T+bi4+k/t+/c69m5/2S+e39+d3tl86
v71/u186f3r/dP70/bb3b/dL57f3b/dL5+v/57k4nrxX55TvVzp/+n7b+/M7
2y+d396/3S+dP71/On/6ftv7t/ul89v7t/ul89v777xw/G/4t/9+W75fb8+f
vt/2/vzO9kvnt/dv90vnT++fzp++3/b+7X7p/Pb+7X7p/NT83Tscv8NX59t/
335fOvKn77e9P7+z/dL57f3b/dL50/un86fvt71/u186v71/u186fzcXxxN8
+vdrSv90/vT9tvfnd7ZfOr+9f7tfOn96/3T+9P2292/3S+e393+r324Ojif5
Kd+vdP70/un86ftt78/vbL90fnv/dr90/vT+6fzp+23v3+6Xzm/vn9rP7h2O
/wZfnbd8v9J+6fzp/dP50/fb3p/f2X7p/Pb+7X7p/On90/nT99vev90vnd/e
f+eF44387d+vFr90/vT+6fzp+23vz+9sv3R+e/92v3T+9P7p/On7be/f7pfO
T83fvcPxBr46Ld+v6X7p/On90/nT99ven9/Zfun89v7tfun86f3T+dP3296/
3S+dv5uL42/kLd9fftn5+nfnT99ve39+Z/ul89v7t/ul86f3T+dP3297/7f6
7ebg+Jv56d9ffs/M1787f/p+2/vzO9svnd/ev90vnT+9fzp/+n7b+6f2s3uH
4yfw1XnL95dft186f3r/dP70/bb353e2Xzq/vX+7Xzp/ev90/vT9tvffeeH4
RP727y+/M/zS+dP7p/On77e9P7+z/dL57f3b/dL50/un86fvNzV/9w7HJ/DV
afn+8uOXnK9/d/70/bb353e2Xzq/vX+7Xzp/ev90/vT97ubiOP6+72/L7xe/
s/3S+dP7p/On77e9P7+z/dL57f3b/dL50/un89v3u/PCcfzn3O8XP37+vtv7
p/On77e9P7+z/dL57f3b/dL50/un81Pzd+9wHP/59273ubbfl3T+p/P58UvO
1787f/p+2/vzO9svnd/ev90vnT+9fzp/NxfH8ee536/fuXfz+fFLzte/O3/6
ftv78zvbL53f3r/dL52v/5/n4jj++9zvV0d++375ne2Xzp/eP50/fb/t/fmd
7ZfOb+/f7pfOb++/88JxvI9/+/eh5ffr7fnt++V3tl86f3r/dP70/bb353e2
Xzq/vX+7Xzo/NX/3Dsfx7/PV+fbvx2/NT/u9Pb99v/zO9kvnT++fzp++3/b+
/M72S+e392/3S+fv5uI4/j4+/fdrSv90fvt++Z3tl86f3j+dP32/7f35ne2X
zm/v/1a/3Rwcx9/LT/n9SudP75/Ob98vv7P90vnT+6fzp++3vT+/s/3S+e39
U/vZvcNx/P18dd7y+5X2S+dP75/Ob98vv7P90vnT+6fzp++3vT+/s/3S+e39
d144js/jb//9avFL50/vn85v3y+/s/3S+dP7p/On77e9P7+z/dL5qfm7dziO
n89Xp+X3a7pfOn96/3R++375ne2Xzp/eP50/fb/t/fmd7ZfO383FcRxv/X3k
l52vf3d++375ne2Xzp/eP50/fb/t/fnN9NvNwXEcn/r7yO+Z+fp357fvl9/Z
fun86f3T+dP3296f33f9dp/DcRz/W746b/l95Nftl86f3j+d375ffmf7pfOn
90/nT99ve39+WS8cx/Gn+dt/H/md4ZfOn94/nd++X35n+6Xzp/dP50/fb3v/
0/12n8NxHE/x1Wn5feTHLzlf/+789v3yO9svnT+9fzp/+n7b+7/VbzcHx3E8
xZ/6/fyt38nVfH78kvP1785v3y+/s/3S+dP7p/On77e9f2o/u3c4juNpvjq/
9fuazv90Pj9+yfn6d+e375ff2X7p/On90/nT99vef+eF4zjexn/6O3Y9d3l6
fvrezefHLzlf/+789v3yO9svnT+9fzp/+n5T83fvcBzHv81Xp+X3Ne2Xzm/v
z+9sv3T+9P7p/Pb98jvbL50/vX86f/p+d3NxHMffxn/6O3c9T/2Ofjo/7ZfO
b+/P72y/dP70/un89v3yO9svnT+9fzq/fb87LxzH8dP49d31PP07msr/dH7a
L53f3p/f2X7p/On90/nt++V3tl86f3r/dH5q/u4djuP42/nq/O3v7d05b8n/
dH7aL53f3p/f2X7p/On90/nt++V3tl86f3r/dP5uLo7j+DR+fXc9d/mn99vz
p++3vT+/s/3S+dP7p/Pb98vvbL90vv5/novjOI5n7tW5y9Pz2/On77e9P7+z
/dL50/un89v3y+9sv3R+e/+dF47jOP4zfn13PbvPPXXv5qf93p4/fb/t/fmd
7ZfOn94/nd++X35n+6XzU/N373Acx/E/89VZfe6ndzr/0/lpv7fnT99ve39+
Z/ul86f3T+e375ff2X7p/N1cHMdx/Fl+fXc9d/mndzp/ev90/vT9tvfnd7Zf
On96/3R++375zfTbzcFxHMcz/Kl7de7y9Hz9u/On77e9P7+z/dL50/un89v3
y++7frvP4TiO49/hq7N7t8p9+v62Xzp/ev90/vT9tvfnd7ZfOn96/3R++375
Zb1wHMfxLn73Xp27PH1/2y+dP71/On/6ftv78zvbL50/vX86v32/p/vtPofj
OI538tVZfe7pezd/ul86f3r/dP70/bb353e2Xzp/ev90fvt+3+q3m4PjOI53
8rv36nya+9T86X7p/On90/nT99ven9/Zfun86f3T+e37Te1n9w7HcRzv5quz
e7fK/emdzv90/nS/dP70/un86ftt78/vbL90/vT+6fz2/e68cBzH8bP43Xt1
7vL0/PS9mz/dL50/vX86f/p+2/vzO9svnT+9fzo/NX/3DsdxHH83X53V556+
d/PTfun89v7tfun86f3T+dP3296f39l+6fzp/dP5u7k4juP4LH59dz13efr+
tl86v71/u186f3r/dP70/bb353e2Xzpf/z/PxXEcx/HEvTp3+el+6fz2/u1+
6fzp/dP50/fb3p/f2X7p/Pb+Oy8cx3Ec/wm/vrue3eeeunfzp/ul89v7t/ul
86f3T+dP3297f35n+6XzU/N373Acx3H8T3x1Vp/76Z3O/3T+dL90fnv/dr90
/vT+6fzp+23vz+9sv3T+bi6O4ziOP8mv767nLv/0Tue392/3S+e392/3S+dP
75/On77f9v78Zvrt5uA4juN4gj91r85dnp5/ev92v3R+e/92v3T+9P7p/On7
be/P77t+u8/hOI7j+Df46uzerXKfvr/tl85v79/ul85v79/ul86f3j+dP32/
7f35Zb1wHMdxvInfvVfnLk/f3/ZL57f3b/dL57f3b/dL50/vn86fvt/2/qf7
7T6H4ziO4418dVafe/rezZ/ul85v79/ul85v79/ul86f3j+dP32/7f3f6reb
g+M4juON/O69Op/mPjV/ul86v71/u186v71/u186f3r/dP70/bb3T+1n9w7H
cRzHm/nq7N6tcn96p/M/nT/dL53f3r/dL53f3r/dL50/vX86f/p+2/vvvHAc
x3H8JH73Xp27PD0/fe/mT/dL57f3b/dL57f3b/dL50/vn86fvt/U/N07HMdx
HH8zX53V556+d/PTfun89v7tfun89v7tfun89v7tfun86f3T+dP3u5uL4ziO
45P43Xt1Ps19an7aL53f3r/dL53f3r/dL53f3r/dL50/vX86v32/Oy8cx3Ec
x9fvrmf3ubt3Ov/T+Wm/dH57/3a/dH57/3a/dH57/3a/dP70/un81PzdOxzH
cRyfzFdn9bmf3m/P/3R+2i+d396/3S+d396/3S+d396/3S+dP71/On83F8dx
HMfx+/z67nru8k/vt+dP3297/3a/dH57/3a/dH57/3a/dL7+f56L4ziO4/hz
/Kl7de7y9Pz2/On7be/f7pfOb+/f7pfOb+/f7pfOb++/88JxHMdx/Pf49d31
7D731L2bn/Z7e/70/bb3b/dL57f3b/dL57f3b/dL56fm797hOI7jOJ7jq7P6
3E/vdP6n89N+b8+fvt/2/u1+6fz2/u1+6fz2/u1+6fzdXBzHcRzHe/j13fXc
5Z/e6fzp/dP50/fb3r/dL53f3r/dL53f3v+tfrs5OI7jOI738afu1bnL0/P1
786fvt/2/u1+6fz2/u1+6fz2/qn97N7hOI7jON7LV2f3bpX79P1tv3T+9P7p
/On7be/f7pfOb+/f7pfOb++/88JxHMdx/Bx+916duzx9f9svnT+9fzp/+n7b
+7f7pfPb+7f7pfNT83fvcBzHcRx/L1+d1eeevnfzp/ul86f3T+dP3297/3a/
dH57/3a/dP5uLo7jOI7jc/j13fXc5emb32fz9e/On77f9v7tfun89v5v9dvN
wXEcx3F8Hn/qXp27nN93/dL50/un86fvt71/u186v71/aj+7dziO4ziOz+Wr
s3u3yn365vduv3T+9P7p/On7be/f7pfOb++/88JxHMdxHL/L796rc5enb37v
9kvnT++fzp++3/b+7X7p/NT83Tscx3Ecx/EVX53V556+d/P58UvO1787f/p+
2/u3+6Xzd3NxHMdxHMef4td313OXp29+/JJ+6fzp/dP50/fb3v+tfrs5OI7j
OI7jT/On7tW5y/nxe7NfOn96/3T+9P2290/tZ/cOx3Ecx3E8xVdn926V+/TN
j99kv3T+9P7p/On7be+/88JxHMdxHG/hd+/VucvTNz9+k/3S+dP7p/On7zc1
f/cOx3Ecx3H8W3x1Vp97+t7N58eP3/f80vnT+6fzp+93NxfHcRzHcfwt/O69
Op/mPjWfHz9+3/NL50/vn85v3+/OC8dxHMdx/BR+fXc9u8/dvdP5n87nx4/f
9/zS+dP7p/NT83fvcBzHcRzH38pXZ/W5n95vz/90Pj9+/L7nl86f3j+dv5uL
4ziO4zg+hV/fXc9d/un99vz2/fLjx8/vQ1v/3Rwcx3Ecx/Fp/Kl7de7y9Pz2
/Pb98uPHz+/D33rhOI7jOI7j9/j13fXsPvfUvZuf9nt7fvt++fHj997fh93n
cBzHcRzH8Z/x1Vl97qd3Ov/T+Wm/t+e375cfP359vw+7OTiO4ziO4/jP+PXd
9dzln97p/On90/nt++XHj9/fe+E4juM4juO/w5+6V+cuT8/Xvzu/fb/8+L3Z
b/c5HMdxHMdx/Hf56uzerXKfvr/tl86f3j+d375ffvwa/XZzcBzHcRzH8d/l
d+/VucvT97f90vnT+6fz2/fLj9/fzN+9w3Ecx3Ecx7/DV2f1uafv3fzpfun8
6f3T+e375TfTbzcHx3Ecx3Ec7+J379X5NPep+dP90vnT+6fz2/fL77t+u8/h
OI7jOI7j7+Krs3u3yv3pnc7/dP50v3T+9P7p/Pb98st64TiO4ziO42fwu/fq
3OXp+el7N3+6Xzp/ev90fvt+T/fbfQ7HcRzHcRw/i6/O6nNP37v5ab90fnv/
dr90/vT+6fz2/b7VbzcHx3Ecx3EcP4vfvVfn09yn5qf90vnt/dv90vnT+6fz
2/eb2s/uHY7jOI7jOH4mX53du1XuT+90/qfz037p/Pb+7X7p/On90/nt+915
4TiO4ziO4/hP7tW5y9Pz0/duftovnd/ev90vnT+9fzo/NX/3DsdxHMdxHJ/J
V2f1uafv3fy0Xzpf/8/mT/dL50/vn87fzcVxHMdxHMfxO/z67nru8vT9bb90
vv6fzZ/ul87X/89zcRzHcRzHcfwJ/tS9Onf56X7pfP0/mz/dL53f3v9bv784
juM4juM4/qd317P73FP3bv50v3S+/p/Nn+6Xzk/N373DcRzHcRzH8QRfndXn
fnqn8z+dP90vna//Z/On+6Xzv/37i+M4juM4juN3+PXd9dzln97p/Pb+7X7p
fP0/m8/vz144juM4juM4/gb+1L06d3l6/un92/3S+fp/Nr/dr/X3E8dxHMdx
HMf/hq/O7t0q9+n7237p/Pb+7X7pfP0/m/8tv90cHMdxHMdxHH8Tv3uvzl2e
vr/tl85v79/ul87XPzN/9w7HcRzHcRzH38hXZ/W5p+/d/Ol+6fz2/u1+6Xz9
/zwXx3Ecx3Ecxyfwu/fqfJr71Pzpfun89v7tfun89v6tv384juM4juM43sSv
765n97m7dzr/0/nT/dL57f3b/dL5qfm7dziO4ziO4zg+ka/O6nM/vd+e/+n8
6X7p/Pb+7X7p/G//vuE4juM4juP4Cfz67nru8k/vt+e377fdL53f3v+tfrs5
OI7jOI7jOI7f50/dq3OXp+e357fvt90vnd/eP7Wf3Tscx3Ecx3Ecx3/OV2f3
bpX79P1tv7fnt++33S+d397/279POI7jOI7jOI7fv1fnLk/f3/Z7e377ftv9
0vmp+bt3OI7jOI7jOI4/z1dn9bmn79386X5vz2/fb7tfOv/bvz84juM4juM4
ju/59d313OXpm99n89vz2/f7Vr/dHBzHcRzHcRzHe/hT9+rc5fy+6/f2/Pb9
pvaze4fjOI7jOI7jeB9fnd27Ve7TN793+709v32/3/79wHEcx3Ecx3E8z+/e
q3OXp29+7/Z7e35q/u4djuM4juM4juPv46uz+tzT924+P37J+e353/59wHEc
x3Ecx3H8+/z67nru8vTNj1/SL53f+v3HcRzHcRzHcbyHP3Wvzl3Oj9+Jfrs5
OI7jOI7jOI7jq3fXs/vcU/duPj9+3/Rr/f7iOI7jOI7jOP4+vjqrz/30Tud/
Op8fv6QXjuM4juM4juP4p/zuvTqf5v5W/qfz+Z3t1/r9xHEcx3Ecx3H8PL46
u3er3J/eb8//dD6/d/rt5uA4juM4juM4jj/F796rc5en57fnt+/3dL/W7x+O
4ziO4ziO4/P46qw+9/S9m5/2e3t++37f6rebg+M4juM4juM4/lv87r06n+Y+
NT/t9/b89v2m9rN7h+M4juM4juM4/tt8dXbvVrk/vdP5n85P+709v32/3/5+
4TiO4ziO4ziOf8rv3qtzl6fnp+/d/LTf2/NT83fvcBzHcRzHcRzH2/jqrD73
9L2bn/ZL50/vn87/9vcHx3Ecx3Ecx3E8za/vrucuT9/f9kvn6//nuTiO4ziO
4ziO46fzp+7VuctP90vnt/dv/fvHcRzHcRzHcRxv4dd317P73FP3bv50v3R+
av7uHY7jOI7jOI7j+DS+OqvP/fRO5386f7pfOv/bf984juM4juM4juNv59d3
13OXf3qn89v7v9VvNwfHcRzHcRzHcRy/x5+6V+cuT88/vX9qP7t3OI7jOI7j
OI7j+M/46uzerXKfvr/tl85v7//tv08cx3Ecx3Ecx/Hp/O69Ond5+v62Xzo/
NX/3DsdxHMdxHMdxHH+Wr87qc0/fu/nT/dL53/77w3Ecx3Ecx3Ecx//Mr++u
5y5P3/w+88JxHMdxHMdxHMe7+VP36tzl/P5u/u4djuM4juM4juM43sVXZ/du
lfv0ze8zLxzHcRzHcRzHcfzd/O69Ond5+n67X+vfB47jOI7jOI7jOP4sX53V
556+d/P5/dkLx3Ecx3Ecx3EcP5vfvVfn09yn5rf7tf7/4ziO4ziO4ziO47/L
V2f3bpX70zud/+n8b/nt5uA4juM4juM4juMz+N17de7y9Pz0/bfzd+9wHMdx
HMdxHMfxWXx1Vp97+t7NT/ul87/9/4vjOI7jOI7jOI6/m9+9V+fT3Kfmf8tv
NwfHcRzHcRzHcRzH7/Dru+vZfe7unc5Pzd+9w3Ecx3Ecx3Ecx/Gf8NVZfe6n
99vzv/3/g+M4juM4juM4js/m13fXc5d/eqfzW/eP4ziO4ziO4ziO40/eq3OX
p71wHMdxHMdxHMdxvJlf313P7nNP3X87f/cOx3Ecx3Ecx3Ecx5v46qw+99M7
nf/t/eE4juM4juM4juN4kl/fXc9dnrp3c3Acx3Ecx3Ecx3H8BP7UvTp3P4fj
OI7jOI7jOI7jE/jq7N6tcp+67/rjOI7jOI7jOI7j+Mn87r06dz+H4ziO4ziO
4ziO4/j6rD731P2UP47jOI7jOI7jOI6fzK/vrufu53Acx3Ecx3Ecx3Ec3/PV
WX3u7v1b/jiO4ziO4ziO4zj+bv6/+kKSSA==
   "], {{0, 0}, {125, 201}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.832583825786229*^9, 3.8325838332363462`*^9}},
 CellLabel->"Out[477]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnT+sZlUVxd/MgM6XmZcJQaMFxSOZGE20oKCgoMBETEikoKDQRJ1MHCDE
jIFJpKCgoNAECwoKCgpNtKCgoKDQRAsKCgoKLSgoKCg00YKCgoI85zvgO7zr
Pvutfc+5/3+T8HL57nf3Xmvde/de59w/34+u3XryF7+8duup69eOfvjMtV89
+dT1Z48evvnM7Y8unDs4OH/14ODCz48O9svHBwf/+5P/fWv/58uflD44uJD+
78aNG/v/Dj5f2v+5d//n/P99af//OcjR/s+5/Ypzny/x9fl8/a793zv2n+9O
li7vl3b7pYsnnx3uly6eXkpr7zzZorPWjxfPlr8XwndHCZW/bWcpfe8SgiIo
giIogg4r6E5M1RFvd1pGSx6fdo4nZPPJDrJzrShfQ1AERVAEtZpSJ4EFLie1
2kS8efm7z99BY+zSTpT0vSsIiqAIiqBWU7JStTH7Au2abGPs3Lz0TQRFUARF
0OLkiDqB4NvgePNahMVPn+nGHkERFEG3Iqg1OWKlspqNb4irm0Nx7VRm/x4E
RVAERVBhcsS3+NZaSzK1eS3C4qcl3dgjKIIiKIIiaC9BVaFqZtjjbqDmCuxw
c2DS7YwIiqAIuilB1XZS0zBCzaH6CmzrObCryIiMyLhBGb9upI/Pr7Sx7v5A
YVzr/h3EQzzEW6V4h2eHnbHV9ndL9dRJsAMjIzIi43pk9K/kTWW1W1/hrNml
30NGZERGZETGfjLW9FhhPBPaLUK2zk5Td0t8R96HeIiHeKsUL8/XxOc0Wo9T
BhkVxccpesNAPMRDvMWJtxOFmqdxVrPFjfP9iId4iLdK8e46HWw5drnnNUJh
96UlySQjHuIh3uLEi9+jFDLOoYfJRjPORQudt3gA8RAP8VYpnlBKR3uly7jm
3BL0QSRDMiRDsq1IZt1+a4midla/m8145KB3TCRDMiSboWTWfG/1iKCzxSAj
gobX23KU7yMZkiHZQiWz5nEtmP71cP+uoUWY2pRNsrJIhmRINkPJfLOqluaG
9nbS62MPIxmSIdlCJbPe9+wv+aXUL76+Ca220DWmNn2mW1kkQzIkm5dku7OD
xe2tX5rb2NtBLt08gmRIhmRIthXJ/Dccx8cBfmft2c16dtbQOCCt1d0/kiEZ
ks1LMn8+dYIRQc/ZktCIoLj2USRDMiRbqGT+T8oVy/8gprZmF9SY2scQCqEQ
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
XPFfgMtoQpU/n496vQfX4nFlP+FfzfSfAVB7QEr9U3BtB1fNT2+FKmw+7vW6
Cq7F4/KPZyuL72atSpzPnpT6Ori2g6vNLzpZFbZz9uTrInpdBRe4BsLl+wn/
zIz3gJT6CXBtB5fvJ2oqf2dt9hN6vQfX4nGpfqJnre1cw0mpnwbXdnDFj+d4
hU0Jb4JmTWisJ8b9o9Oa87PwpzTPgmFZGA6NfA0rXZ9zBTSgCaJR7zboWXfz
2PXXoFkTmjb+zcKf0jwPhmVh8O+e8/MVUQePSTDMB4N6t1u8bqU0L4BhWRjU
u9NC1Sp7HalGgWE+GOJ3bal1K6V5EQxgiGKI3+nlnz8p+G/IPLfMeZwcv+NK
GHdLxxoY5oPBGllbFafnePolMCwLg+WD49dD87Gbgr9M5rlljr9jongkBo8w
Mo+Z2R//xq8epuCvkJnM2og6VM2yd5FqGJnHzKy6ULWupeCvknluma0jJ15T
UsjXyDd+PvVXCIuz4MHjhXxt81mdPF4DUsjfk2/9+eK/YlecMZLqC/na5vM7
vd/VOzM8fyTf+Pn8/u6Pt1Kg18kyRJb4r1ylzd8gdr/Yufb5fa+z1OfYIUsg
i3rvZHHvv0mW5WbJV5r9mYLiMSad+2SJZsmjBHX2rrP33yLLEFmsJ0OF8zPv
ff2sJEuvamm5Qv9MTYH+TJYhsvhvgiien3nv62clWSqrpT/i7ez9v5JluVnU
9xt0akQ+xvRznyzNarJfD1Kgt8kyRBZ/frd4PfUdYveLrT7DnjZ6l4j9ZpCK
1yX0/U/sU7HVOZvOExjvEXt+sf2q1nFdfyfi2VVNGLtIe2abEf07OPNRnzZ6
n4hnO3nrLp3LJ7HTRtIRvs2I6h2IaaMPiDheRGGu+8Mtxyle5Q7qvNY4/h1q
6asfbTlO8Q6wrLN0HK41jl/R0lf/ueU4xae7s876cUgcf38VxzLpq//ecpzi
nHbWWT+eVxjHn1tOX/14y3Gs8zR94ZN1b52Ppc75F9RvrXGsWbnO8fUpcerj
FOc3P1v31nmcc3zy7/zKNuxcpeij7yK3ts6NLN1XNhWi05vSv0ts+KUzq4+q
C9owG/284ZWVbZitWN5QOgAWtOHO2PDulW14aGwoHQAL2nBBu2P8DfPXj/j6
Kr5++7+DLza8/efe/Z/zX3zp3H8B2jAIRw==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"6a3889db-50e8-4523-8ae9-81b33d8f8a7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Length", "/@", 
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "0", ",", "2", ",", "1", ",", "2"}], "}"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "0"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "_", ",", "a___"}], "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a", ",", "2", ",", "1"}], "}"}]}]}], "}"}]}], "&"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "200"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832583876608696*^9, 3.8325839342648*^9}, {
  3.832584066094936*^9, 3.832584075714921*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"dd5554aa-0187-4852-9b08-7ded9486546d"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJx11UluFEEQheEUK5YsWLBgUSCEEEKIeQYnzTzabgbbDKZo09CsuEIcpY6S
W25RR+AIgHivUPwCS1b0V5mRVRmdUX1k8W2+3FdK+f7r/3f88/djTR/qv+N+
xQP/iQcx7xCuH4Y7XD+KeAzzjuP6CcSTiqcQzyiehnn9LHwO65yHL+C+F+FL
eL7LyL8CX0X+NTzPdfgG8m/Ct7DeGvJrdtiuw21F7Tts12WmqDoEXO4oqg5h
e993FVWXsF2He4rad9je531F7Svg8kBRdQjb+3yYHbbzH2F923V9jPVtr/9E
UXULe6b4VFF1Cdt1eKaofYftfT5X1L5Cnuqwnh3ryN/I+RWOjZzfbNdxM7tu
Ih9unu/7z7PrPD9fwM3zfQ5eZFd5qhfcPN/1fZldZdc/4Ob5Psevsqs8fZ9w
8/yZrr9GPhy27297/1t5f9V2/eC2hfxt2fWHYxv5tr//ney6g3zb3z9c3iDf
Vh8G3Gz34VtF9V2V3adha7zZ7sN3svqu2uqzgJs89eV7RfVdhcNW3zXbfbar
eRqvcOwi33b+h+wqT33rcfVdk93Hpc/u+pxf+5zfw4H8AW5Yb4TLx7xeJ/u9
UT2uvu897veAx9XXg8fl5nH17ehx9/VC95E7uC5yfr/I+QEPyG/wiPXKXnYn
+z1V4X4v7y+QP8AN+SNcPuX1OrjKfq/2cMhT/ZHf4BH5ZZmfp4PrMuf3cCzz
egPclvn5Rrh81jydpw6uss9bD4fs360BbrLP7wiXL5rn8w9X2f3QwyH7d3dA
foNH5JdVfp4Orquc38OxyusNyG/wiPzyVffx/f/6J8OJS2E=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 201.}, {0, 82.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8325840696560097`*^9, 3.8325840762181053`*^9}},
 CellLabel->
  "Out[484]=",ExpressionUUID->"c8083af5-c8c0-46da-a5c5-304daed1f7b4"]
}, Open  ]]
},
WindowSize->{1440, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 13, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c4fa0fe6-3406-4f80-b8f9-e729609e351d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 192, 3, 35, "Text",ExpressionUUID->"da155ef8-9f40-42f9-8f3c-6b0c87c82191"],
Cell[753, 25, 157, 3, 30, "Input",ExpressionUUID->"d727c440-dfe0-405d-a753-8b7d50d6fa7b"],
Cell[913, 30, 241, 5, 52, "Input",ExpressionUUID->"26daba08-b995-4a5c-b6d9-3922ed00776a"],
Cell[CellGroupData[{
Cell[1179, 39, 291, 7, 52, "Input",ExpressionUUID->"945631e1-f79a-4da2-a309-34a0c5f56e2b"],
Cell[1473, 48, 202, 4, 34, "Output",ExpressionUUID->"0fe035d1-67c1-41dc-811b-fb8b35e36bca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1712, 57, 204, 4, 30, "Input",ExpressionUUID->"4506521a-bdc2-4cb0-8edc-8366e11f596a"],
Cell[1919, 63, 177, 3, 34, "Output",ExpressionUUID->"0ada0579-aa0f-4d98-9cc1-8de5a8a20709"]
}, Open  ]],
Cell[2111, 69, 383, 10, 30, "Input",ExpressionUUID->"38a175e3-d3e7-4ac4-81c1-89777dddfa48"],
Cell[CellGroupData[{
Cell[2519, 83, 370, 9, 30, "Input",ExpressionUUID->"2a411216-5f30-43d0-91ff-917e1e31c775"],
Cell[2892, 94, 7073, 143, 412, "Output",ExpressionUUID->"430a27ae-ccea-4569-98b3-30353dd0e9f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10002, 242, 412, 11, 52, "Input",ExpressionUUID->"dfbc5db0-73ea-4cf9-8195-860525477fb0"],
Cell[10417, 255, 198, 5, 34, "Output",ExpressionUUID->"d5d3b53b-e678-48ae-87a3-d80a472fe138"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10652, 265, 249, 6, 30, "Input",ExpressionUUID->"1b115f80-a3c9-42fa-84fe-839dac73b8fb"],
Cell[10904, 273, 222, 5, 34, "Output",ExpressionUUID->"04d42c03-d744-42d3-be2b-fa4914a1114e"]
}, Open  ]],
Cell[11141, 281, 480, 14, 73, "Input",ExpressionUUID->"8c5d2de8-b321-436c-9f42-b984ee9c0dd5"],
Cell[CellGroupData[{
Cell[11646, 299, 227, 5, 30, "Input",ExpressionUUID->"eaa6fcff-fe50-4e29-b126-b28c0f418892"],
Cell[11876, 306, 175, 4, 50, "Output",ExpressionUUID->"e67509e4-0ae0-400b-b7c2-e6526a308bcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12088, 315, 493, 14, 52, "Input",ExpressionUUID->"9eae309d-e1c3-463a-bf44-0268114de820"],
Cell[12584, 331, 278, 8, 49, "Output",ExpressionUUID->"b210483f-b3a6-440d-9bd5-be2ae75a08e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12899, 344, 252, 6, 30, "Input",ExpressionUUID->"d8701780-33ab-4fcf-91c7-d942e2119e00"],
Cell[13154, 352, 273, 7, 51, "Output",ExpressionUUID->"91fd4655-522f-4c66-bfff-c5b00cf52bf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13464, 364, 797, 23, 52, "Input",ExpressionUUID->"41039d16-97fa-4484-9293-a3362f9a5b4b"],
Cell[14264, 389, 13927, 368, 49, "Output",ExpressionUUID->"d6916bff-dc23-43ad-82b9-51dedf8b466f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28228, 762, 270, 6, 30, "Input",ExpressionUUID->"e399014b-f333-4071-9571-021d01d605b1"],
Cell[28501, 770, 179, 3, 34, "Output",ExpressionUUID->"269c7ff6-4a7b-4e9d-834c-8b73a276241d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28717, 778, 851, 25, 52, "Input",ExpressionUUID->"ba149b85-bf69-4eed-aabe-b7aa482cdca6"],
Cell[29571, 805, 2771, 93, 49, "Output",ExpressionUUID->"e8b2f48c-29e4-46bc-96fa-de573d27ceb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32379, 903, 479, 11, 52, "Input",ExpressionUUID->"5fcbc125-cef1-4fb0-bcbc-58caad90b612"],
Cell[32861, 916, 49862, 826, 104, "Output",ExpressionUUID->"352d8812-5efc-4333-96b1-fccb8f243551"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82760, 1747, 229, 4, 30, "Input",ExpressionUUID->"3b91c9e8-c7aa-486b-aba0-b1f8d07a3cad"],
Cell[82992, 1753, 54664, 903, 92, "Output",ExpressionUUID->"fce1eb8b-8745-41e7-a987-e8ec083d994e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137693, 2661, 225, 4, 30, "Input",ExpressionUUID->"88ef35b7-243e-408d-addb-f677657a63e7"],
Cell[137921, 2667, 65062, 1074, 167, "Output",ExpressionUUID->"51d615bc-b479-4a8b-aae2-955a7856580e"]
}, Open  ]],
Cell[202998, 3744, 684, 19, 94, "Input",ExpressionUUID->"e5857106-4462-4e1a-a8cc-43cd82a97fb0"],
Cell[CellGroupData[{
Cell[203707, 3767, 244, 5, 30, "Input",ExpressionUUID->"be5da3c0-8305-45f4-bc7c-65c13f743d6a"],
Cell[203954, 3774, 425, 8, 34, "Output",ExpressionUUID->"8e703b54-38c7-4539-91e0-5ed6cd8f2dfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204416, 3787, 246, 5, 30, "Input",ExpressionUUID->"fa29f6b8-f609-485c-ba1f-65736fbf7e8a"],
Cell[204665, 3794, 415, 8, 34, "Output",ExpressionUUID->"b07cae4d-cbf5-43d6-a206-0b58ddb1d7f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205117, 3807, 221, 4, 30, "Input",ExpressionUUID->"14f6392c-789a-461f-96ca-1a5d6bb63342"],
Cell[205341, 3813, 378, 8, 34, "Output",ExpressionUUID->"a1ea2207-4b7e-4f18-bcd2-f1fa3ea269b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205756, 3826, 200, 4, 30, "Input",ExpressionUUID->"9366fbdd-b7db-4a53-b41e-b5dcac778530"],
Cell[205959, 3832, 9771, 243, 158, "Output",ExpressionUUID->"7e0a30c7-fd34-459d-999b-70efdcab7740"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215767, 4080, 196, 4, 30, "Input",ExpressionUUID->"38382f86-113c-4dba-861f-65abe136431a"],
Cell[215966, 4086, 9632, 241, 172, "Output",ExpressionUUID->"9b415b28-449b-46f8-ad12-357a1313a366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225635, 4332, 224, 5, 30, "Input",ExpressionUUID->"9b176e0c-0319-4072-8ded-dcd3bd2508cd"],
Cell[225862, 4339, 518, 11, 24, "Message",ExpressionUUID->"fb8c5f85-6d9d-48d6-829c-90857a1d440e"],
Cell[226383, 4352, 362, 11, 34, "Output",ExpressionUUID->"bf90012d-9e5b-419b-a3ad-c92ad3e10cb5"]
}, Open  ]],
Cell[226760, 4366, 574, 16, 52, "Input",ExpressionUUID->"873409ad-e110-485c-a318-1c9dfa45b078"],
Cell[CellGroupData[{
Cell[227359, 4386, 241, 5, 30, "Input",ExpressionUUID->"5c146fa4-0f64-4766-9e74-ad858fef4e11"],
Cell[227603, 4393, 242, 5, 34, "Output",ExpressionUUID->"1395e1f1-2727-4ac1-9f46-5cdca5f20997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227882, 4403, 217, 4, 30, "Input",ExpressionUUID->"5234016c-7784-4aa2-861e-db3c70005c49"],
Cell[228102, 4409, 220, 4, 34, "Output",ExpressionUUID->"2dd91ba7-ca06-4053-84aa-5ef3ead0b1c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228359, 4418, 253, 6, 52, "Input",ExpressionUUID->"5b878a0d-0861-4010-9ece-4af8f48ac751"],
Cell[228615, 4426, 158, 3, 34, "Output",ExpressionUUID->"c44d9998-fab7-4f13-8a7e-5fbd7100e357"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228810, 4434, 217, 4, 30, "Input",ExpressionUUID->"e33c5bc8-c42f-42c0-b9a3-92d6583d3130"],
Cell[229030, 4440, 195, 4, 34, "Output",ExpressionUUID->"535c12a4-f444-4fa5-b40d-a851f3030ef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229262, 4449, 199, 4, 30, "Input",ExpressionUUID->"36aa7158-40c4-41db-9aff-a49f0afabab1"],
Cell[229464, 4455, 9774, 243, 158, "Output",ExpressionUUID->"34f48665-c5a5-4230-84fe-3dc3c1eb7c8e"]
}, Open  ]],
Cell[239253, 4701, 553, 15, 94, "Input",ExpressionUUID->"9ab3b2d2-42ad-4bd0-acb4-1c0ac23d865d"],
Cell[239809, 4718, 422, 12, 30, "Input",ExpressionUUID->"248ad765-0603-4576-9dad-4c7fa9ccd555"],
Cell[CellGroupData[{
Cell[240256, 4734, 282, 6, 30, "Input",ExpressionUUID->"7e68caa9-0ef9-4fc2-b0a3-3b3badacf4b3"],
Cell[240541, 4742, 226, 5, 34, "Output",ExpressionUUID->"ae6acd2f-15bd-49b8-ae9a-51453a805b1e"]
}, Open  ]],
Cell[240782, 4750, 480, 12, 30, "Input",ExpressionUUID->"eae3d252-1454-426f-82a4-942dbd34aae0"],
Cell[CellGroupData[{
Cell[241287, 4766, 389, 9, 30, "Input",ExpressionUUID->"09001993-24c9-4fcf-89c1-ff9a0d7f5d5a"],
Cell[241679, 4777, 7975, 217, 34, "Output",ExpressionUUID->"23b2bf26-1230-4b6d-9c33-779e77cd0011"]
}, Open  ]],
Cell[249669, 4997, 210, 4, 30, "Input",ExpressionUUID->"37c18e18-bfe3-49c4-a93b-a39642dabd44"],
Cell[249882, 5003, 173, 3, 52, InheritFromParent,ExpressionUUID->"7c065edd-ab41-4ec2-82d4-9efae695d750"],
Cell[250058, 5008, 243, 6, 35, "Text",ExpressionUUID->"a69ae5b0-0aa2-4c63-8820-b87503294a42"],
Cell[CellGroupData[{
Cell[250326, 5018, 590, 17, 30, "Input",ExpressionUUID->"289cf87d-593f-4339-b011-785c90b622ce"],
Cell[250919, 5037, 2366, 61, 56, "Output",ExpressionUUID->"d9d9716d-7103-427b-a3c5-b65b0aad0842"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253322, 5103, 781, 21, 30, "Input",ExpressionUUID->"31bdbf43-ccaf-4de3-8ecb-c6f8aed64409"],
Cell[254106, 5126, 310, 6, 34, "Output",ExpressionUUID->"a089384a-5851-42ec-854b-399bd35920fd"]
}, Open  ]],
Cell[254431, 5135, 455, 12, 73, "Input",ExpressionUUID->"f8366a83-4d71-475a-bf70-dd2cf7b15772"],
Cell[CellGroupData[{
Cell[254911, 5151, 252, 6, 30, "Input",ExpressionUUID->"091b9db1-5ae9-4e93-9e97-a4da9687c32f"],
Cell[255166, 5159, 157, 3, 34, "Output",ExpressionUUID->"5e4d2ef0-5171-4e98-93f4-aa60cdbba9b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255360, 5167, 285, 7, 30, "Input",ExpressionUUID->"d2cf3db9-510e-4b2f-b4f4-d393bc48f914"],
Cell[255648, 5176, 156, 3, 34, "Output",ExpressionUUID->"7b2a7fac-f2c4-4e3c-aa6a-33962f9d4ce2"]
}, Open  ]],
Cell[255819, 5182, 148, 3, 35, "Text",ExpressionUUID->"e01fe10d-b5cd-4c26-8afa-5fb45b81964c"],
Cell[CellGroupData[{
Cell[255992, 5189, 958, 28, 30, "Input",ExpressionUUID->"99edb372-ed51-48a5-abcc-8f13ab257fcd"],
Cell[256953, 5219, 15224, 367, 421, "Output",ExpressionUUID->"19525e52-0086-47bf-9d53-045a603414e7"]
}, Open  ]],
Cell[272192, 5589, 154, 3, 30, "Input",ExpressionUUID->"aa19630e-f1e8-4c9b-9d64-dc0b9c3b8ee0"],
Cell[272349, 5594, 676, 19, 30, "Input",ExpressionUUID->"e9b9a377-fe42-40f7-8c9a-bfa8ad1bba34"],
Cell[CellGroupData[{
Cell[273050, 5617, 293, 7, 30, "Input",ExpressionUUID->"d8a6a83f-e0e4-4c76-b06c-504376020f52"],
Cell[273346, 5626, 265, 6, 34, "Output",ExpressionUUID->"a5ad11fb-1f54-4d51-b613-64ad8491d5d2"]
}, Open  ]],
Cell[273626, 5635, 209, 4, 30, "Input",ExpressionUUID->"101aae7c-881c-400f-af9d-d1b9d15b67e1"],
Cell[CellGroupData[{
Cell[273860, 5643, 750, 20, 30, "Input",ExpressionUUID->"fac6dd7c-cd5f-46b0-b3eb-17441f349c1e"],
Cell[274613, 5665, 1144, 27, 34, "Output",ExpressionUUID->"4d101728-7048-46e5-9dd0-93f26896e776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275794, 5697, 208, 4, 30, "Input",ExpressionUUID->"6196ece6-c4c7-41aa-8604-afc663f9c2d0"],
Cell[276005, 5703, 591, 18, 185, "Output",ExpressionUUID->"07597bfe-d435-495b-a6af-4173c589e18f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276633, 5726, 213, 4, 30, "Input",ExpressionUUID->"10579daa-302d-4ca6-a985-dc9ece9861b8"],
Cell[276849, 5732, 944, 22, 449, "Output",ExpressionUUID->"f13438e9-2250-4213-83fb-9b86833988e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277830, 5759, 808, 21, 30, "Input",ExpressionUUID->"a7a7e4ba-0a42-452f-a880-bec6d3c3fcf8"],
Cell[278641, 5782, 8449, 147, 377, 2790, 53, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e09f7534-a9b1-4a85-98ef-1ab8b28dbc6f"]
}, Open  ]],
Cell[287105, 5932, 130, 3, 30, "Input",ExpressionUUID->"c34b690c-2407-4e41-850a-1a841ecb627a"],
Cell[CellGroupData[{
Cell[287260, 5939, 534, 16, 30, "Input",ExpressionUUID->"ff2c190d-8203-45b1-9caf-82f12157a708"],
Cell[287797, 5957, 1498, 25, 245, "Output",ExpressionUUID->"9b775cc7-a620-47b9-a12c-1e07933711a9"]
}, Open  ]],
Cell[289310, 5985, 395, 11, 30, "Input",ExpressionUUID->"be3d9019-aa6a-4c42-98e3-668b0bc82baf"],
Cell[CellGroupData[{
Cell[289730, 6000, 229, 5, 30, "Input",ExpressionUUID->"0b5dd8a8-0fe5-4c2b-bb94-d887f1c3f08d"],
Cell[289962, 6007, 201, 4, 51, "Output",ExpressionUUID->"fbd171ad-b727-4b53-9a7b-6bb506223402"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290200, 6016, 391, 11, 30, "Input",ExpressionUUID->"f8f8e40c-2266-413e-ae36-9f36eda6f06d"],
Cell[290594, 6029, 360, 12, 38, "Output",ExpressionUUID->"cc28840a-d14d-4f86-a13a-5c98f1d6a8e8"]
}, Open  ]],
Cell[290969, 6044, 793, 25, 73, "Input",ExpressionUUID->"8168da66-b237-45fa-87dd-dfd99c7b44fa"],
Cell[CellGroupData[{
Cell[291787, 6073, 299, 7, 30, "Input",ExpressionUUID->"ec663c52-f354-43a2-a0b4-a3c0c8ae653c"],
Cell[292089, 6082, 712, 21, 34, "Output",ExpressionUUID->"3ce79ccf-5dcd-4e53-8d62-42ea8b162234"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292838, 6108, 236, 5, 30, "Input",ExpressionUUID->"1c4ac65f-5ea7-4693-b820-9778e53ff1d9"],
Cell[293077, 6115, 153, 3, 34, "Output",ExpressionUUID->"77756648-c234-4378-a533-0e22fdf29fb3"]
}, Open  ]],
Cell[293245, 6121, 147, 3, 52, "Input",ExpressionUUID->"4a618a50-9312-4253-b76b-528bf185aec1"],
Cell[293395, 6126, 203, 4, 30, "Input",ExpressionUUID->"eb74b7ca-b799-47ad-a4bc-ae14efc00e3d"],
Cell[CellGroupData[{
Cell[293623, 6134, 418, 12, 30, "Input",ExpressionUUID->"341d3517-563d-40d1-a1e6-2bb3edc11328"],
Cell[294044, 6148, 1592, 24, 77, "Output",ExpressionUUID->"e462d553-73a8-4006-bf44-66b8ded9ccc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295673, 6177, 195, 4, 30, "Input",ExpressionUUID->"4fe49825-62e8-42d8-aa27-b464d6f5fbd8"],
Cell[295871, 6183, 316, 6, 56, "Output",ExpressionUUID->"b5ede244-4a19-4070-8191-a1eaf28a5c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296224, 6194, 357, 10, 30, "Input",ExpressionUUID->"facfa357-3c06-46a0-8f93-4735141071a0"],
Cell[296584, 6206, 198, 5, 34, "Output",ExpressionUUID->"758cda86-d767-4ad3-a724-7070cf0cfbb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296819, 6216, 1066, 33, 52, "Input",ExpressionUUID->"240792b8-8d6a-4a62-ac1a-4df802a80f50"],
Cell[297888, 6251, 15645, 490, 266, "Output",ExpressionUUID->"417080dd-39cd-421e-821f-3ec3054577ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313570, 6746, 949, 29, 30, "Input",ExpressionUUID->"b314ac02-6bbc-4d9f-a4b5-c6500ba33fe8"],
Cell[314522, 6777, 2633, 86, 56, "Output",ExpressionUUID->"d87f3da9-96ee-4598-b160-c7a49465c993"]
}, Open  ]],
Cell[317170, 6866, 147, 3, 52, "Input",ExpressionUUID->"ebe27ff1-3301-400a-8dcf-96edceff003d"],
Cell[CellGroupData[{
Cell[317342, 6873, 862, 24, 30, "Input",ExpressionUUID->"d96f56a1-ab6b-4a1f-8108-80efd0de3a60"],
Cell[318207, 6899, 2643, 65, 244, "Output",ExpressionUUID->"3e552371-5899-4cb6-8418-07ea831fbc8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320887, 6969, 691, 21, 30, "Input",ExpressionUUID->"9ef320a5-1b49-46e0-ae56-d843fd864a08"],
Cell[321581, 6992, 12141, 278, 205, "Output",ExpressionUUID->"d1f2c9f5-d0c6-4fac-a846-7aec8d5d7a38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333759, 7275, 815, 23, 30, "Input",ExpressionUUID->"fc649e7a-bded-4463-9480-3696352cb665"],
Cell[334577, 7300, 16039, 270, 449, 10950, 186, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6a3889db-50e8-4523-8ae9-81b33d8f8a7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350653, 7575, 1113, 31, 30, "Input",ExpressionUUID->"dd5554aa-0187-4852-9b08-7ded9486546d"],
Cell[351769, 7608, 2655, 64, 270, "Output",ExpressionUUID->"c8083af5-c8c0-46da-a5c5-304daed1f7b4"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

